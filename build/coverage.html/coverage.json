{"/home/travis/build/npmtest/node-npmtest-bookshelf/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-bookshelf/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_bookshelf */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-bookshelf/lib.npmtest_bookshelf.js":{"path":"/home/travis/build/npmtest/node-npmtest-bookshelf/lib.npmtest_bookshelf.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":54}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":60}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_bookshelf */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_bookshelf = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_bookshelf = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-bookshelf/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-bookshelf/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":53}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":67},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-bookshelf && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_bookshelf */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_bookshelf","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_bookshelf.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_bookshelf.rollup.js'] =","            local.assetsDict['/assets.npmtest_bookshelf.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_bookshelf.__dirname + '/lib.npmtest_bookshelf.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-bookshelf/node_modules/bookshelf/bookshelf.js":{"path":"/home/travis/build/npmtest/node-npmtest-bookshelf/node_modules/bookshelf/bookshelf.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":52}}},"branchMap":{},"code":["/**"," * (c) 2013-present Tim Griesser"," * Bookshelf may be freely distributed under the MIT license."," * For all details and documentation:"," * http://bookshelfjs.org"," *"," */","module.exports = require('./lib/bookshelf').default;",""],"l":{"8":1}},"/home/travis/build/npmtest/node-npmtest-bookshelf/node_modules/bookshelf/lib/bookshelf.js":{"path":"/home/travis/build/npmtest/node-npmtest-bookshelf/node_modules/bookshelf/lib/bookshelf.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":6,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":1,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":1,"64":0,"65":0,"66":1},"b":{"1":[3,3],"2":[6,6],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":6,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":33,"loc":{"start":{"line":33,"column":0},"end":{"line":33,"column":37}}},"2":{"name":"Bookshelf","line":49,"loc":{"start":{"line":49,"column":0},"end":{"line":49,"column":25}}},"3":{"name":"_relation","line":62,"loc":{"start":{"line":62,"column":15},"end":{"line":62,"column":57}}},"4":{"name":"collection","line":109,"loc":{"start":{"line":109,"column":16},"end":{"line":109,"column":53}}},"5":{"name":"count","line":131,"loc":{"start":{"line":131,"column":11},"end":{"line":131,"column":43}}},"6":{"name":"fetchAll","line":146,"loc":{"start":{"line":146,"column":14},"end":{"line":146,"column":41}}},"7":{"name":"transaction","line":246,"loc":{"start":{"line":246,"column":17},"end":{"line":246,"column":40}}},"8":{"name":"plugin","line":267,"loc":{"start":{"line":267,"column":12},"end":{"line":267,"column":46}}},"9":{"name":"(anonymous_9)","line":282,"loc":{"start":{"line":282,"column":35},"end":{"line":282,"column":48}}},"10":{"name":"forge","line":304,"loc":{"start":{"line":304,"column":2},"end":{"line":304,"column":19}}},"11":{"name":"builderFn","line":308,"loc":{"start":{"line":308,"column":2},"end":{"line":308,"column":41}}},"12":{"name":"(anonymous_12)","line":324,"loc":{"start":{"line":324,"column":31},"end":{"line":324,"column":47}}},"13":{"name":"(anonymous_13)","line":330,"loc":{"start":{"line":330,"column":29},"end":{"line":330,"column":47}}},"14":{"name":"(anonymous_14)","line":331,"loc":{"start":{"line":331,"column":41},"end":{"line":331,"column":53}}},"15":{"name":"(anonymous_15)","line":348,"loc":{"start":{"line":348,"column":23},"end":{"line":348,"column":39}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":32}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":36}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":49}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":39}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":47}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":32}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":45}},"9":{"start":{"line":21,"column":0},"end":{"line":21,"column":42}},"10":{"start":{"line":23,"column":0},"end":{"line":23,"column":55}},"11":{"start":{"line":25,"column":0},"end":{"line":25,"column":39}},"12":{"start":{"line":27,"column":0},"end":{"line":27,"column":52}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":34}},"14":{"start":{"line":31,"column":0},"end":{"line":31,"column":47}},"15":{"start":{"line":33,"column":0},"end":{"line":33,"column":95}},"16":{"start":{"line":33,"column":39},"end":{"line":33,"column":93}},"17":{"start":{"line":49,"column":0},"end":{"line":338,"column":1}},"18":{"start":{"line":50,"column":2},"end":{"line":52,"column":4}},"19":{"start":{"line":54,"column":2},"end":{"line":149,"column":5}},"20":{"start":{"line":63,"column":6},"end":{"line":65,"column":7}},"21":{"start":{"line":64,"column":8},"end":{"line":64,"column":141}},"22":{"start":{"line":66,"column":6},"end":{"line":66,"column":49}},"23":{"start":{"line":110,"column":6},"end":{"line":110,"column":103}},"24":{"start":{"line":132,"column":6},"end":{"line":132,"column":49}},"25":{"start":{"line":147,"column":6},"end":{"line":147,"column":44}},"26":{"start":{"line":151,"column":2},"end":{"line":188,"column":5}},"27":{"start":{"line":192,"column":2},"end":{"line":192,"column":37}},"28":{"start":{"line":193,"column":2},"end":{"line":193,"column":42}},"29":{"start":{"line":195,"column":2},"end":{"line":197,"column":5}},"30":{"start":{"line":203,"column":2},"end":{"line":290,"column":5}},"31":{"start":{"line":247,"column":6},"end":{"line":247,"column":58}},"32":{"start":{"line":268,"column":6},"end":{"line":268,"column":23}},"33":{"start":{"line":270,"column":6},"end":{"line":287,"column":7}},"34":{"start":{"line":271,"column":8},"end":{"line":280,"column":9}},"35":{"start":{"line":272,"column":10},"end":{"line":272,"column":57}},"36":{"start":{"line":274,"column":10},"end":{"line":276,"column":11}},"37":{"start":{"line":275,"column":12},"end":{"line":275,"column":20}},"38":{"start":{"line":277,"column":10},"end":{"line":279,"column":11}},"39":{"start":{"line":278,"column":12},"end":{"line":278,"column":44}},"40":{"start":{"line":281,"column":13},"end":{"line":287,"column":7}},"41":{"start":{"line":282,"column":8},"end":{"line":284,"column":11}},"42":{"start":{"line":283,"column":10},"end":{"line":283,"column":35}},"43":{"start":{"line":286,"column":8},"end":{"line":286,"column":31}},"44":{"start":{"line":288,"column":6},"end":{"line":288,"column":18}},"45":{"start":{"line":299,"column":2},"end":{"line":299,"column":24}},"46":{"start":{"line":304,"column":2},"end":{"line":306,"column":3}},"47":{"start":{"line":305,"column":4},"end":{"line":305,"column":109}},"48":{"start":{"line":308,"column":2},"end":{"line":327,"column":3}},"49":{"start":{"line":309,"column":4},"end":{"line":309,"column":22}},"50":{"start":{"line":311,"column":4},"end":{"line":311,"column":23}},"51":{"start":{"line":313,"column":4},"end":{"line":322,"column":5}},"52":{"start":{"line":314,"column":6},"end":{"line":314,"column":51}},"53":{"start":{"line":315,"column":11},"end":{"line":322,"column":5}},"54":{"start":{"line":316,"column":6},"end":{"line":316,"column":46}},"55":{"start":{"line":321,"column":6},"end":{"line":321,"column":35}},"56":{"start":{"line":324,"column":4},"end":{"line":326,"column":7}},"57":{"start":{"line":325,"column":6},"end":{"line":325,"column":43}},"58":{"start":{"line":330,"column":2},"end":{"line":335,"column":5}},"59":{"start":{"line":331,"column":4},"end":{"line":334,"column":6}},"60":{"start":{"line":332,"column":6},"end":{"line":332,"column":31}},"61":{"start":{"line":333,"column":6},"end":{"line":333,"column":51}},"62":{"start":{"line":337,"column":2},"end":{"line":337,"column":19}},"63":{"start":{"line":348,"column":0},"end":{"line":351,"column":2}},"64":{"start":{"line":349,"column":2},"end":{"line":349,"column":111}},"65":{"start":{"line":350,"column":2},"end":{"line":350,"column":29}},"66":{"start":{"line":354,"column":0},"end":{"line":354,"column":28}}},"branchMap":{"1":{"line":33,"type":"cond-expr","locations":[{"start":{"line":33,"column":70},"end":{"line":33,"column":73}},{"start":{"line":33,"column":76},"end":{"line":33,"column":92}}]},"2":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":46},"end":{"line":33,"column":49}},{"start":{"line":33,"column":53},"end":{"line":33,"column":67}}]},"3":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":6},"end":{"line":63,"column":6}},{"start":{"line":63,"column":6},"end":{"line":63,"column":6}}]},"4":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":10},"end":{"line":63,"column":28}},{"start":{"line":63,"column":32},"end":{"line":63,"column":64}}]},"5":{"line":110,"type":"binary-expr","locations":[{"start":{"line":110,"column":38},"end":{"line":110,"column":44}},{"start":{"line":110,"column":48},"end":{"line":110,"column":50}}]},"6":{"line":270,"type":"if","locations":[{"start":{"line":270,"column":6},"end":{"line":270,"column":6}},{"start":{"line":270,"column":6},"end":{"line":270,"column":6}}]},"7":{"line":274,"type":"if","locations":[{"start":{"line":274,"column":10},"end":{"line":274,"column":10}},{"start":{"line":274,"column":10},"end":{"line":274,"column":10}}]},"8":{"line":277,"type":"if","locations":[{"start":{"line":277,"column":10},"end":{"line":277,"column":10}},{"start":{"line":277,"column":10},"end":{"line":277,"column":10}}]},"9":{"line":281,"type":"if","locations":[{"start":{"line":281,"column":13},"end":{"line":281,"column":13}},{"start":{"line":281,"column":13},"end":{"line":281,"column":13}}]},"10":{"line":313,"type":"if","locations":[{"start":{"line":313,"column":4},"end":{"line":313,"column":4}},{"start":{"line":313,"column":4},"end":{"line":313,"column":4}}]},"11":{"line":315,"type":"if","locations":[{"start":{"line":315,"column":11},"end":{"line":315,"column":11}},{"start":{"line":315,"column":11},"end":{"line":315,"column":11}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _lodash = require('lodash');","","var _helpers = require('./helpers');","","var _helpers2 = _interopRequireDefault(_helpers);","","var _events = require('./base/events');","","var _events2 = _interopRequireDefault(_events);","","var _model = require('./model');","","var _model2 = _interopRequireDefault(_model);","","var _collection = require('./collection');","","var _collection2 = _interopRequireDefault(_collection);","","var _relation2 = require('./relation');","","var _relation3 = _interopRequireDefault(_relation2);","","var _errors = require('./errors');","","var _errors2 = _interopRequireDefault(_errors);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * @class Bookshelf"," * @classdesc"," *"," * The Bookshelf library is initialized by passing an initialized Knex client"," * instance. The knex documentation provides a number of examples for different"," * databases."," *"," * @constructor"," * @param {Knex} knex Knex instance."," */","","","// All core modules required for the bookshelf instance.","function Bookshelf(knex) {","  var bookshelf = {","    VERSION: require('../package.json').version","  };","","  var Model = bookshelf.Model = _model2.default.extend({","","    _builder: builderFn,","","    // The `Model` constructor is referenced as a property on the `Bookshelf`","    // instance, mixing in the correct `builder` method, as well as the","    // `relation` method, passing in the correct `Model` & `Collection`","    // constructors for later reference.","    _relation: function _relation(type, Target, options) {","      if (type !== 'morphTo' && !(0, _lodash.isFunction)(Target)) {","        throw new Error('A valid target model must be defined for the ' + (0, _lodash.result)(this, 'tableName') + ' ' + type + ' relation');","      }","      return new Relation(type, Target, options);","    }","  }, {","","    /**","     * @method Model.forge","     * @belongsTo Model","     * @description","     *","     * A simple helper function to instantiate a new Model without needing `new`.","     *","     * @param {Object=} attributes Initial values for this model's attributes.","     * @param {Object=}  options               Hash of options.","     * @param {string=}  options.tableName     Initial value for {@linkcode Model#tableName tableName}.","     * @param {boolean=} [options.hasTimestamps=false]","     *","     *   Initial value for {@linkcode Model#hasTimestamps hasTimestamps}.","     *","     * @param {boolean} [options.parse=false]","     *","     *   Convert attributes by {@linkcode Model#parse parse} before being","     *   {@linkcode Model#set set} on the `model`.","     */","    forge: forge,","","    /**","     * @method Model.collection","     * @belongsTo Model","     * @description","     *","     * A simple static helper to instantiate a new {@link Collection}, setting","     * the current `model` as the collection's target.","     *","     * @example","     *","     * Customer.collection().fetch().then(function(collection) {","     *   // ...","     * });","     *","     * @param {(Model[])=} models","     * @param {Object=} options","     * @returns {Collection}","     */","    collection: function collection(models, options) {","      return new bookshelf.Collection(models || [], (0, _lodash.extend)({}, options, { model: this }));","    },","","","    /**","     * @method Model.count","     * @belongsTo Model","     * @since 0.8.2","     * @description","     *","     * Gets the number of matching records in the database, respecting any","     * previous calls to {@link Model#query query}. If a `column` is provided,","     * records with a null value in that column will be excluded from the count.","     *","     * @param {string} [column='*']","     *   Specify a column to count - rows with null values in this column will be excluded.","     * @param {Object=} options","     *   Hash of options.","     * @returns {Promise<Number>}","     *   A promise resolving to the number of matching rows.","     */","    count: function count(column, options) {","      return this.forge().count(column, options);","    },","","","    /**","     * @method Model.fetchAll","     * @belongsTo Model","     * @description","     *","     * Simple helper function for retrieving all instances of the given model.","     *","     * @see Model#fetchAll","     * @returns {Promise<Collection>}","     */","    fetchAll: function fetchAll(options) {","      return this.forge().fetchAll(options);","    }","  });","","  var Collection = bookshelf.Collection = _collection2.default.extend({","","    _builder: builderFn","","  }, {","","    /**","     * @method Collection.forge","     * @belongsTo Collection","     * @description","     *","     * A simple helper function to instantiate a new Collection without needing","     * new.","     *","     * @param {(Object[]|Model[])=} [models]","     *   Set of models (or attribute hashes) with which to initialize the","     *   collection.","     * @param {Object} options Hash of options.","     *","     * @example","     *","     * var Promise = require('bluebird');","     * var Accounts = bookshelf.Collection.extend({","     *   model: Account","     * });","     *","     * var accounts = Accounts.forge([","     *   {name: 'Person1'},","     *   {name: 'Person2'}","     * ]);","     *","     * Promise.all(accounts.invoke('save')).then(function() {","     *   // collection models should now be saved...","     * });","     */","    forge: forge","","  });","","  // The collection also references the correct `Model`, specified above, for","  // creating new `Model` instances in the collection.","  Collection.prototype.model = Model;","  Model.prototype.Collection = Collection;","","  var Relation = _relation3.default.extend({","    Model: Model, Collection: Collection","  });","","  // A `Bookshelf` instance may be used as a top-level pub-sub bus, as it mixes","  // in the `Events` object. It also contains the version number, and a","  // `Transaction` method referencing the correct version of `knex` passed into","  // the object.","  (0, _lodash.extend)(bookshelf, _events2.default, _errors2.default, {","","    /**","     * @method Bookshelf#transaction","     * @memberOf Bookshelf","     * @description","     *","     * An alias to `{@link http://knexjs.org/#Transactions","     * Knex#transaction}`, the `transaction` object must be passed along in the","     * options of any relevant Bookshelf calls, to ensure all queries are on the","     * same connection. The entire transaction block is a promise that will","     * resolve when the transaction is committed, or fail if the transaction is","     * rolled back.","     *","     *     var Promise = require('bluebird');","     *","     *     Bookshelf.transaction(function(t) {","     *       return new Library({name: 'Old Books'})","     *         .save(null, {transacting: t})","     *         .tap(function(model) {","     *           return Promise.map([","     *             {title: 'Canterbury Tales'},","     *             {title: 'Moby Dick'},","     *             {title: 'Hamlet'}","     *           ], function(info) {","     *             // Some validation could take place here.","     *             return new Book(info).save({'shelf_id': model.id}, {transacting: t});","     *           });","     *         });","     *     }).then(function(library) {","     *       console.log(library.related('books').pluck('title'));","     *     }).catch(function(err) {","     *       console.error(err);","     *     });","     *","     * @param {Bookshelf~transactionCallback} transactionCallback","     *    Callback containing transaction logic. The callback should return a","     *    promise.","     *","     * @returns {Promise<mixed>}","     *    A promise resolving to the value returned from {@link","     *    Bookshelf~transactionCallback transactionCallback}.","     */","    transaction: function transaction() {","      return this.knex.transaction.apply(this, arguments);","    },","","","    /**","     * @callback Bookshelf~transactionCallback","     * @description","     *","     * A transaction block to be provided to {@link Bookshelf#transaction}.","     *","     * @see {@link http://knexjs.org/#Transactions Knex#transaction}","     * @see Bookshelf#transaction","     *","     * @param {Transaction} transaction","     * @returns {Promise<mixed>}","     */","","    // Provides a nice, tested, standardized way of adding plugins to a","    // `Bookshelf` instance, injecting the current instance into the plugin,","    // which should be a module.exports.","    plugin: function plugin(_plugin, options) {","      var _this = this;","","      if ((0, _lodash.isString)(_plugin)) {","        try {","          require('./plugins/' + _plugin)(this, options);","        } catch (e) {","          if (e.code !== 'MODULE_NOT_FOUND') {","            throw e;","          }","          if (!process.browser) {","            require(_plugin)(this, options);","          }","        }","      } else if ((0, _lodash.isArray)(_plugin)) {","        (0, _lodash.each)(_plugin, function (p) {","          _this.plugin(p, options);","        });","      } else {","        _plugin(this, options);","      }","      return this;","    }","  });","","  /**","   * @member Bookshelf#knex","   * @memberOf Bookshelf","   * @type {Knex}","   * @description","   * A reference to the {@link http://knexjs.org Knex.js} instance being used by Bookshelf.","   */","  bookshelf.knex = knex;","","  // The `forge` function properly instantiates a new Model or Collection","  // without needing the `new` operator... to make object creation cleaner","  // and more chainable.","  function forge() {","    return new (Function.prototype.bind.apply(this, [null].concat(Array.prototype.slice.call(arguments))))();","  }","","  function builderFn(tableNameOrBuilder) {","    var _this2 = this;","","    var builder = null;","","    if ((0, _lodash.isString)(tableNameOrBuilder)) {","      builder = bookshelf.knex(tableNameOrBuilder);","    } else if (tableNameOrBuilder == null) {","      builder = bookshelf.knex.queryBuilder();","    } else {","      // Assuming here that `tableNameOrBuilder` is a QueryBuilder instance. Not","      // aware of a way to check that this is the case (ie. using","      // `Knex.isQueryBuilder` or equivalent).","      builder = tableNameOrBuilder;","    }","","    return builder.on('query', function (data) {","      return _this2.trigger('query', data);","    });","  }","","  // Attach `where`, `query`, and `fetchAll` as static methods.","  ['where', 'query'].forEach(function (method) {","    Model[method] = Collection[method] = function () {","      var model = this.forge();","      return model[method].apply(model, arguments);","    };","  });","","  return bookshelf;","}","","// Constructor for a new `Bookshelf` object, it accepts an active `knex`","// instance and initializes the appropriate `Model` and `Collection`","// constructors for use in the current instance.","","","// We've supplemented `Events` with a `triggerThen` method to allow for","// asynchronous event handling via promises. We also mix this into the","// prototypes of the main objects in the library.","Bookshelf.initialize = function (knex) {","  _helpers2.default.warn(\"Bookshelf.initialize is deprecated, pass knex directly: require('bookshelf')(knex)\");","  return new Bookshelf(knex);","};","","// Finally, export `Bookshelf` to the world.","exports.default = Bookshelf;"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":1,"21":1,"23":1,"25":1,"27":1,"29":1,"31":1,"33":6,"49":1,"50":0,"54":0,"63":0,"64":0,"66":0,"110":0,"132":0,"147":0,"151":0,"192":0,"193":0,"195":0,"203":0,"247":0,"268":0,"270":0,"271":0,"272":0,"274":0,"275":0,"277":0,"278":0,"281":0,"282":0,"283":0,"286":0,"288":0,"299":0,"304":1,"305":0,"308":1,"309":0,"311":0,"313":0,"314":0,"315":0,"316":0,"321":0,"324":0,"325":0,"330":0,"331":0,"332":0,"333":0,"337":0,"348":1,"349":0,"350":0,"354":1}},"/home/travis/build/npmtest/node-npmtest-bookshelf/node_modules/bookshelf/lib/helpers.js":{"path":"/home/travis/build/npmtest/node-npmtest-bookshelf/node_modules/bookshelf/lib/helpers.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1},"b":{"1":[0,0],"2":[0,0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"saveConstraints","line":13,"loc":{"start":{"line":13,"column":19},"end":{"line":13,"column":64}}},"2":{"name":"morphCandidate","line":24,"loc":{"start":{"line":24,"column":18},"end":{"line":24,"column":68}}},"3":{"name":"(anonymous_3)","line":25,"loc":{"start":{"line":25,"column":36},"end":{"line":25,"column":57}}},"4":{"name":"query","line":39,"loc":{"start":{"line":39,"column":9},"end":{"line":39,"column":35}}},"5":{"name":"error","line":74,"loc":{"start":{"line":74,"column":9},"end":{"line":74,"column":29}}},"6":{"name":"warn","line":78,"loc":{"start":{"line":78,"column":8},"end":{"line":78,"column":27}}},"7":{"name":"deprecate","line":82,"loc":{"start":{"line":82,"column":13},"end":{"line":82,"column":38}}},"8":{"name":"orderBy","line":86,"loc":{"start":{"line":86,"column":11},"end":{"line":86,"column":46}}},"9":{"name":"(anonymous_9)","line":115,"loc":{"start":{"line":115,"column":21},"end":{"line":115,"column":35}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":26}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":29}},"3":{"start":{"line":10,"column":0},"end":{"line":119,"column":2}},"4":{"start":{"line":14,"column":4},"end":{"line":14,"column":18}},"5":{"start":{"line":15,"column":4},"end":{"line":18,"column":5}},"6":{"start":{"line":16,"column":6},"end":{"line":16,"column":109}},"7":{"start":{"line":17,"column":6},"end":{"line":17,"column":99}},"8":{"start":{"line":17,"column":33},"end":{"line":17,"column":99}},"9":{"start":{"line":19,"column":4},"end":{"line":19,"column":40}},"10":{"start":{"line":25,"column":4},"end":{"line":27,"column":7}},"11":{"start":{"line":26,"column":6},"end":{"line":26,"column":73}},"12":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"13":{"start":{"line":29,"column":6},"end":{"line":29,"column":68}},"14":{"start":{"line":31,"column":4},"end":{"line":31,"column":18}},"15":{"start":{"line":42,"column":4},"end":{"line":45,"column":5}},"16":{"start":{"line":43,"column":6},"end":{"line":43,"column":49}},"17":{"start":{"line":44,"column":6},"end":{"line":44,"column":42}},"18":{"start":{"line":48,"column":4},"end":{"line":48,"column":44}},"19":{"start":{"line":48,"column":27},"end":{"line":48,"column":44}},"20":{"start":{"line":50,"column":4},"end":{"line":50,"column":25}},"21":{"start":{"line":52,"column":4},"end":{"line":70,"column":5}},"22":{"start":{"line":56,"column":6},"end":{"line":56,"column":40}},"23":{"start":{"line":57,"column":11},"end":{"line":70,"column":5}},"24":{"start":{"line":61,"column":6},"end":{"line":64,"column":7}},"25":{"start":{"line":62,"column":8},"end":{"line":62,"column":74}},"26":{"start":{"line":63,"column":8},"end":{"line":63,"column":48}},"27":{"start":{"line":69,"column":6},"end":{"line":69,"column":56}},"28":{"start":{"line":71,"column":4},"end":{"line":71,"column":15}},"29":{"start":{"line":75,"column":4},"end":{"line":75,"column":32}},"30":{"start":{"line":79,"column":4},"end":{"line":79,"column":35}},"31":{"start":{"line":83,"column":4},"end":{"line":83,"column":75}},"32":{"start":{"line":88,"column":4},"end":{"line":88,"column":27}},"33":{"start":{"line":89,"column":4},"end":{"line":89,"column":29}},"34":{"start":{"line":91,"column":4},"end":{"line":97,"column":5}},"35":{"start":{"line":92,"column":6},"end":{"line":92,"column":48}},"36":{"start":{"line":93,"column":6},"end":{"line":93,"column":93}},"37":{"start":{"line":95,"column":6},"end":{"line":95,"column":54}},"38":{"start":{"line":96,"column":6},"end":{"line":96,"column":105}},"39":{"start":{"line":99,"column":4},"end":{"line":99,"column":23}},"40":{"start":{"line":101,"column":4},"end":{"line":107,"column":5}},"41":{"start":{"line":102,"column":6},"end":{"line":102,"column":28}},"42":{"start":{"line":103,"column":11},"end":{"line":107,"column":5}},"43":{"start":{"line":104,"column":6},"end":{"line":104,"column":19}},"44":{"start":{"line":106,"column":6},"end":{"line":106,"column":26}},"45":{"start":{"line":109,"column":4},"end":{"line":109,"column":77}},"46":{"start":{"line":111,"column":4},"end":{"line":113,"column":5}},"47":{"start":{"line":112,"column":6},"end":{"line":112,"column":38}},"48":{"start":{"line":115,"column":4},"end":{"line":117,"column":7}},"49":{"start":{"line":116,"column":6},"end":{"line":116,"column":32}},"50":{"start":{"line":121,"column":0},"end":{"line":121,"column":25}}},"branchMap":{"1":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":15,"column":4}},{"start":{"line":15,"column":4},"end":{"line":15,"column":4}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":8},"end":{"line":15,"column":19}},{"start":{"line":15,"column":23},"end":{"line":15,"column":47}},{"start":{"line":15,"column":51},"end":{"line":15,"column":87}},{"start":{"line":15,"column":91},"end":{"line":15,"column":123}}]},"3":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":44},"end":{"line":16,"column":64}},{"start":{"line":16,"column":68},"end":{"line":16,"column":108}}]},"4":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":6},"end":{"line":17,"column":6}},{"start":{"line":17,"column":6},"end":{"line":17,"column":6}}]},"5":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":28,"column":4}},{"start":{"line":28,"column":4},"end":{"line":28,"column":4}}]},"6":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":42,"column":4}},{"start":{"line":42,"column":4},"end":{"line":42,"column":4}}]},"7":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":4},"end":{"line":48,"column":4}},{"start":{"line":48,"column":4},"end":{"line":48,"column":4}}]},"8":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":52,"column":4}},{"start":{"line":52,"column":4},"end":{"line":52,"column":4}}]},"9":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":11},"end":{"line":57,"column":11}},{"start":{"line":57,"column":11},"end":{"line":57,"column":11}}]},"10":{"line":62,"type":"cond-expr","locations":[{"start":{"line":62,"column":46},"end":{"line":62,"column":57}},{"start":{"line":62,"column":60},"end":{"line":62,"column":73}}]},"11":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":4},"end":{"line":91,"column":4}},{"start":{"line":91,"column":4},"end":{"line":91,"column":4}}]},"12":{"line":93,"type":"cond-expr","locations":[{"start":{"line":93,"column":54},"end":{"line":93,"column":85}},{"start":{"line":93,"column":88},"end":{"line":93,"column":92}}]},"13":{"line":96,"type":"cond-expr","locations":[{"start":{"line":96,"column":60},"end":{"line":96,"column":97}},{"start":{"line":96,"column":100},"end":{"line":96,"column":104}}]},"14":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":4},"end":{"line":101,"column":4}},{"start":{"line":101,"column":4},"end":{"line":101,"column":4}}]},"15":{"line":101,"type":"binary-expr","locations":[{"start":{"line":101,"column":8},"end":{"line":101,"column":12}},{"start":{"line":101,"column":16},"end":{"line":101,"column":39}}]},"16":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":11},"end":{"line":103,"column":11}},{"start":{"line":103,"column":11},"end":{"line":103,"column":11}}]},"17":{"line":109,"type":"binary-expr","locations":[{"start":{"line":109,"column":17},"end":{"line":109,"column":22}},{"start":{"line":109,"column":27},"end":{"line":109,"column":75}}]},"18":{"line":109,"type":"cond-expr","locations":[{"start":{"line":109,"column":61},"end":{"line":109,"column":67}},{"start":{"line":109,"column":70},"end":{"line":109,"column":75}}]},"19":{"line":109,"type":"binary-expr","locations":[{"start":{"line":109,"column":27},"end":{"line":109,"column":31}},{"start":{"line":109,"column":35},"end":{"line":109,"column":58}}]},"20":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":4},"end":{"line":111,"column":4}},{"start":{"line":111,"column":4},"end":{"line":111,"column":4}}]}},"code":["'use strict';","","/* eslint no-console: 0 */","","// Helpers","// ---------------","var _ = require('lodash');","var chalk = require('chalk');","","var helpers = {","","  // Sets the constraints necessary during a `model.save` call.","  saveConstraints: function saveConstraints(model, relatedData) {","    var data = {};","    if (relatedData && !relatedData.isThrough() && relatedData.type !== 'belongsToMany' && relatedData.type !== 'belongsTo') {","      data[relatedData.key('foreignKey')] = relatedData.parentFk || model.get(relatedData.key('foreignKey'));","      if (relatedData.isMorph()) data[relatedData.key('morphKey')] = relatedData.key('morphValue');","    }","    return model.set(model.parse(data));","  },","","  // Finds the specific `morphTo` table we should be working with, or throws","  // an error if none is matched.","  morphCandidate: function morphCandidate(candidates, foreignTable) {","    var Target = _.find(candidates, function (Candidate) {","      return _.result(Candidate.prototype, 'tableName') === foreignTable;","    });","    if (!Target) {","      throw new Error('The target polymorphic model was not found');","    }","    return Target;","  },","","  // If there are no arguments, return the current object's","  // query builder (or create and return a new one). If there are arguments,","  // call the query builder with the first argument, applying the rest.","  // If the first argument is an object, assume the keys are query builder","  // methods, and the values are the arguments for the query.","  query: function query(obj, args) {","","    // Ensure the object has a query builder.","    if (!obj._knex) {","      var tableName = _.result(obj, 'tableName');","      obj._knex = obj._builder(tableName);","    }","","    // If there are no arguments, return the query builder.","    if (args.length === 0) return obj._knex;","","    var method = args[0];","","    if (_.isFunction(method)) {","","      // `method` is a query builder callback. Call it on the query builder","      // object.","      method.call(obj._knex, obj._knex);","    } else if (_.isObject(method)) {","","      // `method` is an object. Use keys as methods and values as arguments to","      // the query builder.","      for (var key in method) {","        var target = _.isArray(method[key]) ? method[key] : [method[key]];","        obj._knex[key].apply(obj._knex, target);","      }","    } else {","","      // Otherwise assume that the `method` is string name of a query builder","      // method, and use the remaining args as arguments to that method.","      obj._knex[method].apply(obj._knex, args.slice(1));","    }","    return obj;","  },","","  error: function error(msg) {","    console.log(chalk.red(msg));","  },","","  warn: function warn(msg) {","    console.log(chalk.yellow(msg));","  },","","  deprecate: function deprecate(a, b) {","    helpers.warn(a + ' has been deprecated, please use ' + b + ' instead');","  },","","  orderBy: function orderBy(obj, sort, order) {","","    var tableName = void 0;","    var idAttribute = void 0;","","    if (obj.model) {","      tableName = obj.model.prototype.tableName;","      idAttribute = obj.model.prototype.idAttribute ? obj.model.prototype.idAttribute : 'id';","    } else {","      tableName = obj.constructor.prototype.tableName;","      idAttribute = obj.constructor.prototype.idAttribute ? obj.constructor.prototype.idAttribute : 'id';","    }","","    var _sort = void 0;","","    if (sort && sort.indexOf('-') === 0) {","      _sort = sort.slice(1);","    } else if (sort) {","      _sort = sort;","    } else {","      _sort = idAttribute;","    }","","    var _order = order || (sort && sort.indexOf('-') === 0 ? 'DESC' : 'ASC');","","    if (_sort.indexOf('.') === -1) {","      _sort = tableName + '.' + _sort;","    }","","    return obj.query(function (qb) {","      qb.orderBy(_sort, _order);","    });","  }","};","","module.exports = helpers;"],"l":{"7":1,"8":1,"10":1,"14":0,"15":0,"16":0,"17":0,"19":0,"25":0,"26":0,"28":0,"29":0,"31":0,"42":0,"43":0,"44":0,"48":0,"50":0,"52":0,"56":0,"57":0,"61":0,"62":0,"63":0,"69":0,"71":0,"75":0,"79":0,"83":0,"88":0,"89":0,"91":0,"92":0,"93":0,"95":0,"96":0,"99":0,"101":0,"102":0,"103":0,"104":0,"106":0,"109":0,"111":0,"112":0,"115":0,"116":0,"121":1}},"/home/travis/build/npmtest/node-npmtest-bookshelf/node_modules/bookshelf/lib/base/events.js":{"path":"/home/travis/build/npmtest/node-npmtest-bookshelf/node_modules/bookshelf/lib/base/events.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":7,"19":1,"20":1,"21":0,"22":1,"23":1,"24":1,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":1},"b":{"1":[6,1],"2":[7,7],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":7,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":37,"loc":{"start":{"line":37,"column":0},"end":{"line":37,"column":37}}},"2":{"name":"eventNames","line":42,"loc":{"start":{"line":42,"column":17},"end":{"line":42,"column":43}}},"3":{"name":"(anonymous_3)","line":53,"loc":{"start":{"line":53,"column":13},"end":{"line":53,"column":38}}},"4":{"name":"Events","line":56,"loc":{"start":{"line":56,"column":2},"end":{"line":56,"column":20}}},"5":{"name":"on","line":78,"loc":{"start":{"line":78,"column":11},"end":{"line":78,"column":45}}},"6":{"name":"(anonymous_6)","line":81,"loc":{"start":{"line":81,"column":49},"end":{"line":81,"column":65}}},"7":{"name":"off","line":100,"loc":{"start":{"line":100,"column":11},"end":{"line":100,"column":37}}},"8":{"name":"(anonymous_8)","line":107,"loc":{"start":{"line":107,"column":49},"end":{"line":107,"column":65}}},"9":{"name":"trigger","line":129,"loc":{"start":{"line":129,"column":11},"end":{"line":129,"column":41}}},"10":{"name":"(anonymous_10)","line":136,"loc":{"start":{"line":136,"column":49},"end":{"line":136,"column":65}}},"11":{"name":"triggerThen","line":164,"loc":{"start":{"line":164,"column":11},"end":{"line":164,"column":45}}},"12":{"name":"(anonymous_12)","line":172,"loc":{"start":{"line":172,"column":50},"end":{"line":172,"column":66}}},"13":{"name":"(anonymous_13)","line":175,"loc":{"start":{"line":175,"column":46},"end":{"line":175,"column":66}}},"14":{"name":"once","line":198,"loc":{"start":{"line":198,"column":11},"end":{"line":198,"column":41}}},"15":{"name":"(anonymous_15)","line":201,"loc":{"start":{"line":201,"column":38},"end":{"line":201,"column":50}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":71}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":64}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":65}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":58}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":93}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":86}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":49}},"9":{"start":{"line":21,"column":0},"end":{"line":21,"column":42}},"10":{"start":{"line":23,"column":0},"end":{"line":23,"column":59}},"11":{"start":{"line":25,"column":0},"end":{"line":25,"column":52}},"12":{"start":{"line":27,"column":0},"end":{"line":27,"column":36}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":49}},"14":{"start":{"line":31,"column":0},"end":{"line":31,"column":32}},"15":{"start":{"line":33,"column":0},"end":{"line":33,"column":47}},"16":{"start":{"line":35,"column":0},"end":{"line":35,"column":32}},"17":{"start":{"line":37,"column":0},"end":{"line":37,"column":95}},"18":{"start":{"line":37,"column":39},"end":{"line":37,"column":93}},"19":{"start":{"line":39,"column":0},"end":{"line":39,"column":49}},"20":{"start":{"line":42,"column":0},"end":{"line":44,"column":2}},"21":{"start":{"line":43,"column":2},"end":{"line":43,"column":27}},"22":{"start":{"line":53,"column":0},"end":{"line":214,"column":16}},"23":{"start":{"line":54,"column":2},"end":{"line":54,"column":49}},"24":{"start":{"line":56,"column":2},"end":{"line":59,"column":3}},"25":{"start":{"line":57,"column":4},"end":{"line":57,"column":48}},"26":{"start":{"line":58,"column":4},"end":{"line":58,"column":134}},"27":{"start":{"line":61,"column":2},"end":{"line":212,"column":6}},"28":{"start":{"line":79,"column":6},"end":{"line":79,"column":24}},"29":{"start":{"line":81,"column":6},"end":{"line":83,"column":9}},"30":{"start":{"line":82,"column":8},"end":{"line":82,"column":140}},"31":{"start":{"line":84,"column":6},"end":{"line":84,"column":18}},"32":{"start":{"line":101,"column":6},"end":{"line":101,"column":24}},"33":{"start":{"line":103,"column":6},"end":{"line":105,"column":7}},"34":{"start":{"line":104,"column":8},"end":{"line":104,"column":41}},"35":{"start":{"line":107,"column":6},"end":{"line":109,"column":9}},"36":{"start":{"line":108,"column":8},"end":{"line":108,"column":47}},"37":{"start":{"line":110,"column":6},"end":{"line":110,"column":18}},"38":{"start":{"line":130,"column":6},"end":{"line":130,"column":24}},"39":{"start":{"line":132,"column":6},"end":{"line":134,"column":7}},"40":{"start":{"line":133,"column":8},"end":{"line":133,"column":41}},"41":{"start":{"line":136,"column":6},"end":{"line":138,"column":9}},"42":{"start":{"line":137,"column":8},"end":{"line":137,"column":55}},"43":{"start":{"line":139,"column":6},"end":{"line":139,"column":18}},"44":{"start":{"line":165,"column":6},"end":{"line":165,"column":24}},"45":{"start":{"line":167,"column":6},"end":{"line":169,"column":7}},"46":{"start":{"line":168,"column":8},"end":{"line":168,"column":43}},"47":{"start":{"line":171,"column":6},"end":{"line":171,"column":42}},"48":{"start":{"line":172,"column":6},"end":{"line":174,"column":9}},"49":{"start":{"line":173,"column":8},"end":{"line":173,"column":38}},"50":{"start":{"line":175,"column":6},"end":{"line":177,"column":9}},"51":{"start":{"line":176,"column":8},"end":{"line":176,"column":44}},"52":{"start":{"line":199,"column":6},"end":{"line":199,"column":24}},"53":{"start":{"line":201,"column":6},"end":{"line":208,"column":9}},"54":{"start":{"line":202,"column":8},"end":{"line":204,"column":9}},"55":{"start":{"line":203,"column":10},"end":{"line":203,"column":41}},"56":{"start":{"line":206,"column":8},"end":{"line":206,"column":34}},"57":{"start":{"line":207,"column":8},"end":{"line":207,"column":44}},"58":{"start":{"line":209,"column":6},"end":{"line":209,"column":35}},"59":{"start":{"line":210,"column":6},"end":{"line":210,"column":36}},"60":{"start":{"line":213,"column":2},"end":{"line":213,"column":16}},"61":{"start":{"line":216,"column":0},"end":{"line":216,"column":25}}},"branchMap":{"1":{"line":37,"type":"cond-expr","locations":[{"start":{"line":37,"column":70},"end":{"line":37,"column":73}},{"start":{"line":37,"column":76},"end":{"line":37,"column":92}}]},"2":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":46},"end":{"line":37,"column":49}},{"start":{"line":37,"column":53},"end":{"line":37,"column":67}}]},"3":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":59},"end":{"line":58,"column":75}},{"start":{"line":58,"column":79},"end":{"line":58,"column":108}}]},"4":{"line":82,"type":"binary-expr","locations":[{"start":{"line":82,"column":27},"end":{"line":82,"column":53}},{"start":{"line":82,"column":57},"end":{"line":82,"column":96}}]},"5":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":6},"end":{"line":103,"column":6}},{"start":{"line":103,"column":6},"end":{"line":103,"column":6}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');","","var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);","","var _createClass2 = require('babel-runtime/helpers/createClass');","","var _createClass3 = _interopRequireDefault(_createClass2);","","var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');","","var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);","","var _get2 = require('babel-runtime/helpers/get');","","var _get3 = _interopRequireDefault(_get2);","","var _inherits2 = require('babel-runtime/helpers/inherits');","","var _inherits3 = _interopRequireDefault(_inherits2);","","var _promise = require('./promise');","","var _promise2 = _interopRequireDefault(_promise);","","var _events = require('events');","","var _events2 = _interopRequireDefault(_events);","","var _lodash = require('lodash');","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","var EventEmitter = _events2.default.EventEmitter; // Events","// ---------------","","var eventNames = function eventNames(text) {","  return text.split(/\\s+/);","};","","/**"," * @class Events"," * @description"," * Base Event class inherited by {@link Model} and {@link Collection}. It's not"," * meant to be used directly, and is only displayed here for completeness."," */","","var Events = function (_EventEmitter) {","  (0, _inherits3.default)(Events, _EventEmitter);","","  function Events() {","    (0, _classCallCheck3.default)(this, Events);","    return (0, _possibleConstructorReturn3.default)(this, (Events.__proto__ || Object.getPrototypeOf(Events)).apply(this, arguments));","  }","","  (0, _createClass3.default)(Events, [{","    key: 'on',","","","    /**","     * @method Events#on","     * @description","     * Register an event listener. The callback will be invoked whenever the event","     * is fired. The event string may also be a space-delimited list of several","     * event names.","     *","     * @param {string} nameOrNames","     *   The name of the event or space separated list of events to register a","     *   callback for.","     * @param {function} callback","     *   That callback to invoke whenever the event is fired.","     */","    value: function on(nameOrNames, handler) {","      var _this2 = this;","","      (0, _lodash.each)(eventNames(nameOrNames), function (name) {","        (0, _get3.default)(Events.prototype.__proto__ || Object.getPrototypeOf(Events.prototype), 'on', _this2).call(_this2, name, handler);","      });","      return this;","    }","","    /**","     * @method Events#off","     * @description","     * Remove a previously-bound callback event listener from an object. If no","     * event name is specified, callbacks for all events will be removed.","     *","     * @param {string} nameOrNames","     *   The name of the event or space separated list of events to stop listening","     *   to.","     */","","  }, {","    key: 'off',","    value: function off(nameOrNames) {","      var _this3 = this;","","      if (nameOrNames == null) {","        return this.removeAllListeners();","      }","","      (0, _lodash.each)(eventNames(nameOrNames), function (name) {","        return _this3.removeAllListeners(name);","      });","      return this;","    }","","    /**","     * @method Events#trigger","     * @description","     * Trigger callbacks for the given event, or space-delimited list of events.","     * Subsequent arguments to `trigger` will be passed along to the event","     * callback.","     *","     * @param {string} nameOrNames","     *   The name of the event to trigger. Also accepts a space separated list of","     *   event names.","     * @param {...mixed} [args]","     *   Extra arguments to pass to the event listener callback function.","     */","","  }, {","    key: 'trigger',","    value: function trigger(nameOrNames) {","      var _this4 = this;","","      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {","        args[_key - 1] = arguments[_key];","      }","","      (0, _lodash.each)(eventNames(nameOrNames), function (name) {","        _this4.emit.apply(_this4, [name].concat(args));","      });","      return this;","    }","","    /**","     * @method Events#triggerThen","     * @description","     * A promise version of {@link Events#trigger}, returning a promise which","     * resolves with all return values from triggered event handlers. If any of the","     * event handlers throw an `Error` or return a rejected promise, the promise","     * will be rejected. Used internally on the {@link Model#creating \"creating\"},","     * {@link Model#updating \"updating\"}, {@link Model#saving \"saving\"}, and {@link","     * Model@destroying \"destroying\"} events, and can be helpful when needing async","     * event handlers (for validations, etc).","     *","     * @param {string} name","     *   The event name, or a whitespace-separated list of event names, to be","     *   triggered.","     * @param {...mixed} [args]","     *   Arguments to be passed to any registered event handlers.","     * @returns Promise<mixed[]>","     *   A promise resolving the the resolved return values of any triggered handlers.","     */","","  }, {","    key: 'triggerThen',","    value: function triggerThen(nameOrNames) {","      var _this5 = this;","","      for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {","        args[_key2 - 1] = arguments[_key2];","      }","","      var names = eventNames(nameOrNames);","      var listeners = (0, _lodash.flatMap)(names, function (name) {","        return _this5.listeners(name);","      });","      return _promise2.default.map(listeners, function (listener) {","        return listener.apply(_this5, args);","      });","    }","","    /**","     * @method Events#once","     * @description","     * Just like {@link Events#on}, but causes the bound callback to fire only","     * once before being removed. Handy for saying \"the next time that X happens,","     * do this\". When multiple events are passed in using the space separated","     * syntax, the event will fire once for every event you passed in, not once","     * for a combination of all events.","     *","     * @param {string} nameOrNames","     *   The name of the event or space separated list of events to register a","     *   callback for.","     * @param {function} callback","     *   That callback to invoke only once when the event is fired.","     */","","  }, {","    key: 'once',","    value: function once(name, callback) {","      var _this6 = this;","","      var wrapped = (0, _lodash.once)(function () {","        for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {","          args[_key3] = arguments[_key3];","        }","","        _this6.off(name, wrapped);","        return callback.apply(_this6, args);","      });","      wrapped._callback = callback;","      return this.on(name, wrapped);","    }","  }]);","  return Events;","}(EventEmitter);","","exports.default = Events;"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":1,"21":1,"23":1,"25":1,"27":1,"29":1,"31":1,"33":1,"35":1,"37":7,"39":1,"42":1,"43":0,"53":1,"54":1,"56":1,"57":0,"58":0,"61":1,"79":0,"81":0,"82":0,"84":0,"101":0,"103":0,"104":0,"107":0,"108":0,"110":0,"130":0,"132":0,"133":0,"136":0,"137":0,"139":0,"165":0,"167":0,"168":0,"171":0,"172":0,"173":0,"175":0,"176":0,"199":0,"201":0,"202":0,"203":0,"206":0,"207":0,"209":0,"210":0,"213":1,"216":1}},"/home/travis/build/npmtest/node-npmtest-bookshelf/node_modules/bookshelf/lib/base/promise.js":{"path":"/home/travis/build/npmtest/node-npmtest-bookshelf/node_modules/bookshelf/lib/base/promise.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":1,"11":0,"12":0,"13":1,"14":0,"15":0,"16":1,"17":0,"18":0,"19":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":37}}},"2":{"name":"(anonymous_2)","line":15,"loc":{"start":{"line":15,"column":37},"end":{"line":15,"column":49}}},"3":{"name":"(anonymous_3)","line":19,"loc":{"start":{"line":19,"column":38},"end":{"line":19,"column":50}}},"4":{"name":"(anonymous_4)","line":23,"loc":{"start":{"line":23,"column":41},"end":{"line":23,"column":53}}},"5":{"name":"(anonymous_5)","line":27,"loc":{"start":{"line":27,"column":36},"end":{"line":27,"column":48}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":36}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":51}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":37}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":95}},"6":{"start":{"line":13,"column":39},"end":{"line":13,"column":93}},"7":{"start":{"line":15,"column":0},"end":{"line":18,"column":2}},"8":{"start":{"line":16,"column":2},"end":{"line":16,"column":47}},"9":{"start":{"line":17,"column":2},"end":{"line":17,"column":44}},"10":{"start":{"line":19,"column":0},"end":{"line":22,"column":2}},"11":{"start":{"line":20,"column":2},"end":{"line":20,"column":49}},"12":{"start":{"line":21,"column":2},"end":{"line":21,"column":45}},"13":{"start":{"line":23,"column":0},"end":{"line":26,"column":2}},"14":{"start":{"line":24,"column":2},"end":{"line":24,"column":50}},"15":{"start":{"line":25,"column":2},"end":{"line":25,"column":43}},"16":{"start":{"line":27,"column":0},"end":{"line":30,"column":2}},"17":{"start":{"line":28,"column":2},"end":{"line":28,"column":68}},"18":{"start":{"line":29,"column":2},"end":{"line":29,"column":45}},"19":{"start":{"line":32,"column":0},"end":{"line":32,"column":37}}},"branchMap":{"1":{"line":13,"type":"cond-expr","locations":[{"start":{"line":13,"column":70},"end":{"line":13,"column":73}},{"start":{"line":13,"column":76},"end":{"line":13,"column":92}}]},"2":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":46},"end":{"line":13,"column":49}},{"start":{"line":13,"column":53},"end":{"line":13,"column":67}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _bluebird = require('bluebird');","","var _bluebird2 = _interopRequireDefault(_bluebird);","","var _helpers = require('../helpers');","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","_bluebird2.default.prototype.yield = function () {","  (0, _helpers.deprecate)('.yield', '.return');","  return this.return.apply(this, arguments);","};","_bluebird2.default.prototype.ensure = function () {","  (0, _helpers.deprecate)('.ensure', '.finally');","  return this.finally.apply(this, arguments);","};","_bluebird2.default.prototype.otherwise = function () {","  (0, _helpers.deprecate)('.otherwise', '.catch');","  return this.catch.apply(this, arguments);","};","_bluebird2.default.prototype.exec = function () {","  (0, _helpers.deprecate)('bookshelf.exec', 'bookshelf.asCallback');","  return this.nodeify.apply(this, arguments);","};","","exports.default = _bluebird2.default;"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":1,"16":0,"17":0,"19":1,"20":0,"21":0,"23":1,"24":0,"25":0,"27":1,"28":0,"29":0,"32":1}},"/home/travis/build/npmtest/node-npmtest-bookshelf/node_modules/bookshelf/lib/model.js":{"path":"/home/travis/build/npmtest/node-npmtest-bookshelf/node_modules/bookshelf/lib/model.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":10,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":1,"140":1,"141":1,"142":1},"b":{"1":[4,6],"2":[10,10],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0]},"f":{"1":10,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":43,"loc":{"start":{"line":43,"column":0},"end":{"line":43,"column":37}}},"2":{"name":"hasOne","line":142,"loc":{"start":{"line":142,"column":10},"end":{"line":142,"column":64}}},"3":{"name":"hasMany","line":183,"loc":{"start":{"line":183,"column":11},"end":{"line":183,"column":66}}},"4":{"name":"belongsTo","line":232,"loc":{"start":{"line":232,"column":13},"end":{"line":232,"column":70}}},"5":{"name":"belongsToMany","line":339,"loc":{"start":{"line":339,"column":17},"end":{"line":339,"column":119}}},"6":{"name":"morphOne","line":394,"loc":{"start":{"line":394,"column":12},"end":{"line":394,"column":69}}},"7":{"name":"morphMany","line":447,"loc":{"start":{"line":447,"column":13},"end":{"line":447,"column":71}}},"8":{"name":"morphTo","line":486,"loc":{"start":{"line":486,"column":11},"end":{"line":486,"column":39}}},"9":{"name":"through","line":577,"loc":{"start":{"line":577,"column":11},"end":{"line":577,"column":107}}},"10":{"name":"refresh","line":598,"loc":{"start":{"line":598,"column":11},"end":{"line":598,"column":37}}},"11":{"name":"fetch","line":691,"loc":{"start":{"line":691,"column":9},"end":{"line":691,"column":33}}},"12":{"name":"(anonymous_12)","line":698,"loc":{"start":{"line":698,"column":37},"end":{"line":698,"column":68}}},"13":{"name":"(anonymous_13)","line":705,"loc":{"start":{"line":705,"column":9},"end":{"line":705,"column":29}}},"14":{"name":"(anonymous_14)","line":718,"loc":{"start":{"line":718,"column":9},"end":{"line":718,"column":29}}},"15":{"name":"(anonymous_15)","line":722,"loc":{"start":{"line":722,"column":11},"end":{"line":722,"column":31}}},"16":{"name":"(anonymous_16)","line":740,"loc":{"start":{"line":740,"column":58},"end":{"line":740,"column":73}}},"17":{"name":"all","line":749,"loc":{"start":{"line":749,"column":7},"end":{"line":749,"column":22}}},"18":{"name":"count","line":778,"loc":{"start":{"line":778,"column":9},"end":{"line":778,"column":41}}},"19":{"name":"fetchAll","line":814,"loc":{"start":{"line":814,"column":12},"end":{"line":814,"column":39}}},"20":{"name":"(anonymous_20)","line":818,"loc":{"start":{"line":818,"column":39},"end":{"line":818,"column":68}}},"21":{"name":"(anonymous_21)","line":830,"loc":{"start":{"line":830,"column":23},"end":{"line":830,"column":49}}},"22":{"name":"(anonymous_22)","line":878,"loc":{"start":{"line":878,"column":33},"end":{"line":878,"column":63}}},"23":{"name":"(anonymous_23)","line":956,"loc":{"start":{"line":956,"column":33},"end":{"line":956,"column":62}}},"24":{"name":"(anonymous_24)","line":968,"loc":{"start":{"line":968,"column":45},"end":{"line":968,"column":57}}},"25":{"name":"(anonymous_25)","line":970,"loc":{"start":{"line":970,"column":12},"end":{"line":970,"column":30}}},"26":{"name":"(anonymous_26)","line":1045,"loc":{"start":{"line":1045,"column":129},"end":{"line":1045,"column":141}}},"27":{"name":"(anonymous_27)","line":1047,"loc":{"start":{"line":1047,"column":14},"end":{"line":1047,"column":30}}},"28":{"name":"(anonymous_28)","line":1141,"loc":{"start":{"line":1141,"column":36},"end":{"line":1141,"column":55}}},"29":{"name":"(anonymous_29)","line":1145,"loc":{"start":{"line":1145,"column":45},"end":{"line":1145,"column":57}}},"30":{"name":"(anonymous_30)","line":1160,"loc":{"start":{"line":1160,"column":12},"end":{"line":1160,"column":24}}},"31":{"name":"(anonymous_31)","line":1162,"loc":{"start":{"line":1162,"column":12},"end":{"line":1162,"column":28}}},"32":{"name":"resetQuery","line":1192,"loc":{"start":{"line":1192,"column":14},"end":{"line":1192,"column":36}}},"33":{"name":"query","line":1242,"loc":{"start":{"line":1242,"column":9},"end":{"line":1242,"column":26}}},"34":{"name":"where","line":1273,"loc":{"start":{"line":1273,"column":9},"end":{"line":1273,"column":26}}},"35":{"name":"orderBy","line":1306,"loc":{"start":{"line":1306,"column":11},"end":{"line":1306,"column":30}}},"36":{"name":"clone","line":1316,"loc":{"start":{"line":1316,"column":9},"end":{"line":1316,"column":26}}},"37":{"name":"sync","line":1335,"loc":{"start":{"line":1335,"column":8},"end":{"line":1335,"column":31}}},"38":{"name":"_morphOneOrMany","line":1346,"loc":{"start":{"line":1346,"column":19},"end":{"line":1346,"column":94}}},"39":{"name":"_handleResponse","line":1369,"loc":{"start":{"line":1369,"column":19},"end":{"line":1369,"column":54}}},"40":{"name":"_handleEager","line":1387,"loc":{"start":{"line":1387,"column":16},"end":{"line":1387,"column":57}}},"41":{"name":"extended","line":1391,"loc":{"start":{"line":1391,"column":12},"end":{"line":1391,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":55}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":48}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":57}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":50}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":32}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":47}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":43}},"8":{"start":{"line":17,"column":0},"end":{"line":17,"column":57}},"9":{"start":{"line":19,"column":0},"end":{"line":19,"column":30}},"10":{"start":{"line":21,"column":0},"end":{"line":21,"column":43}},"11":{"start":{"line":23,"column":0},"end":{"line":23,"column":36}},"12":{"start":{"line":25,"column":0},"end":{"line":25,"column":49}},"13":{"start":{"line":27,"column":0},"end":{"line":27,"column":32}},"14":{"start":{"line":29,"column":0},"end":{"line":29,"column":45}},"15":{"start":{"line":31,"column":0},"end":{"line":31,"column":34}},"16":{"start":{"line":33,"column":0},"end":{"line":33,"column":47}},"17":{"start":{"line":35,"column":0},"end":{"line":35,"column":37}},"18":{"start":{"line":37,"column":0},"end":{"line":37,"column":45}},"19":{"start":{"line":39,"column":0},"end":{"line":39,"column":41}},"20":{"start":{"line":41,"column":0},"end":{"line":41,"column":49}},"21":{"start":{"line":43,"column":0},"end":{"line":43,"column":95}},"22":{"start":{"line":43,"column":39},"end":{"line":43,"column":93}},"23":{"start":{"line":96,"column":0},"end":{"line":1420,"column":3}},"24":{"start":{"line":143,"column":4},"end":{"line":143,"column":119}},"25":{"start":{"line":184,"column":4},"end":{"line":184,"column":120}},"26":{"start":{"line":233,"column":4},"end":{"line":233,"column":122}},"27":{"start":{"line":340,"column":4},"end":{"line":342,"column":18}},"28":{"start":{"line":395,"column":4},"end":{"line":395,"column":83}},"29":{"start":{"line":448,"column":4},"end":{"line":448,"column":84}},"30":{"start":{"line":487,"column":4},"end":{"line":487,"column":104}},"31":{"start":{"line":487,"column":47},"end":{"line":487,"column":104}},"32":{"start":{"line":488,"column":4},"end":{"line":489,"column":28}},"33":{"start":{"line":490,"column":4},"end":{"line":496,"column":5}},"34":{"start":{"line":491,"column":6},"end":{"line":491,"column":33}},"35":{"start":{"line":492,"column":6},"end":{"line":492,"column":55}},"36":{"start":{"line":494,"column":6},"end":{"line":494,"column":25}},"37":{"start":{"line":495,"column":6},"end":{"line":495,"column":52}},"38":{"start":{"line":497,"column":4},"end":{"line":497,"column":130}},"39":{"start":{"line":578,"column":4},"end":{"line":580,"column":7}},"40":{"start":{"line":602,"column":4},"end":{"line":602,"column":111}},"41":{"start":{"line":604,"column":4},"end":{"line":604,"column":46}},"42":{"start":{"line":694,"column":4},"end":{"line":694,"column":51}},"43":{"start":{"line":699,"column":4},"end":{"line":699,"column":61}},"44":{"start":{"line":702,"column":4},"end":{"line":745,"column":7}},"45":{"start":{"line":706,"column":6},"end":{"line":708,"column":7}},"46":{"start":{"line":707,"column":8},"end":{"line":707,"column":66}},"47":{"start":{"line":719,"column":6},"end":{"line":721,"column":7}},"48":{"start":{"line":720,"column":8},"end":{"line":720,"column":86}},"49":{"start":{"line":739,"column":6},"end":{"line":739,"column":66}},"50":{"start":{"line":741,"column":6},"end":{"line":743,"column":7}},"51":{"start":{"line":742,"column":8},"end":{"line":742,"column":18}},"52":{"start":{"line":744,"column":6},"end":{"line":744,"column":18}},"53":{"start":{"line":750,"column":4},"end":{"line":750,"column":51}},"54":{"start":{"line":751,"column":4},"end":{"line":751,"column":44}},"55":{"start":{"line":752,"column":4},"end":{"line":752,"column":22}},"56":{"start":{"line":753,"column":4},"end":{"line":753,"column":68}},"57":{"start":{"line":753,"column":26},"end":{"line":753,"column":68}},"58":{"start":{"line":754,"column":4},"end":{"line":754,"column":22}},"59":{"start":{"line":779,"column":4},"end":{"line":779,"column":45}},"60":{"start":{"line":815,"column":4},"end":{"line":815,"column":21}},"61":{"start":{"line":817,"column":4},"end":{"line":817,"column":32}},"62":{"start":{"line":818,"column":4},"end":{"line":842,"column":22}},"63":{"start":{"line":829,"column":6},"end":{"line":829,"column":81}},"64":{"start":{"line":841,"column":6},"end":{"line":841,"column":77}},"65":{"start":{"line":879,"column":4},"end":{"line":879,"column":75}},"66":{"start":{"line":880,"column":4},"end":{"line":880,"column":84}},"67":{"start":{"line":881,"column":4},"end":{"line":881,"column":135}},"68":{"start":{"line":957,"column":4},"end":{"line":957,"column":23}},"69":{"start":{"line":960,"column":4},"end":{"line":966,"column":5}},"70":{"start":{"line":961,"column":6},"end":{"line":961,"column":24}},"71":{"start":{"line":962,"column":6},"end":{"line":962,"column":50}},"72":{"start":{"line":964,"column":6},"end":{"line":964,"column":30}},"73":{"start":{"line":965,"column":6},"end":{"line":965,"column":63}},"74":{"start":{"line":968,"column":4},"end":{"line":1104,"column":20}},"75":{"start":{"line":969,"column":6},"end":{"line":969,"column":38}},"76":{"start":{"line":973,"column":6},"end":{"line":973,"column":30}},"77":{"start":{"line":977,"column":6},"end":{"line":982,"column":7}},"78":{"start":{"line":978,"column":8},"end":{"line":978,"column":65}},"79":{"start":{"line":979,"column":8},"end":{"line":981,"column":9}},"80":{"start":{"line":980,"column":10},"end":{"line":980,"column":86}},"81":{"start":{"line":986,"column":6},"end":{"line":986,"column":40}},"82":{"start":{"line":990,"column":6},"end":{"line":992,"column":7}},"83":{"start":{"line":991,"column":8},"end":{"line":991,"column":107}},"84":{"start":{"line":995,"column":6},"end":{"line":997,"column":7}},"85":{"start":{"line":996,"column":8},"end":{"line":996,"column":66}},"86":{"start":{"line":1001,"column":6},"end":{"line":1001,"column":36}},"87":{"start":{"line":1002,"column":6},"end":{"line":1002,"column":33}},"88":{"start":{"line":1045,"column":6},"end":{"line":1103,"column":9}},"89":{"start":{"line":1046,"column":8},"end":{"line":1046,"column":100}},"90":{"start":{"line":1050,"column":8},"end":{"line":1059,"column":9}},"91":{"start":{"line":1051,"column":10},"end":{"line":1051,"column":31}},"92":{"start":{"line":1052,"column":10},"end":{"line":1052,"column":60}},"93":{"start":{"line":1053,"column":10},"end":{"line":1053,"column":53}},"94":{"start":{"line":1054,"column":10},"end":{"line":1054,"column":65}},"95":{"start":{"line":1055,"column":15},"end":{"line":1059,"column":9}},"96":{"start":{"line":1056,"column":10},"end":{"line":1058,"column":11}},"97":{"start":{"line":1057,"column":12},"end":{"line":1057,"column":77}},"98":{"start":{"line":1063,"column":8},"end":{"line":1063,"column":62}},"99":{"start":{"line":1065,"column":8},"end":{"line":1065,"column":22}},"100":{"start":{"line":1102,"column":8},"end":{"line":1102,"column":110}},"101":{"start":{"line":1142,"column":4},"end":{"line":1142,"column":61}},"102":{"start":{"line":1143,"column":4},"end":{"line":1143,"column":34}},"103":{"start":{"line":1144,"column":4},"end":{"line":1144,"column":31}},"104":{"start":{"line":1145,"column":4},"end":{"line":1181,"column":25}},"105":{"start":{"line":1159,"column":6},"end":{"line":1159,"column":59}},"106":{"start":{"line":1161,"column":6},"end":{"line":1161,"column":24}},"107":{"start":{"line":1163,"column":6},"end":{"line":1165,"column":7}},"108":{"start":{"line":1164,"column":8},"end":{"line":1164,"column":73}},"109":{"start":{"line":1166,"column":6},"end":{"line":1166,"column":19}},"110":{"start":{"line":1180,"column":6},"end":{"line":1180,"column":64}},"111":{"start":{"line":1193,"column":4},"end":{"line":1193,"column":22}},"112":{"start":{"line":1194,"column":4},"end":{"line":1194,"column":16}},"113":{"start":{"line":1243,"column":4},"end":{"line":1243,"column":78}},"114":{"start":{"line":1274,"column":4},"end":{"line":1276,"column":5}},"115":{"start":{"line":1275,"column":6},"end":{"line":1275,"column":35}},"116":{"start":{"line":1278,"column":4},"end":{"line":1278,"column":58}},"117":{"start":{"line":1307,"column":4},"end":{"line":1309,"column":5}},"118":{"start":{"line":1308,"column":6},"end":{"line":1308,"column":37}},"119":{"start":{"line":1311,"column":4},"end":{"line":1311,"column":83}},"120":{"start":{"line":1320,"column":4},"end":{"line":1320,"column":71}},"121":{"start":{"line":1321,"column":4},"end":{"line":1323,"column":5}},"122":{"start":{"line":1322,"column":6},"end":{"line":1322,"column":57}},"123":{"start":{"line":1324,"column":4},"end":{"line":1324,"column":18}},"124":{"start":{"line":1336,"column":4},"end":{"line":1336,"column":45}},"125":{"start":{"line":1347,"column":4},"end":{"line":1351,"column":5}},"126":{"start":{"line":1349,"column":6},"end":{"line":1349,"column":31}},"127":{"start":{"line":1350,"column":6},"end":{"line":1350,"column":25}},"128":{"start":{"line":1352,"column":4},"end":{"line":1352,"column":100}},"129":{"start":{"line":1352,"column":31},"end":{"line":1352,"column":100}},"130":{"start":{"line":1353,"column":4},"end":{"line":1353,"column":127}},"131":{"start":{"line":1370,"column":4},"end":{"line":1370,"column":39}},"132":{"start":{"line":1371,"column":4},"end":{"line":1371,"column":65}},"133":{"start":{"line":1372,"column":4},"end":{"line":1374,"column":5}},"134":{"start":{"line":1373,"column":6},"end":{"line":1373,"column":37}},"135":{"start":{"line":1388,"column":4},"end":{"line":1388,"column":70}},"136":{"start":{"line":1400,"column":4},"end":{"line":1400,"column":73}},"137":{"start":{"line":1409,"column":4},"end":{"line":1409,"column":83}},"138":{"start":{"line":1418,"column":4},"end":{"line":1418,"column":83}},"139":{"start":{"line":1422,"column":0},"end":{"line":1422,"column":62}},"140":{"start":{"line":1423,"column":0},"end":{"line":1423,"column":72}},"141":{"start":{"line":1424,"column":0},"end":{"line":1424,"column":72}},"142":{"start":{"line":1426,"column":0},"end":{"line":1426,"column":32}}},"branchMap":{"1":{"line":43,"type":"cond-expr","locations":[{"start":{"line":43,"column":70},"end":{"line":43,"column":73}},{"start":{"line":43,"column":76},"end":{"line":43,"column":92}}]},"2":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":46},"end":{"line":43,"column":49}},{"start":{"line":43,"column":53},"end":{"line":43,"column":67}}]},"3":{"line":487,"type":"if","locations":[{"start":{"line":487,"column":4},"end":{"line":487,"column":4}},{"start":{"line":487,"column":4},"end":{"line":487,"column":4}}]},"4":{"line":490,"type":"if","locations":[{"start":{"line":490,"column":4},"end":{"line":490,"column":4}},{"start":{"line":490,"column":4},"end":{"line":490,"column":4}}]},"5":{"line":602,"type":"cond-expr","locations":[{"start":{"line":602,"column":36},"end":{"line":602,"column":51}},{"start":{"line":602,"column":54},"end":{"line":602,"column":110}}]},"6":{"line":699,"type":"cond-expr","locations":[{"start":{"line":699,"column":24},"end":{"line":699,"column":55}},{"start":{"line":699,"column":58},"end":{"line":699,"column":60}}]},"7":{"line":706,"type":"if","locations":[{"start":{"line":706,"column":6},"end":{"line":706,"column":6}},{"start":{"line":706,"column":6},"end":{"line":706,"column":6}}]},"8":{"line":706,"type":"binary-expr","locations":[{"start":{"line":706,"column":10},"end":{"line":706,"column":19}},{"start":{"line":706,"column":23},"end":{"line":706,"column":44}}]},"9":{"line":719,"type":"if","locations":[{"start":{"line":719,"column":6},"end":{"line":719,"column":6}},{"start":{"line":719,"column":6},"end":{"line":719,"column":6}}]},"10":{"line":741,"type":"if","locations":[{"start":{"line":741,"column":6},"end":{"line":741,"column":6}},{"start":{"line":741,"column":6},"end":{"line":741,"column":6}}]},"11":{"line":753,"type":"if","locations":[{"start":{"line":753,"column":4},"end":{"line":753,"column":4}},{"start":{"line":753,"column":4},"end":{"line":753,"column":4}}]},"12":{"line":880,"type":"cond-expr","locations":[{"start":{"line":880,"column":60},"end":{"line":880,"column":69}},{"start":{"line":880,"column":72},"end":{"line":880,"column":83}}]},"13":{"line":960,"type":"if","locations":[{"start":{"line":960,"column":4},"end":{"line":960,"column":4}},{"start":{"line":960,"column":4},"end":{"line":960,"column":4}}]},"14":{"line":960,"type":"binary-expr","locations":[{"start":{"line":960,"column":8},"end":{"line":960,"column":19}},{"start":{"line":960,"column":23},"end":{"line":960,"column":107}}]},"15":{"line":960,"type":"cond-expr","locations":[{"start":{"line":960,"column":53},"end":{"line":960,"column":64}},{"start":{"line":960,"column":67},"end":{"line":960,"column":93}}]},"16":{"line":961,"type":"binary-expr","locations":[{"start":{"line":961,"column":14},"end":{"line":961,"column":17}},{"start":{"line":961,"column":21},"end":{"line":961,"column":23}}]},"17":{"line":962,"type":"binary-expr","locations":[{"start":{"line":962,"column":16},"end":{"line":962,"column":43}},{"start":{"line":962,"column":47},"end":{"line":962,"column":49}}]},"18":{"line":965,"type":"cond-expr","locations":[{"start":{"line":965,"column":26},"end":{"line":965,"column":57}},{"start":{"line":965,"column":60},"end":{"line":965,"column":62}}]},"19":{"line":977,"type":"if","locations":[{"start":{"line":977,"column":6},"end":{"line":977,"column":6}},{"start":{"line":977,"column":6},"end":{"line":977,"column":6}}]},"20":{"line":977,"type":"binary-expr","locations":[{"start":{"line":977,"column":10},"end":{"line":977,"column":29}},{"start":{"line":977,"column":33},"end":{"line":977,"column":49}}]},"21":{"line":979,"type":"if","locations":[{"start":{"line":979,"column":8},"end":{"line":979,"column":8}},{"start":{"line":979,"column":8},"end":{"line":979,"column":8}}]},"22":{"line":990,"type":"if","locations":[{"start":{"line":990,"column":6},"end":{"line":990,"column":6}},{"start":{"line":990,"column":6},"end":{"line":990,"column":6}}]},"23":{"line":995,"type":"if","locations":[{"start":{"line":995,"column":6},"end":{"line":995,"column":6}},{"start":{"line":995,"column":6},"end":{"line":995,"column":6}}]},"24":{"line":995,"type":"binary-expr","locations":[{"start":{"line":995,"column":10},"end":{"line":995,"column":26}},{"start":{"line":995,"column":30},"end":{"line":995,"column":65}}]},"25":{"line":1045,"type":"cond-expr","locations":[{"start":{"line":1045,"column":52},"end":{"line":1045,"column":69}},{"start":{"line":1045,"column":72},"end":{"line":1045,"column":89}}]},"26":{"line":1046,"type":"cond-expr","locations":[{"start":{"line":1046,"column":75},"end":{"line":1046,"column":80}},{"start":{"line":1046,"column":83},"end":{"line":1046,"column":98}}]},"27":{"line":1046,"type":"binary-expr","locations":[{"start":{"line":1046,"column":36},"end":{"line":1046,"column":55}},{"start":{"line":1046,"column":59},"end":{"line":1046,"column":72}}]},"28":{"line":1050,"type":"if","locations":[{"start":{"line":1050,"column":8},"end":{"line":1050,"column":8}},{"start":{"line":1050,"column":8},"end":{"line":1050,"column":8}}]},"29":{"line":1050,"type":"binary-expr","locations":[{"start":{"line":1050,"column":12},"end":{"line":1050,"column":31}},{"start":{"line":1050,"column":35},"end":{"line":1050,"column":50}}]},"30":{"line":1055,"type":"if","locations":[{"start":{"line":1055,"column":15},"end":{"line":1055,"column":15}},{"start":{"line":1055,"column":15},"end":{"line":1055,"column":15}}]},"31":{"line":1055,"type":"binary-expr","locations":[{"start":{"line":1055,"column":19},"end":{"line":1055,"column":38}},{"start":{"line":1055,"column":42},"end":{"line":1055,"column":52}}]},"32":{"line":1056,"type":"if","locations":[{"start":{"line":1056,"column":10},"end":{"line":1056,"column":10}},{"start":{"line":1056,"column":10},"end":{"line":1056,"column":10}}]},"33":{"line":1102,"type":"cond-expr","locations":[{"start":{"line":1102,"column":54},"end":{"line":1102,"column":69}},{"start":{"line":1102,"column":72},"end":{"line":1102,"column":87}}]},"34":{"line":1142,"type":"cond-expr","locations":[{"start":{"line":1142,"column":24},"end":{"line":1142,"column":55}},{"start":{"line":1142,"column":58},"end":{"line":1142,"column":60}}]},"35":{"line":1163,"type":"if","locations":[{"start":{"line":1163,"column":6},"end":{"line":1163,"column":6}},{"start":{"line":1163,"column":6},"end":{"line":1163,"column":6}}]},"36":{"line":1163,"type":"binary-expr","locations":[{"start":{"line":1163,"column":10},"end":{"line":1163,"column":25}},{"start":{"line":1163,"column":29},"end":{"line":1163,"column":39}}]},"37":{"line":1321,"type":"if","locations":[{"start":{"line":1321,"column":4},"end":{"line":1321,"column":4}},{"start":{"line":1321,"column":4},"end":{"line":1321,"column":4}}]},"38":{"line":1347,"type":"if","locations":[{"start":{"line":1347,"column":4},"end":{"line":1347,"column":4}},{"start":{"line":1347,"column":4},"end":{"line":1347,"column":4}}]},"39":{"line":1352,"type":"if","locations":[{"start":{"line":1352,"column":4},"end":{"line":1352,"column":4}},{"start":{"line":1352,"column":4},"end":{"line":1352,"column":4}}]},"40":{"line":1352,"type":"binary-expr","locations":[{"start":{"line":1352,"column":8},"end":{"line":1352,"column":18}},{"start":{"line":1352,"column":22},"end":{"line":1352,"column":29}}]},"41":{"line":1372,"type":"if","locations":[{"start":{"line":1372,"column":4},"end":{"line":1372,"column":4}},{"start":{"line":1372,"column":4},"end":{"line":1372,"column":4}}]},"42":{"line":1372,"type":"binary-expr","locations":[{"start":{"line":1372,"column":8},"end":{"line":1372,"column":19}},{"start":{"line":1372,"column":23},"end":{"line":1372,"column":45}}]}},"code":["'use strict';","","var _typeof2 = require('babel-runtime/helpers/typeof');","","var _typeof3 = _interopRequireDefault(_typeof2);","","var _extends2 = require('babel-runtime/helpers/extends');","","var _extends3 = _interopRequireDefault(_extends2);","","var _lodash = require('lodash');","","var _lodash2 = _interopRequireDefault(_lodash);","","var _createError = require('create-error');","","var _createError2 = _interopRequireDefault(_createError);","","var _sync = require('./sync');","","var _sync2 = _interopRequireDefault(_sync);","","var _helpers = require('./helpers');","","var _helpers2 = _interopRequireDefault(_helpers);","","var _eager = require('./eager');","","var _eager2 = _interopRequireDefault(_eager);","","var _errors = require('./errors');","","var _errors2 = _interopRequireDefault(_errors);","","var _model = require('./base/model');","","var _model2 = _interopRequireDefault(_model);","","var _promise = require('./base/promise');","","var _promise2 = _interopRequireDefault(_promise);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * @class Model"," * @extends ModelBase"," * @inheritdoc"," * @classdesc"," *"," * Models are simple objects representing individual database rows, specifying"," * the tableName and any relations to other models. They can be extended with"," * any domain-specific methods, which can handle components such as validations,"," * computed properties, and access control."," *"," * @constructor"," * @description"," *"," * When creating an instance of a model, you can pass in the initial values of"," * the attributes, which will be {@link Model#set set} on the"," * model. If you define an {@link initialize} function, it will be invoked"," * when the model is created."," *"," *     new Book({"," *       title: \"One Thousand and One Nights\","," *       author: \"Scheherazade\""," *     });"," *"," * In rare cases, if you're looking to get fancy, you may want to override"," * {@link Model#constructor constructor}, which allows you to replace the"," * actual constructor function for your model."," *"," *     let Book = bookshelf.Model.extend({"," *       tableName: 'documents',"," *       constructor: function() {"," *         bookshelf.Model.apply(this, arguments);"," *         this.on('saving', function(model, attrs, options) {"," *           options.query.where('type', '=', 'book');"," *         });"," *       }"," *     });"," *"," * @param {Object}   attributes            Initial values for this model's attributes."," * @param {Object=}  options               Hash of options."," * @param {string=}  options.tableName     Initial value for {@link Model#tableName tableName}."," * @param {boolean=} [options.hasTimestamps=false]"," *"," *   Initial value for {@link Model#hasTimestamps hasTimestamps}."," *"," * @param {boolean} [options.parse=false]"," *"," *   Convert attributes by {@link Model#parse parse} before being {@link"," *   Model#set set} on the model."," *"," */","var BookshelfModel = _model2.default.extend({","","  /**","   * The `hasOne` relation specifies that this table has exactly one of another","   * type of object, specified by a foreign key in the other table.","   *","   *     let Record = bookshelf.Model.extend({","   *       tableName: 'health_records'","   *     });","   *","   *     let Patient = bookshelf.Model.extend({","   *       tableName: 'patients',","   *       record: function() {","   *         return this.hasOne(Record);","   *       }","   *     });","   *","   *     // select * from `health_records` where `patient_id` = 1;","   *     new Patient({id: 1}).related('record').fetch().then(function(model) {","   *       // ...","   *     });","   *","   *     // alternatively, if you don't need the relation loaded on the patient's relations hash:","   *     new Patient({id: 1}).record().fetch().then(function(model) {","   *       // ...","   *     });","   *","   * @method Model#hasOne","   *","   * @param {Model} Target","   *","   *   Constructor of {@link Model} targeted by join.","   *","   * @param {string=} foreignKey","   *","   *   ForeignKey in the `Target` model. By default, the `foreignKey` is assumed to","   *   be the singular form of this model's {@link Model#tableName tableName},","   *   followed by `_id` / `_{{{@link Model#idAttribute idAttribute}}}`.","   *","   * @param {string=} foreignKeyTarget","   *","   *   Column in the `Target` model's table which `foreignKey` references, if other","   *   than `Target` model's `id` / `{@link Model#idAttribute idAttribute}`.","   *","   * @returns {Model}","   */","  hasOne: function hasOne(Target, foreignKey, foreignKeyTarget) {","    return this._relation('hasOne', Target, { foreignKey: foreignKey, foreignKeyTarget: foreignKeyTarget }).init(this);","  },","","","  /**","   * The `hasMany` relation specifies that this model has one or more rows in","   * another table which match on this model's primary key.","   *","   *     let Author = bookshelf.Model.extend({","   *       tableName: 'authors',","   *       books: function() {","   *         return this.hasMany(Book);","   *       }","   *     });","   *","   *     // select * from `authors` where id = 1","   *     // select * from `books` where author_id = 1","   *     Author.where({id: 1}).fetch({withRelated: ['books']}).then(function(author) {","   *       console.log(JSON.stringify(author.related('books')));","   *     });","   *","   * @method Model#hasMany","   *","   * @param {Model} Target","   *","   *   Constructor of {@link Model} targeted by join.","   *","   * @param {string=} foreignKey","   *","   *   ForeignKey in the `Target` model. By default, the foreignKey is assumed to","   *   be the singular form of this model's tableName, followed by `_id` /","   *   `_{{{@link Model#idAttribute idAttribute}}}`.","   *","   * @param {string=} foreignKeyTarget","   *","   *   Column in the `Target` model's table which `foreignKey` references, if other","   *   than `Target` model's `id` / `{@link Model#idAttribute idAttribute}`.","   *","   * @returns {Collection}","   */","  hasMany: function hasMany(Target, foreignKey, foreignKeyTarget) {","    return this._relation('hasMany', Target, { foreignKey: foreignKey, foreignKeyTarget: foreignKeyTarget }).init(this);","  },","","","  /**","   * The `belongsTo` relationship is used when a model is a member of","   * another `Target` model.","   *","   * It can be used in a {@linkplain one-to-one} associations as the inverse","   * of a {@link Model#hasOne hasOne}. It can also used in {@linkplain","   * one-to-many} associations as the inverse of a {@link Model#hasMany hasMany}","   * (and is the one side of that association). In both cases, the {@link","   * Model#belongsTo belongsTo} relationship is used for a model that is a","   * member of another Target model, referenced by the foreignKey in the current","   * model.","   *","   *     let Book = bookshelf.Model.extend({","   *       tableName: 'books',","   *       author: function() {","   *         return this.belongsTo(Author);","   *       }","   *     });","   *","   *     // select * from `books` where id = 1","   *     // select * from `authors` where id = book.author_id","   *     Book.where({id: 1}).fetch({withRelated: ['author']}).then(function(book) {","   *       console.log(JSON.stringify(book.related('author')));","   *     });","   *","   * @method Model#belongsTo","   *","   * @param {Model} Target","   *","   *   Constructor of {@link Model} targeted by join.","   *","   * @param {string=} foreignKey","   *","   *   ForeignKey in this model. By default, the foreignKey is assumed to","   *   be the singular form of the `Target` model's tableName, followed by `_id` /","   *   `_{{{@link Model#idAttribute idAttribute}}}`.","   *","   * @param {string=} foreignKeyTarget","   *","   *   Column in the `Target` model's table which `foreignKey` references, if other","   *   than `Target` model's `id` / `{@link Model#idAttribute idAttribute}`.","   *","   * @returns {Model}","   */","  belongsTo: function belongsTo(Target, foreignKey, foreignKeyTarget) {","    return this._relation('belongsTo', Target, { foreignKey: foreignKey, foreignKeyTarget: foreignKeyTarget }).init(this);","  },","","","  /**","   * Defines a many-to-many relation, where the current model is joined to one","   * or more of a `Target` model through another table. The default name for","   * the joining table is the two table names, joined by an underscore, ordered","   * alphabetically. For example, a `users` table and an `accounts` table would have","   * a joining table of accounts_users.","   *","   *     let Account = bookshelf.Model.extend({","   *       tableName: 'accounts'","   *     });","   *","   *     let User = bookshelf.Model.extend({","   *       tableName: 'users',","   *       allAccounts: function () {","   *         return this.belongsToMany(Account);","   *       },","   *       adminAccounts: function() {","   *         return this.belongsToMany(Account).query({where: {access: 'admin'}});","   *       },","   *       viewAccounts: function() {","   *         return this.belongsToMany(Account).query({where: {access: 'readonly'}});","   *       }","   *     });","   *","   *  The default key names in the joining table are the singular versions of the","   *  model table names, followed by `_id` /","   *  _{{{@link Model#idAttribute idAttribute}}}. So in the above case, the","   *  columns in the joining table","   *  would be `user_id`, `account_id`, and `access`, which is used as an","   *  example of how dynamic relations can be formed using different contexts.","   *  To customize the keys used in, or the {@link Model#tableName tableName}","   *  used for the join table, you may specify them like so:","   *","   *      this.belongsToMany(Account, 'users_accounts', 'userid', 'accountid');","   *","   * If you wish to create a {@link Model#belongsToMany belongsToMany}","   * association where the joining table has a primary key, and more information","   * about the model, you may create a {@link Model#belongsToMany belongsToMany}","   * {@link Relation#through through} relation:","   *","   *     let Doctor = bookshelf.Model.extend({","   *       patients: function() {","   *         return this.belongsToMany(Patient).through(Appointment);","   *       }","   *     });","   *","   *     let Appointment = bookshelf.Model.extend({","   *       patient: function() {","   *         return this.belongsTo(Patient);","   *       },","   *       doctor: function() {","   *         return this.belongsTo(Doctor);","   *       }","   *     });","   *","   *     let Patient = bookshelf.Model.extend({","   *       doctors: function() {","   *         return this.belongsToMany(Doctor).through(Appointment);","   *       }","   *     });","   *","   * Collections returned by a `belongsToMany` relation are decorated with","   * several pivot helper methods. See {@link Collection#attach attach},","   * {@link Collection#detach detach}, {@link Collection#updatePivot","   * updatePivot} and {@link Collection#withPivot withPivot} for more","   * information.","   *","   * @belongsTo Model","   * @method  Model#belongsToMany","   * @param {Model} Target","   *","   *   Constructor of {@link Model} targeted by join.","   *","   * @param {string=} table","   *","   *   Name of the joining table. Defaults to the two table names, joined by an","   *   underscore, ordered alphabetically.","   *","   * @param {string=} foreignKey","   *","   *   Foreign key in this model. By default, the `foreignKey` is assumed to","   *   be the singular form of this model's tableName, followed by `_id` /","   *   `_{{{@link Model#idAttribute idAttribute}}}`.","   *","   * @param {string=} otherKey","   *","   *   Foreign key in the `Target` model. By default, the `otherKey` is assumed to","   *   be the singular form of the `Target` model's tableName, followed by `_id` /","   *   `_{{{@link Model#idAttribute idAttribute}}}`.","   *","   * @param {string=} foreignKeyTarget","   *","   *   Column in this model's table which `foreignKey` references, if other","   *   than `id` / `{@link Model#idAttribute idAttribute}`.","   *","   * @param {string=} otherKeyTarget","   *","   *   Column in the `Target` model's table which `otherKey` references, if other","   *   than `Target` model's `id` / `{@link Model#idAttribute idAttribute}`.","   *","   * @returns {Collection}","   */","  belongsToMany: function belongsToMany(Target, joinTableName, foreignKey, otherKey, foreignKeyTarget, otherKeyTarget) {","    return this._relation('belongsToMany', Target, {","      joinTableName: joinTableName, foreignKey: foreignKey, otherKey: otherKey, foreignKeyTarget: foreignKeyTarget, otherKeyTarget: otherKeyTarget","    }).init(this);","  },","","","  /**","   * The {@link Model#morphOne morphOne} is used to signify a {@link oneToOne","   * one-to-one} {@link polymorphicRelation polymorphic relation} with","   * another `Target` model, where the `name` of the model is used to determine","   * which database table keys are used. The naming convention requires the","   * `name` prefix an `_id` and `_type` field in the database. So for the case","   * below the table names would be `imageable_type` and `imageable_id`. The","   * `morphValue` may be optionally set to store/retrieve a different value in","   * the `_type` column than the {@link Model#tableName}.","   *","   *     let Site = bookshelf.Model.extend({","   *       tableName: 'sites',","   *       photo: function() {","   *         return this.morphOne(Photo, 'imageable');","   *       }","   *     });","   *","   * And with custom `columnNames`:","   *","   *     let Site = bookshelf.Model.extend({","   *       tableName: 'sites',","   *       photo: function() {","   *         return this.morphOne(Photo, 'imageable', [\"ImageableType\", \"ImageableId\"]);","   *       }","   *     });","   *","   * Note that both `columnNames` and `morphValue` are optional arguments. How","   * your argument is treated when only one is specified, depends on the type.","   * If your argument is an array, it will be assumed to contain custom","   * `columnNames`. If it's not, it will be assumed to indicate a `morphValue`.","   *","   * @method Model#morphOne","   *","   * @param {Model}     Target      Constructor of {@link Model} targeted by join.","   * @param {string=}   name        Prefix for `_id` and `_type` columns.","   * @param {(string[])=}  columnNames","   *","   *   Array containing two column names, the first is the `_type`, the second","   *   is the `_id`.","   *","   * @param {string=} [morphValue=Target#{@link Model#tableName tableName}]","   *","   *   The string value associated with this relationship. Stored in the `_type`","   *   column of the polymorphic table. Defaults to `Target#{@link","   *   Model#tableName tableName}`.","   *","   * @returns {Model} The related model.","   */","  morphOne: function morphOne(Target, name, columnNames, morphValue) {","    return this._morphOneOrMany(Target, name, columnNames, morphValue, 'morphOne');","  },","","","  /**","   * {@link Model#morphMany morphMany} is essentially the same as a {@link","   * Model#morphOne morphOne}, but creating a {@link Collection collection}","   * rather than a {@link Model model} (similar to a {@link Model#hasOne","   * hasOne} vs. {@link Model#hasMany hasMany} relation).","   *","   * {@link Model#morphMany morphMany} is used to signify a {@link oneToMany","   * one-to-many} or {@link manyToMany many-to-many} {@link polymorphicRelation","   * polymorphic relation} with another `Target` model, where the `name` of the","   * model is used to determine which database table keys are used. The naming","   * convention requires the `name` prefix an `_id` and `_type` field in the","   * database. So for the case below the table names would be `imageable_type`","   * and `imageable_id`. The `morphValue` may be optionally set to","   * store/retrieve a different value in the `_type` column than the `Target`'s","   * {@link Model#tableName tableName}.","   *","   *     let Post = bookshelf.Model.extend({","   *       tableName: 'posts',","   *       photos: function() {","   *         return this.morphMany(Photo, 'imageable');","   *       }","   *     });","   *","   * And with custom columnNames:","   *","   *     let Post = bookshelf.Model.extend({","   *       tableName: 'posts',","   *       photos: function() {","   *         return this.morphMany(Photo, 'imageable', [\"ImageableType\", \"ImageableId\"]);","   *       }","   *     });","   *","   * @method Model#morphMany","   *","   * @param {Model}     Target      Constructor of {@link Model} targeted by join.","   * @param {string=}   name        Prefix for `_id` and `_type` columns.","   * @param {(string[])=}  columnNames","   *","   *   Array containing two column names, the first is the `_type`, the second is the `_id`.","   *","   * @param {string=} [morphValue=Target#{@link Model#tableName tablename}]","   *","   *   The string value associated with this relationship. Stored in the `_type`","   *   column of the polymorphic table. Defaults to `Target`#{@link Model#tableName","   *   tablename}.","   *","   * @returns {Collection} A collection of related models.","   */","  morphMany: function morphMany(Target, name, columnNames, morphValue) {","    return this._morphOneOrMany(Target, name, columnNames, morphValue, 'morphMany');","  },","","","  /**","   * The {@link Model#morphTo morphTo} relation is used to specify the inverse","   * of the {@link Model#morphOne morphOne} or {@link Model#morphMany","   * morphMany} relations, where the `targets` must be passed to signify which","   * {@link Model models} are the potential opposite end of the {@link","   * polymorphicRelation polymorphic relation}.","   *","   *     let Photo = bookshelf.Model.extend({","   *       tableName: 'photos',","   *       imageable: function() {","   *         return this.morphTo('imageable', Site, Post);","   *       }","   *     });","   *","   * And with custom columnNames:","   *","   *     let Photo = bookshelf.Model.extend({","   *       tableName: 'photos',","   *       imageable: function() {","   *         return this.morphTo('imageable', [\"ImageableType\", \"ImageableId\"], Site, Post);","   *       }","   *     });","   *","   * @method Model#morphTo","   *","   * @param {string}      name        Prefix for `_id` and `_type` columns.","   * @param {(string[])=} columnNames","   *","   *   Array containing two column names, the first is the `_type`, the second is the `_id`.","   *","   * @param {...Model} Target Constructor of {@link Model} targeted by join.","   *","   * @returns {Model}","   */","  morphTo: function morphTo(morphName) {","    if (!_lodash2.default.isString(morphName)) throw new Error('The `morphTo` name must be specified.');","    var columnNames = void 0,","        candidates = void 0;","    if (_lodash2.default.isArray(arguments[1])) {","      columnNames = arguments[1];","      candidates = _lodash2.default.drop(arguments, 2);","    } else {","      columnNames = null;","      candidates = _lodash2.default.drop(arguments);","    }","    return this._relation('morphTo', null, { morphName: morphName, columnNames: columnNames, candidates: candidates }).init(this);","  },","","","  /**","   * Helps to create dynamic relations between {@link Model models} and {@link","   * Collection collections}, where a {@link Model#hasOne hasOne}, {@link","   * Model#hasMany hasMany}, {@link Model#belongsTo belongsTo}, or {@link","   * Model#belongsToMany belongsToMany} relation may run through a `JoinModel`.","   *","   * A good example of where this would be useful is if a book {@link","   * Model#hasMany hasMany} paragraphs through chapters. Consider the following examples:","   *","   *","   *     let Book = bookshelf.Model.extend({","   *       tableName: 'books',","   *","   *       // Find all paragraphs associated with this book, by","   *       // passing through the \"Chapter\" model.","   *       paragraphs: function() {","   *         return this.hasMany(Paragraph).through(Chapter);","   *       },","   *","   *       chapters: function() {","   *         return this.hasMany(Chapter);","   *       }","   *     });","   *","   *     let Chapter = bookshelf.Model.extend({","   *       tableName: 'chapters',","   *","   *       paragraphs: function() {","   *         return this.hasMany(Paragraph);","   *       }","   *     });","   *","   *     let Paragraph = bookshelf.Model.extend({","   *       tableName: 'paragraphs',","   *","   *       chapter: function() {","   *         return this.belongsTo(Chapter);","   *       },","   *","   *       // A reverse relation, where we can get the book from the chapter.","   *       book: function() {","   *         return this.belongsTo(Book).through(Chapter);","   *       }","   *     });","   *","   * The \"through\" table creates a pivot model, which it assigns to {@link","   * Model#pivot model.pivot} after it is created. On {@link Model#toJSON","   * toJSON}, the pivot model is flattened to values prefixed with","   * `_pivot_`.","   *","   * @method Model#through","   * @param {Model} Interim Pivot model.","   * @param {string=} throughForeignKey","   *","   *   Foreign key in this model. By default, the `foreignKey` is assumed to","   *   be the singular form of the `Target` model's tableName, followed by `_id` /","   *   `_{{{@link Model#idAttribute idAttribute}}}`.","   *","   * @param {string=} otherKey","   *","   *   Foreign key in the `Interim` model. By default, the `otherKey` is assumed to","   *   be the singular form of this model's tableName, followed by `_id` /","   *   `_{{{@link Model#idAttribute idAttribute}}}`.","   *","   * @param {string=} throughForeignKeyTarget","   *","   *   Column in the `Target` model which `throughForeignKey` references, if other","   *   than `Target` model's `id` / `{@link Model#idAttribute idAttribute}`.","   *","   * @param {string=} otherKeyTarget","   *","   *   Column in this model which `otherKey` references, if other","   *   than `id` / `{@link Model#idAttribute idAttribute}`.","   *","   * @returns {Collection}","   */","  through: function through(Interim, throughForeignKey, otherKey, throughForeignKeyTarget, otherKeyTarget) {","    return this.relatedData.through(this, Interim, {","      throughForeignKey: throughForeignKey, otherKey: otherKey, throughForeignKeyTarget: throughForeignKeyTarget, otherKeyTarget: otherKeyTarget","    });","  },","","","  /**","   * @method Model#refresh","   * @since 0.8.2","   * @description","   *","   * Update the attributes of a model, fetching it by its primary key. If no","   * attribute matches its {@link Model#idAttribute idAttribute}, then fetch by","   * all available fields.","   *","   * @param {Object} options","   *   A hash of options. See {@link Model#fetch} for details.","   * @returns {Promise<Model>}","   *   A promise resolving to this model.","   */","  refresh: function refresh(options) {","","    // If this is new, we use all its attributes. Otherwise we just grab the","    // primary key.","    var attributes = this.isNew() ? this.attributes : _lodash2.default.pick(this.attributes, this.idAttribute);","","    return this._doFetch(attributes, options);","  },","","","  /**","   * Fetches a {@link Model model} from the database, using any {@link","   * Model#attributes attributes} currently set on the model to form a `select`","   * query.","   *","   * A {@link Model#event:fetching \"fetching\"} event will be fired just before the","   * record is fetched; a good place to hook into for validation. {@link","   * Model#event:fetched \"fetched\"} event will be fired when a record is","   * successfully retrieved.","   *","   * If you need to constrain the query","   * performed by fetch, you can call {@link Model#query query} before calling","   * {@link Model#fetch fetch}.","   *","   *     // select * from `books` where `ISBN-13` = '9780440180296'","   *     new Book({'ISBN-13': '9780440180296'})","   *       .fetch()","   *       .then(function(model) {","   *         // outputs 'Slaughterhouse Five'","   *         console.log(model.get('title'));","   *       });","   *","   * _If you'd like to only fetch specific columns, you may specify a `columns`","   * property in the `options` for the {@link Model#fetch fetch} call, or use","   * {@link Model#query query}, tapping into the {@link Knex} {@link","   * Knex#column column} method to specify which columns will be fetched._","   *","   * A single property, or an array of properties can be specified as a value for","   * the `withRelated` property. You can also execute callbacks on relations","   * queries (eg. for sorting a relation). The results of these relation queries","   * will be loaded into a {@link Model#relations relations} property on the","   * model, may be retrieved with the {@link Model#related related} method, and","   * will be serialized as properties on a {@link Model#toJSON toJSON} call","   * unless `{shallow: true}` is passed.","   *","   *     let Book = bookshelf.Model.extend({","   *       tableName: 'books',","   *       editions: function() {","   *         return this.hasMany(Edition);","   *       },","   *       chapters: function() {","   *         return this.hasMany(Chapter);","   *       },","   *       genre: function() {","   *         return this.belongsTo(Genre);","   *       }","   *     })","   *","   *     new Book({'ISBN-13': '9780440180296'}).fetch({","   *       withRelated: [","   *         'genre', 'editions',","   *         { chapters: function(query) { query.orderBy('chapter_number'); }}","   *       ]","   *     }).then(function(book) {","   *       console.log(book.related('genre').toJSON());","   *       console.log(book.related('editions').toJSON());","   *       console.log(book.toJSON());","   *     });","   *","   * @method Model#fetch","   *","   * @param {Object=}  options - Hash of options.","   * @param {boolean=} [options.require=false]","   *   Reject the returned response with a {@link Model.NotFoundError","   *   NotFoundError} if results are empty.","   * @param {string|string[]} [options.columns='*']","   *   Specify columns to be retrieved.","   * @param {Transaction} [options.transacting]","   *  Optionally run the query in a transaction.","   * @param {string|Object|mixed[]} [options.withRelated]","   *  Relations to be retrieved with `Model` instance. Either one or more","   *  relation names or objects mapping relation names to query callbacks.","   *","   * @fires Model#fetching","   * @fires Model#fetched","   *","   * @throws {Model.NotFoundError}","   *","   * @returns {Promise<Model|null>}","   *  A promise resolving to the fetched {@link Model model} or `null` if","   *  none exists.","   *","   */","  fetch: function fetch(options) {","","    // Fetch uses all set attributes.","    return this._doFetch(this.attributes, options);","  },","","","  _doFetch: _promise2.default.method(function (attributes, options) {","    options = options ? _lodash2.default.clone(options) : {};","","    // Run the `first` call on the `sync` object to fetch a single model.","    return this.sync(options).first(attributes).bind(this)","","    // Jump the rest of the chain if the response doesn't exist...","    .tap(function (response) {","      if (!response || response.length === 0) {","        throw new this.constructor.NotFoundError('EmptyResponse');","      }","    })","","    // Now, load all of the data into the model as necessary.","    .tap(this._handleResponse)","","    // If the \"withRelated\" is specified, we also need to eager load all of the","    // data on the model, as a side-effect, before we ultimately jump into the","    // next step of the model. Since the `columns` are only relevant to the","    // current level, ensure those are omitted from the options.","    .tap(function (response) {","      if (options.withRelated) {","        return this._handleEager(response, _lodash2.default.omit(options, 'columns'));","      }","    }).tap(function (response) {","","      /**","       * Fired after a `fetch` operation. A promise may be returned from the","       * event handler for async behaviour.","       *","       * @event Model#fetched","       * @param {Model} model","       *   The model firing the event.","       * @param {Object} reponse","       *   Knex query response.","       * @param {Object} options","       *   Options object passed to {@link Model#fetch fetch}.","       * @returns {Promise}","       *   If the handler returns a promise, `fetch` will wait for it to","       *   be resolved.","       */","      return this.triggerThen('fetched', this, response, options);","    }).return(this).catch(this.constructor.NotFoundError, function (err) {","      if (options.require) {","        throw err;","      }","      return null;","    });","  }),","","  // Private for now.","  all: function all() {","    var collection = this.constructor.collection();","    collection._knex = this.query().clone();","    this.resetQuery();","    if (this.relatedData) collection.relatedData = this.relatedData;","    return collection;","  },","","","  /**","   * @method Model#count","   * @since 0.8.2","   * @description","   *","   * Gets the number of matching records in the database, respecting any","   * previous calls to {@link Model#query}.","   *","   * @example","   *","   * Duck.where('color', 'blue').count('name')","   *   .then(function(count) { //...","   *","   * @param {string} [column='*']","   *   Specify a column to count - rows with null values in this column will be excluded.","   * @param {Object=} options","   *   Hash of options.","   * @returns {Promise<Number>}","   *   A promise resolving to the number of matching rows.","   */","  count: function count(column, options) {","    return this.all().count(column, options);","  },","","","  /**","   * Fetches a collection of {@link Model models} from the database, using any","   * query parameters currently set on the model to form a select query. Returns","   * a promise, which will resolve with the fetched collection. If you wish to","   * trigger an error if no models are found, pass {require: true} as one of","   * the options to the `fetchAll` call.","   *","   * If you need to constrain the query performed by fetch, you can call the","   * {@link Model#query query} method before calling fetch.","   *","   * @method Model#fetchAll","   *","   * @param {Object=}  options - Hash of options.","   * @param {boolean=} [options.require=false]","   *","   *  Rejects the returned promise with an `Collection.EmptyError` if no records are returned.","   *","   * @param {Transaction=} options.transacting","   *","   *   Optionally run the query in a transaction.","   *","   * @fires Model#\"fetching:collection\"","   * @fires Model#\"fetched:collection\"","   *","   * @throws {Collection.EmptyError}","   *","   *  Rejects the promise in the event of an empty response if the `require: true` option.","   *","   * @returns {Promise<Collection>} A promise resolving to the fetched {@link Collection collection}.","   *","   */","  fetchAll: function fetchAll(options) {","    var _this = this;","","    var collection = this.all();","    return collection.once('fetching', function (__, columns, opts) {","      /**","       * Fired before a {@link Model#fetchAll fetchAll} operation. A promise","       * may be returned from the event handler for async behaviour.","       *","       * @event Model#\"fetching:collection\"","       * @param {Model}    collection The collection that has been fetched.","       * @param {string[]} columns    The columns being retrieved by the query.","       * @param {Object}   options    Options object passed to {@link Model#fetchAll fetchAll}.","       * @returns {Promise}","       */","      return _this.triggerThen('fetching:collection', collection, columns, opts);","    }).once('fetched', function (__, resp, opts) {","      /**","       * Fired after a {@link Model#fetchAll fetchAll} operation. A promise","       * may be returned from the event handler for async behaviour.","       *","       * @event Model#\"fetched:collection\"","       * @param {Model}  collection The collection that has been fetched.","       * @param {Object} resp       The Knex query response.","       * @param {Object} options    Options object passed to {@link Model#fetchAll fetchAll}.","       * @returns {Promise}","       */","      return _this.triggerThen('fetched:collection', collection, resp, opts);","    }).fetch(options);","  },","","","  /**","   * @method Model#load","   * @description","   * The load method takes an array of relations to eager load attributes onto a","   * {@link Model}, in a similar way that the `withRelated` property works on","   * {@link Model#fetch fetch}. Dot separated attributes may be used to specify deep","   * eager loading.","   *","   * @example","   * new Posts().fetch().then(function(collection) {","   *   collection.at(0)","   *   .load(['author', 'content', 'comments.tags'])","   *   .then(function(model) {","   *     JSON.stringify(model);","   *   });","   * });","   *","   * {","   *   title: 'post title',","   *   author: {...},","   *   content: {...},","   *   comments: [","   *     {tags: [...]}, {tags: [...]}","   *   ]","   * }","   *","   * @param {string|string[]} relations The relation, or relations, to be loaded.","   * @param {Object=}      options Hash of options.","   * @param {Transaction=} options.transacting","   *   Optionally run the query in a transaction.","   * @returns {Promise<Model>} A promise resolving to this {@link Model model}","   */","  load: _promise2.default.method(function (relations, options) {","    var columns = this.format((0, _extends3.default)({}, this.attributes));","    var withRelated = _lodash2.default.isArray(relations) ? relations : [relations];","    return this._handleEager([columns], (0, _extends3.default)({}, options, { shallow: true, withRelated: withRelated })).return(this);","  }),","","  /**","   * @method Model#save","   * @description","   *","   * `save` is used to perform either an insert or update query using the","   * model's set {@link Model#attributes attributes}.","   *","   * If the model {@link Model#isNew isNew}, any {@link Model#defaults defaults}","   * will be set and an `insert` query will be performed. Otherwise it will","   * `update` the record with a corresponding ID. This behaviour can be overriden","   * with the `method` option.","   *","   *     new Post({name: 'New Article'}).save().then(function(model) {","   *       // ...","   *     });","   *","   * If you only wish to update with the params passed to the save, you may pass","   * a {patch: true} flag to the database:","   *","   *     // update authors set \"bio\" = 'Short user bio' where \"id\" = 1","   *     new Author({id: 1, first_name: 'User'})","   *       .save({bio: 'Short user bio'}, {patch: true})","   *       .then(function(model) {","   *         // ...","   *       });","   *","   * Several events fired on the model when saving: a {@link Model#creating","   * \"creating\"}, or {@link Model#updating \"updating\"} event if the model is","   * being inserted or updated, and a \"saving\" event in either case. To","   * prevent saving the model (with validation, etc.), throwing an error inside","   * one of these event listeners will stop saving the model and reject the","   * promise. A {@link Model#created \"created\"}, or {@link Model#\"updated\"}","   * event is fired after the model is saved, as well as a {@link Model#saved","   * \"saved\"} event either way. If you wish to modify the query when the {@link","   * Model#saving \"saving\"} event is fired, the knex query object should is","   * available in `options.query`.","   *","   *     // Save with no arguments","   *     Model.forge({id: 5, firstName: \"John\", lastName: \"Smith\"}).save().then(function() { //...","   *","   *     // Or add attributes during save","   *     Model.forge({id: 5}).save({firstName: \"John\", lastName: \"Smith\"}).then(function() { //...","   *","   *     // Or, if you prefer, for a single attribute","   *     Model.forge({id: 5}).save('name', 'John Smith').then(function() { //...","   *","   * @param {string=}      key                      Attribute name.","   * @param {string=}      val                      Attribute value.","   * @param {Object=}      attrs                    A hash of attributes.","   * @param {Object=}      options","   * @param {Transaction=} options.transacting","   *   Optionally run the query in a transaction.","   * @param {string=} options.method","   *   Explicitly select a save method, either `\"update\"` or `\"insert\"`.","   * @param {string} [options.defaults=false]","   *   Assign {@link Model#defaults defaults} in an `update` operation.","   * @param {bool} [options.patch=false]","   *   Only save attributes supplied in arguments to `save`.","   * @param {bool} [options.require=true]","   *   Throw a {@link Model.NoRowsUpdatedError} if no records are affected by save.","   *","   * @fires Model#saving","   * @fires Model#creating","   * @fires Model#updating","   * @fires Model#created","   * @fires Model#updated","   * @fires Model#saved","   *","   * @throws {Model.NoRowsUpdatedError}","   *","   * @returns {Promise<Model>} A promise resolving to the saved and updated model.","   */","  save: _promise2.default.method(function (key, val, options) {","    var attrs = void 0;","","    // Handle both `\"key\", value` and `{key: value}` -style arguments.","    if (key == null || (typeof key === 'undefined' ? 'undefined' : (0, _typeof3.default)(key)) === \"object\") {","      attrs = key || {};","      options = _lodash2.default.clone(val) || {};","    } else {","      (attrs = {})[key] = val;","      options = options ? _lodash2.default.clone(options) : {};","    }","","    return _promise2.default.bind(this).then(function () {","      return this.saveMethod(options);","    }).then(function (method) {","","      // Determine whether which kind of save we will do, update or insert.","      options.method = method;","","      // If the object is being created, we merge any defaults here rather than","      // during object creation.","      if (method === 'insert' || options.defaults) {","        var defaults = _lodash2.default.result(this, 'defaults');","        if (defaults) {","          attrs = _lodash2.default.defaultsDeep({}, attrs, this.attributes, defaults);","        }","      }","","      // Set the attributes on the model. Note that we do this before adding","      // timestamps, as `timestamp` calls `set` internally.","      this.set(attrs, { silent: true });","","      // Now set timestamps if appropriate. Extend `attrs` so that the","      // timestamps will be provided for a patch operation.","      if (this.hasTimestamps) {","        _lodash2.default.extend(attrs, this.timestamp(_lodash2.default.extend(options, { silent: true })));","      }","","      // If there are any save constraints, set them on the model.","      if (this.relatedData && this.relatedData.type !== 'morphTo') {","        _helpers2.default.saveConstraints(this, this.relatedData);","      }","","      // Gives access to the `query` object in the `options`, in case we need it","      // in any event handlers.","      var sync = this.sync(options);","      options.query = sync.query;","","      /**","       * Saving event.","       *","       * Fired before an `insert` or `update` query. A promise may be","       * returned from the event handler for async behaviour. Throwing an","       * exception from the handler will cancel the save.","       *","       * @event Model#saving","       * @param {Model}  model    The model firing the event.","       * @param {Object} attrs    Attributes that will be inserted or updated.","       * @param {Object} options  Options object passed to {@link Model#save save}.","       * @returns {Promise}","       */","","      /**","       * Creating event.","       *","       * Fired before `insert` query. A promise may be","       * returned from the event handler for async behaviour. Throwing an","       * exception from the handler will cancel the save operation.","       *","       * @event Model#creating","       * @param {Model}  model    The model firing the event.","       * @param {Object} attrs    Attributes that will be inserted.","       * @param {Object} options  Options object passed to {@link Model#save save}.","       * @returns {Promise}","       */","","      /**","       * Updating event.","       *","       * Fired before `update` query. A promise may be","       * returned from the event handler for async behaviour. Throwing an","       * exception from the handler will cancel the save operation.","       *","       * @event Model#updating","       * @param {Model}  model    The model firing the event.","       * @param {Object} attrs    Attributes that will be updated.","       * @param {Object} options  Options object passed to {@link Model#save save}.","       * @returns {Promise}","       */","      return this.triggerThen(method === 'insert' ? 'creating saving' : 'updating saving', this, attrs, options).bind(this).then(function () {","        return sync[options.method](method === 'update' && options.patch ? attrs : this.attributes);","      }).then(function (resp) {","","        // After a successful database save, the id is updated if the model was created","        if (method === 'insert' && this.id == null) {","          var updatedCols = {};","          updatedCols[this.idAttribute] = this.id = resp[0];","          var updatedAttrs = this.parse(updatedCols);","          _lodash2.default.assign(this.attributes, updatedAttrs);","        } else if (method === 'update' && resp === 0) {","          if (options.require !== false) {","            throw new this.constructor.NoRowsUpdatedError('No Rows Updated');","          }","        }","","        // In case we need to reference the `previousAttributes` for the this","        // in the following event handlers.","        options.previousAttributes = this._previousAttributes;","","        this._reset();","","        /**","         * Saved event.","         *","         * Fired after an `insert` or `update` query.","         *","         * @event Model#saved","         * @param {Model}  model    The model firing the event.","         * @param {Object} resp     The database response.","         * @param {Object} options  Options object passed to {@link Model#save save}.","         * @returns {Promise}","         */","","        /**","         * Created event.","         *","         * Fired after an `insert` query.","         *","         * @event Model#created","         * @param {Model}  model    The model firing the event.","         * @param {Object} attrs    Model firing the event.","         * @param {Object} options  Options object passed to {@link Model#save save}.","         * @returns {Promise}","         */","","        /**","         * Updated event.","         *","         * Fired after an `update` query.","         *","         * @event Model#updated","         * @param {Model}  model    The model firing the event.","         * @param {Object} attrs    Model firing the event.","         * @param {Object} options  Options object passed to {@link Model#save save}.","         * @returns {Promise}","         */","        return this.triggerThen(method === 'insert' ? 'created saved' : 'updated saved', this, resp, options);","      });","    }).return(this);","  }),","","  /**","   * `destroy` performs a `delete` on the model, using the model's {@link","   * Model#idAttribute idAttribute} to constrain the query.","   *","   * A {@link Model#destroying \"destroying\"} event is triggered on the model before being","   * destroyed. To prevent destroying the model (with validation, etc.), throwing an error","   * inside one of these event listeners will stop destroying the model and","   * reject the promise.","   *","   * A {@link Model#destroyed \"destroyed\"} event is fired after the model's","   * removal is completed.","   *","   * @method Model#destroy","   *","   * @param {Object=}      options                  Hash of options.","   * @param {Transaction=} options.transacting      Optionally run the query in a transaction.","   * @param {bool} [options.require=true]","   *   Throw a {@link Model.NoRowsDeletedError} if no records are affected by destroy.","   *","   * @example","   *","   * new User({id: 1})","   *   .destroy()","   *   .then(function(model) {","   *     // ...","   *   });","   *","   * @fires Model#destroying","   * @fires Model#destroyed","   *","   * @throws {Model.NoRowsDeletedError}","   *","   * @returns {Promise<Model>} A promise resolving to the destroyed and thus \"empty\" model.","   */","  destroy: _promise2.default.method(function (options) {","    options = options ? _lodash2.default.clone(options) : {};","    var sync = this.sync(options);","    options.query = sync.query;","    return _promise2.default.bind(this).then(function () {","","      /**","       * Destroying event.","       *","       * Fired before a `delete` query. A promise may be returned from the event","       * handler for async behaviour. Throwing an exception from the handler","       * will reject the promise and cancel the deletion.","       *","       * @event Model#destroying","       * @param {Model}  model    The model firing the event.","       * @param {Object} options  Options object passed to {@link Model#save save}.","       * @returns {Promise}","       */","      return this.triggerThen('destroying', this, options);","    }).then(function () {","      return sync.del();","    }).then(function (resp) {","      if (options.require && resp === 0) {","        throw new this.constructor.NoRowsDeletedError('No Rows Deleted');","      }","      this.clear();","","      /**","       * Destroyed event.","       *","       * Fired before a `delete` query. A promise may be returned from the event","       * handler for async behaviour.","       *","       * @event Model#destroyed","       * @param {Model}  model    The model firing the event.","       * @param {Object} attrs    Model firing the event.","       * @param {Object} options  Options object passed to {@link Model#save save}.","       * @returns {Promise}","       */","      return this.triggerThen('destroyed', this, resp, options);","    }).then(this._reset);","  }),","","  /**","   *  Used to reset the internal state of the current query builder instance.","   *  This method is called internally each time a database action is completed","   *  by {@link Sync}","   *","   *  @method Model#resetQuery","   *  @returns {Model}          Self, this method is chainable.","   */","  resetQuery: function resetQuery() {","    this._knex = null;","    return this;","  },","","","  /**","   * The `query` method is used to tap into the underlying Knex query builder","   * instance for the current model. If called with no arguments, it will","   * return the query builder directly. Otherwise, it will call the specified","   * method on the query builder, applying any additional arguments from the","   * `model.query` call. If the method argument is a function, it will be","   * called with the Knex query builder as the context and the first argument,","   * returning the current model.","   *","   * @example","   *","   * model","   *   .query('where', 'other_id', '=', '5')","   *   .fetch()","   *   .then(function(model) {","   *     // ...","   *   });","   *","   * model","   *   .query({where: {other_id: '5'}, orWhere: {key: 'value'}})","   *   .fetch()","   *   .then(function(model) {","   *     // ...","   *   });","   *","   * model.query(function(qb) {","   *   qb.where('other_person', 'LIKE', '%Demo').orWhere('other_id', '>', 10);","   * }).fetch()","   *   .then(function(model) {","   *     // ...","   *   });","   *","   * let qb = model.query();","   * qb.where({id: 1}).select().then(function(resp) {","   *   // ...","   * });","   *","   * @method Model#query","   * @param {function|Object|...string=} arguments The query method.","   * @returns {Model|QueryBuilder}","   *   Will return this model or, if called with no arguments, the underlying query builder.","   *","   * @see {@link http://knexjs.org/#Builder Knex `QueryBuilder`}","   */","  query: function query() {","    return _helpers2.default.query(this, _lodash2.default.toArray(arguments));","  },","","","  /**","   * The where method is used as convenience for the most common {@link","   * Model#query query} method, adding a where clause to the builder. Any","   * additional knex methods may be accessed using {@link Model#query query}.","   *","   * Accepts either key, value syntax, or a hash of attributes.","   *","   * @example","   *","   * model.where('favorite_color', '<>', 'green').fetch().then(function() { //...","   * // or","   * model.where('favorite_color', 'red').fetch().then(function() { //...","   * // or","   * model.where({favorite_color: 'red', shoe_size: 12}).fetch().then(function() { //...","   *","   * @method Model#where","   * @param {Object|...string} method","   *","   *   Either `key, [operator], value` syntax, or a hash of attributes to","   *   match. Note that these must be formatted as they are in the database,","   *   not how they are stored after {@link Model#parse}.","   *","   * @returns {Model} Self, this method is chainable.","   *","   * @see Model#query","   */","  where: function where() {","    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {","      args[_key] = arguments[_key];","    }","","    return this.query.apply(this, ['where'].concat(args));","  },","","","  /**","   * @method Model#orderBy","   * @since 0.9.3","   * @description","   *","   * Specifies the column to sort on and sort order.","   *","   * The order parameter is optional, and defaults to 'ASC'. You may","   * also specify 'DESC' order by prepending a hyphen to the sort column","   * name. `orderBy(\"date\", 'DESC')` is the same as `orderBy(\"-date\")`.","   *","   * Unless specified using dot notation (i.e., \"table.column\"), the default","   * table will be the table name of the model `orderBy` was called on.","   *","   * @example","   *","   * Car.forge().orderBy('color', 'ASC').fetchAll()","   *    .then(function (rows) { // ...","   *","   * @param sort {string}","   *   Column to sort on","   * @param order {string}","   *   Ascending ('ASC') or descending ('DESC') order","   */","  orderBy: function orderBy() {","    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {","      args[_key2] = arguments[_key2];","    }","","    return _helpers2.default.orderBy.apply(_helpers2.default, [this].concat(args));","  },","","","  /* Ensure that QueryBuilder is copied on clone. */","  clone: function clone() {","    // This needs to use the direct apply method because the spread operator","    // incorrectly converts to `clone.apply(ModelBase.prototype, arguments)`","    // instead of `apply(this, arguments)`","    var cloned = BookshelfModel.__super__.clone.apply(this, arguments);","    if (this._knex != null) {","      cloned._knex = cloned._builder(this._knex.clone());","    }","    return cloned;","  },","","","  /**","   * Creates and returns a new Bookshelf.Sync instance.","   *","   * @method Model#sync","   * @private","   * @returns Sync","   */","  sync: function sync(options) {","    return new _sync2.default(this, options);","  },","","","  /**","   * Helper for setting up the `morphOne` or `morphMany` relations.","   *","   * @method Model#_morphOneOrMany","   * @private","   */","  _morphOneOrMany: function _morphOneOrMany(Target, morphName, columnNames, morphValue, type) {","    if (!_lodash2.default.isArray(columnNames)) {","      // Shift by one place","      morphValue = columnNames;","      columnNames = null;","    }","    if (!morphName || !Target) throw new Error('The polymorphic `name` and `Target` are required.');","    return this._relation(type, Target, { morphName: morphName, morphValue: morphValue, columnNames: columnNames }).init(this);","  },","","","  /**","   * @name Model#_handleResponse","   * @private","   * @description","   *","   *   Handles the response data for the model, returning from the model's fetch call.","   *","   * @param {Object} Response from Knex query.","   *","   * @todo: need to check on Backbone's status there, ticket #2636","   * @todo: {silent: true, parse: true}, for parity with collection#set","   */","  _handleResponse: function _handleResponse(response) {","    var relatedData = this.relatedData;","    this.set(this.parse(response[0]), { silent: true })._reset();","    if (relatedData && relatedData.isJoined()) {","      relatedData.parsePivot([this]);","    }","  },","","","  /**","   * @name Model#_handleEager","   * @private","   * @description","   *","   *   Handles the related data loading on the model.","   *","   * @param {Object} Response from Knex query.","   */","  _handleEager: function _handleEager(response, options) {","    return new _eager2.default([this], response, this).fetch(options);","  }","}, {","  extended: function extended(child) {","    /**","     * @class Model.NotFoundError","     * @description","     *","     *   Thrown when no records are found by {@link Model#fetch fetch} or","     *   {@link Model#refresh} when called with the","     *   `{require: true}` option.","     */","    child.NotFoundError = (0, _createError2.default)(this.NotFoundError);","","    /**","     * @class Model.NoRowsUpdatedError","     * @description","     *","     *   Thrown when no records are saved by {@link Model#save save}","     *   unless called with the `{require: false}` option.","     */","    child.NoRowsUpdatedError = (0, _createError2.default)(this.NoRowsUpdatedError);","","    /**","     * @class Model.NoRowsDeletedError","     * @description","     *","     *   Thrown when no record is deleted by {@link Model#destroy destroy}","     *   if called with the `{require: true}` option.","     */","    child.NoRowsDeletedError = (0, _createError2.default)(this.NoRowsDeletedError);","  }","});","","BookshelfModel.NotFoundError = _errors2.default.NotFoundError;","BookshelfModel.NoRowsUpdatedError = _errors2.default.NoRowsUpdatedError;","BookshelfModel.NoRowsDeletedError = _errors2.default.NoRowsDeletedError;","","module.exports = BookshelfModel;"],"l":{"3":1,"5":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":1,"21":1,"23":1,"25":1,"27":1,"29":1,"31":1,"33":1,"35":1,"37":1,"39":1,"41":1,"43":10,"96":1,"143":0,"184":0,"233":0,"340":0,"395":0,"448":0,"487":0,"488":0,"490":0,"491":0,"492":0,"494":0,"495":0,"497":0,"578":0,"602":0,"604":0,"694":0,"699":0,"702":0,"706":0,"707":0,"719":0,"720":0,"739":0,"741":0,"742":0,"744":0,"750":0,"751":0,"752":0,"753":0,"754":0,"779":0,"815":0,"817":0,"818":0,"829":0,"841":0,"879":0,"880":0,"881":0,"957":0,"960":0,"961":0,"962":0,"964":0,"965":0,"968":0,"969":0,"973":0,"977":0,"978":0,"979":0,"980":0,"986":0,"990":0,"991":0,"995":0,"996":0,"1001":0,"1002":0,"1045":0,"1046":0,"1050":0,"1051":0,"1052":0,"1053":0,"1054":0,"1055":0,"1056":0,"1057":0,"1063":0,"1065":0,"1102":0,"1142":0,"1143":0,"1144":0,"1145":0,"1159":0,"1161":0,"1163":0,"1164":0,"1166":0,"1180":0,"1193":0,"1194":0,"1243":0,"1274":0,"1275":0,"1278":0,"1307":0,"1308":0,"1311":0,"1320":0,"1321":0,"1322":0,"1324":0,"1336":0,"1347":0,"1349":0,"1350":0,"1352":0,"1353":0,"1370":0,"1371":0,"1372":0,"1373":0,"1388":0,"1400":0,"1409":0,"1418":0,"1422":1,"1423":1,"1424":1,"1426":1}},"/home/travis/build/npmtest/node-npmtest-bookshelf/node_modules/bookshelf/lib/sync.js":{"path":"/home/travis/build/npmtest/node-npmtest-bookshelf/node_modules/bookshelf/lib/sync.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":3,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":1},"b":{"1":[2,1],"2":[3,3],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0]},"f":{"1":3,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}},"2":{"name":"Sync","line":24,"loc":{"start":{"line":24,"column":11},"end":{"line":24,"column":43}}},"3":{"name":"prefixFields","line":37,"loc":{"start":{"line":37,"column":16},"end":{"line":37,"column":46}}},"4":{"name":"(anonymous_4)","line":47,"loc":{"start":{"line":47,"column":34},"end":{"line":47,"column":56}}},"5":{"name":"(anonymous_5)","line":74,"loc":{"start":{"line":74,"column":34},"end":{"line":74,"column":52}}},"6":{"name":"(anonymous_6)","line":80,"loc":{"start":{"line":80,"column":45},"end":{"line":80,"column":57}}},"7":{"name":"(anonymous_7)","line":83,"loc":{"start":{"line":83,"column":52},"end":{"line":83,"column":64}}},"8":{"name":"(anonymous_8)","line":93,"loc":{"start":{"line":93,"column":12},"end":{"line":93,"column":24}}},"9":{"name":"(anonymous_9)","line":108,"loc":{"start":{"line":108,"column":12},"end":{"line":108,"column":24}}},"10":{"name":"(anonymous_10)","line":110,"loc":{"start":{"line":110,"column":12},"end":{"line":110,"column":28}}},"11":{"name":"(anonymous_11)","line":120,"loc":{"start":{"line":120,"column":35},"end":{"line":120,"column":47}}},"12":{"name":"(anonymous_12)","line":134,"loc":{"start":{"line":134,"column":45},"end":{"line":134,"column":57}}},"13":{"name":"(anonymous_13)","line":141,"loc":{"start":{"line":141,"column":52},"end":{"line":141,"column":64}}},"14":{"name":"(anonymous_14)","line":143,"loc":{"start":{"line":143,"column":21},"end":{"line":143,"column":33}}},"15":{"name":"(anonymous_15)","line":148,"loc":{"start":{"line":148,"column":98},"end":{"line":148,"column":110}}},"16":{"name":"(anonymous_16)","line":157,"loc":{"start":{"line":157,"column":11},"end":{"line":157,"column":23}}},"17":{"name":"(anonymous_17)","line":201,"loc":{"start":{"line":201,"column":12},"end":{"line":201,"column":24}}},"18":{"name":"(anonymous_18)","line":207,"loc":{"start":{"line":207,"column":35},"end":{"line":207,"column":47}}},"19":{"name":"(anonymous_19)","line":213,"loc":{"start":{"line":213,"column":35},"end":{"line":213,"column":52}}},"20":{"name":"(anonymous_20)","line":224,"loc":{"start":{"line":224,"column":32},"end":{"line":224,"column":44}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":55}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":48}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":32}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":47}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":41}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":49}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"8":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"9":{"start":{"line":24,"column":0},"end":{"line":31,"column":2}},"10":{"start":{"line":25,"column":2},"end":{"line":25,"column":26}},"11":{"start":{"line":26,"column":2},"end":{"line":26,"column":31}},"12":{"start":{"line":27,"column":2},"end":{"line":27,"column":38}},"13":{"start":{"line":28,"column":2},"end":{"line":28,"column":25}},"14":{"start":{"line":29,"column":2},"end":{"line":29,"column":40}},"15":{"start":{"line":29,"column":21},"end":{"line":29,"column":40}},"16":{"start":{"line":30,"column":2},"end":{"line":30,"column":71}},"17":{"start":{"line":30,"column":27},"end":{"line":30,"column":71}},"18":{"start":{"line":33,"column":0},"end":{"line":234,"column":3}},"19":{"start":{"line":38,"column":4},"end":{"line":38,"column":43}},"20":{"start":{"line":39,"column":4},"end":{"line":39,"column":22}},"21":{"start":{"line":40,"column":4},"end":{"line":42,"column":5}},"22":{"start":{"line":41,"column":6},"end":{"line":41,"column":52}},"23":{"start":{"line":43,"column":4},"end":{"line":43,"column":20}},"24":{"start":{"line":49,"column":4},"end":{"line":49,"column":29}},"25":{"start":{"line":50,"column":4},"end":{"line":50,"column":27}},"26":{"start":{"line":57,"column":4},"end":{"line":57,"column":94}},"27":{"start":{"line":59,"column":4},"end":{"line":64,"column":5}},"28":{"start":{"line":62,"column":6},"end":{"line":62,"column":71}},"29":{"start":{"line":63,"column":6},"end":{"line":63,"column":29}},"30":{"start":{"line":67,"column":4},"end":{"line":67,"column":19}},"31":{"start":{"line":69,"column":4},"end":{"line":69,"column":25}},"32":{"start":{"line":75,"column":4},"end":{"line":78,"column":17}},"33":{"start":{"line":80,"column":4},"end":{"line":112,"column":7}},"34":{"start":{"line":83,"column":6},"end":{"line":92,"column":9}},"35":{"start":{"line":83,"column":23},"end":{"line":92,"column":9}},"36":{"start":{"line":84,"column":8},"end":{"line":91,"column":9}},"37":{"start":{"line":85,"column":10},"end":{"line":85,"column":68}},"38":{"start":{"line":86,"column":10},"end":{"line":86,"column":59}},"39":{"start":{"line":87,"column":10},"end":{"line":87,"column":77}},"40":{"start":{"line":88,"column":15},"end":{"line":91,"column":9}},"41":{"start":{"line":89,"column":10},"end":{"line":89,"column":49}},"42":{"start":{"line":90,"column":10},"end":{"line":90,"column":47}},"43":{"start":{"line":94,"column":6},"end":{"line":94,"column":27}},"44":{"start":{"line":107,"column":6},"end":{"line":107,"column":73}},"45":{"start":{"line":109,"column":6},"end":{"line":109,"column":55}},"46":{"start":{"line":111,"column":6},"end":{"line":111,"column":27}},"47":{"start":{"line":121,"column":4},"end":{"line":121,"column":21}},"48":{"start":{"line":123,"column":4},"end":{"line":123,"column":26}},"49":{"start":{"line":124,"column":4},"end":{"line":124,"column":31}},"50":{"start":{"line":125,"column":4},"end":{"line":125,"column":47}},"51":{"start":{"line":126,"column":4},"end":{"line":126,"column":17}},"52":{"start":{"line":127,"column":4},"end":{"line":127,"column":23}},"53":{"start":{"line":132,"column":4},"end":{"line":132,"column":124}},"54":{"start":{"line":134,"column":4},"end":{"line":203,"column":7}},"55":{"start":{"line":137,"column":6},"end":{"line":137,"column":27}},"56":{"start":{"line":141,"column":6},"end":{"line":156,"column":9}},"57":{"start":{"line":141,"column":23},"end":{"line":156,"column":9}},"58":{"start":{"line":142,"column":8},"end":{"line":155,"column":9}},"59":{"start":{"line":143,"column":10},"end":{"line":152,"column":14}},"60":{"start":{"line":144,"column":12},"end":{"line":144,"column":70}},"61":{"start":{"line":145,"column":12},"end":{"line":145,"column":61}},"62":{"start":{"line":147,"column":12},"end":{"line":151,"column":14}},"63":{"start":{"line":149,"column":16},"end":{"line":149,"column":83}},"64":{"start":{"line":154,"column":10},"end":{"line":154,"column":116}},"65":{"start":{"line":154,"column":102},"end":{"line":154,"column":116}},"66":{"start":{"line":160,"column":6},"end":{"line":177,"column":7}},"67":{"start":{"line":161,"column":8},"end":{"line":161,"column":53}},"68":{"start":{"line":165,"column":8},"end":{"line":165,"column":66}},"69":{"start":{"line":165,"column":31},"end":{"line":165,"column":66}},"70":{"start":{"line":167,"column":8},"end":{"line":176,"column":9}},"71":{"start":{"line":170,"column":10},"end":{"line":170,"column":100}},"72":{"start":{"line":171,"column":15},"end":{"line":176,"column":9}},"73":{"start":{"line":175,"column":10},"end":{"line":175,"column":81}},"74":{"start":{"line":181,"column":6},"end":{"line":181,"column":27}},"75":{"start":{"line":200,"column":6},"end":{"line":200,"column":84}},"76":{"start":{"line":202,"column":6},"end":{"line":202,"column":34}},"77":{"start":{"line":208,"column":4},"end":{"line":208,"column":31}},"78":{"start":{"line":209,"column":4},"end":{"line":209,"column":132}},"79":{"start":{"line":214,"column":4},"end":{"line":215,"column":27}},"80":{"start":{"line":216,"column":4},"end":{"line":216,"column":73}},"81":{"start":{"line":216,"column":28},"end":{"line":216,"column":73}},"82":{"start":{"line":217,"column":4},"end":{"line":219,"column":5}},"83":{"start":{"line":218,"column":6},"end":{"line":218,"column":95}},"84":{"start":{"line":220,"column":4},"end":{"line":220,"column":93}},"85":{"start":{"line":225,"column":4},"end":{"line":226,"column":31}},"86":{"start":{"line":227,"column":4},"end":{"line":227,"column":73}},"87":{"start":{"line":227,"column":28},"end":{"line":227,"column":73}},"88":{"start":{"line":228,"column":4},"end":{"line":230,"column":5}},"89":{"start":{"line":229,"column":6},"end":{"line":229,"column":97}},"90":{"start":{"line":231,"column":4},"end":{"line":231,"column":28}},"91":{"start":{"line":236,"column":0},"end":{"line":236,"column":22}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]},"3":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":12},"end":{"line":25,"column":19}},{"start":{"line":25,"column":23},"end":{"line":25,"column":25}}]},"4":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":2},"end":{"line":29,"column":2}},{"start":{"line":29,"column":2},"end":{"line":29,"column":2}}]},"5":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]},"6":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":4},"end":{"line":59,"column":4}},{"start":{"line":59,"column":4},"end":{"line":59,"column":4}}]},"7":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":6},"end":{"line":83,"column":6}},{"start":{"line":83,"column":6},"end":{"line":83,"column":6}}]},"8":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":8},"end":{"line":84,"column":8}},{"start":{"line":84,"column":8},"end":{"line":84,"column":8}}]},"9":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":15},"end":{"line":88,"column":15}},{"start":{"line":88,"column":15},"end":{"line":88,"column":15}}]},"10":{"line":109,"type":"binary-expr","locations":[{"start":{"line":109,"column":25},"end":{"line":109,"column":31}},{"start":{"line":109,"column":35},"end":{"line":109,"column":38}}]},"11":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":6},"end":{"line":141,"column":6}},{"start":{"line":141,"column":6},"end":{"line":141,"column":6}}]},"12":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":8},"end":{"line":142,"column":8}},{"start":{"line":142,"column":8},"end":{"line":142,"column":8}}]},"13":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":10},"end":{"line":154,"column":10}},{"start":{"line":154,"column":10},"end":{"line":154,"column":10}}]},"14":{"line":154,"type":"cond-expr","locations":[{"start":{"line":154,"column":45},"end":{"line":154,"column":56}},{"start":{"line":154,"column":59},"end":{"line":154,"column":86}}]},"15":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":6},"end":{"line":160,"column":6}},{"start":{"line":160,"column":6},"end":{"line":160,"column":6}}]},"16":{"line":165,"type":"if","locations":[{"start":{"line":165,"column":8},"end":{"line":165,"column":8}},{"start":{"line":165,"column":8},"end":{"line":165,"column":8}}]},"17":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":8},"end":{"line":167,"column":8}},{"start":{"line":167,"column":8},"end":{"line":167,"column":8}}]},"18":{"line":170,"type":"cond-expr","locations":[{"start":{"line":170,"column":64},"end":{"line":170,"column":79}},{"start":{"line":170,"column":82},"end":{"line":170,"column":99}}]},"19":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":15},"end":{"line":171,"column":15}},{"start":{"line":171,"column":15},"end":{"line":171,"column":15}}]},"20":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":4},"end":{"line":216,"column":4}},{"start":{"line":216,"column":4},"end":{"line":216,"column":4}}]},"21":{"line":217,"type":"if","locations":[{"start":{"line":217,"column":4},"end":{"line":217,"column":4}},{"start":{"line":217,"column":4},"end":{"line":217,"column":4}}]},"22":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":4},"end":{"line":227,"column":4}},{"start":{"line":227,"column":4},"end":{"line":227,"column":4}}]},"23":{"line":228,"type":"if","locations":[{"start":{"line":228,"column":4},"end":{"line":228,"column":4}},{"start":{"line":228,"column":4},"end":{"line":228,"column":4}}]}},"code":["'use strict';","","var _typeof2 = require('babel-runtime/helpers/typeof');","","var _typeof3 = _interopRequireDefault(_typeof2);","","var _lodash = require('lodash');","","var _lodash2 = _interopRequireDefault(_lodash);","","var _promise = require('./base/promise');","","var _promise2 = _interopRequireDefault(_promise);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","// Sync is the dispatcher for any database queries,","// taking the \"syncing\" `model` or `collection` being queried, along with","// a hash of options that are used in the various query methods.","// If the `transacting` option is set, the query is assumed to be","// part of a transaction, and this information is passed along to `Knex`.","// Sync","// ---------------","var Sync = function Sync(syncing, options) {","  options = options || {};","  this.query = syncing.query();","  this.syncing = syncing.resetQuery();","  this.options = options;","  if (options.debug) this.query.debug();","  if (options.transacting) this.query.transacting(options.transacting);","};","","_lodash2.default.extend(Sync.prototype, {","","  // Prefix all keys of the passed in object with the","  // current table name","  prefixFields: function prefixFields(fields) {","    var tableName = this.syncing.tableName;","    var prefixed = {};","    for (var key in fields) {","      prefixed[tableName + '.' + key] = fields[key];","    }","    return prefixed;","  },","","  // Select the first item from the database - only used by models.","  first: _promise2.default.method(function (attributes) {","","    var model = this.syncing;","    var query = this.query;","","    // We'll never use an JSON object for a search, because even","    // PostgreSQL, which has JSON type columns, does not support the `=`","    // operator.","    //","    // NOTE: `_.omit` returns an empty object, even if attributes are null.","    var whereAttributes = _lodash2.default.omitBy(attributes, _lodash2.default.isPlainObject);","","    if (!_lodash2.default.isEmpty(whereAttributes)) {","","      // Format and prefix attributes.","      var formatted = this.prefixFields(model.format(whereAttributes));","      query.where(formatted);","    }","","    // Limit to a single result.","    query.limit(1);","","    return this.select();","  }),","","  // Runs a `count` query on the database, adding any necessary relational","  // constraints. Returns a promise that resolves to an integer count.","  count: _promise2.default.method(function (column) {","    var knex = this.query,","        options = this.options,","        relatedData = this.syncing.relatedData,","        fks = {};","","    return _promise2.default.bind(this).then(function () {","      // Inject all appropriate select costraints dealing with the relation","      // into the `knex` query builder for the current instance.","      if (relatedData) return _promise2.default.try(function () {","        if (relatedData.isThrough()) {","          fks[relatedData.key('foreignKey')] = relatedData.parentFk;","          var through = new relatedData.throughTarget(fks);","          relatedData.pivotColumns = through.parse(relatedData.pivotColumns);","        } else if (relatedData.type === 'hasMany') {","          var fk = relatedData.key('foreignKey');","          knex.where(fk, relatedData.parentFk);","        }","      });","    }).then(function () {","      options.query = knex;","","      /**","       * Counting event.","       *","       * Fired before a `count` query. A promise may be","       * returned from the event handler for async behaviour.","       *","       * @event Model#counting","       * @param {Model}  model    The model firing the event.","       * @param {Object} options  Options object passed to {@link Model#count count}.","       * @returns {Promise}","       */","      return this.syncing.triggerThen('counting', this.syncing, options);","    }).then(function () {","      return knex.count((column || '*') + ' as count');","    }).then(function (rows) {","      return rows[0].count;","    });","  }),","","  // Runs a `select` query on the database, adding any necessary relational","  // constraints, resetting the query when complete. If there are results and","  // eager loaded relations, those are fetched and returned on the model before","  // the promise is resolved. Any `success` handler passed in the","  // options will be called - used by both models & collections.","  select: _promise2.default.method(function () {","    var _this = this;","","    var knex = this.query;","    var options = this.options;","    var relatedData = this.syncing.relatedData;","    var fks = {};","    var columns = null;","","    // Check if any `select` style statements have been called with column","    // specifications. This could include `distinct()` with no arguments, which","    // does not affect inform the columns returned.","    var queryContainsColumns = (0, _lodash2.default)(knex._statements).filter({ grouping: 'columns' }).some('value.length');","","    return _promise2.default.bind(this).then(function () {","      // Set the query builder on the options, in-case we need to","      // access in the `fetching` event handlers.","      options.query = knex;","","      // Inject all appropriate select costraints dealing with the relation","      // into the `knex` query builder for the current instance.","      if (relatedData) return _promise2.default.try(function () {","        if (relatedData.isThrough()) {","          var _ret = function () {","            fks[relatedData.key('foreignKey')] = relatedData.parentFk;","            var through = new relatedData.throughTarget(fks);","","            return {","              v: through.triggerThen('fetching', through, relatedData.pivotColumns, options).then(function () {","                relatedData.pivotColumns = through.parse(relatedData.pivotColumns);","              })","            };","          }();","","          if ((typeof _ret === 'undefined' ? 'undefined' : (0, _typeof3.default)(_ret)) === \"object\") return _ret.v;","        }","      });","    }).tap(function () {","","      // If this is a relation, apply the appropriate constraints.","      if (relatedData) {","        relatedData.selectConstraints(knex, options);","      } else {","","        // Call the function, if one exists, to constrain the eager loaded query.","        if (options._beforeFn) options._beforeFn.call(knex, knex);","","        if (options.columns) {","","          // Normalize single column name into array.","          columns = _lodash2.default.isArray(options.columns) ? options.columns : [options.columns];","        } else if (!queryContainsColumns) {","","          // If columns have already been selected via the `query` method","          // we will use them. Otherwise, select all columns in this table.","          columns = [_lodash2.default.result(_this.syncing, 'tableName') + '.*'];","        }","      }","","      // Set the query builder on the options, for access in the `fetching`","      // event handlers.","      options.query = knex;","","      /**","       * Fired before a `fetch` operation. A promise may be returned from the","       * event handler for async behaviour.","       *","       * @event Model#fetching","       * @param {Model} model","       *   The model which is about to be fetched.","       * @param {string[]} columns","       *   The columns to be retrieved by the query.","       * @param {Object} options","       *   Options object passed to {@link Model#fetch fetch}.","       * @param {QueryBuilder} options.query","       *   Query builder to be used for fetching. This can be modified to","       *   change the query before it is executed.","       *","       * @returns {Promise}","       */","      return _this.syncing.triggerThen('fetching', _this.syncing, columns, options);","    }).then(function () {","      return knex.select(columns);","    });","  }),","","  // Issues an `insert` command on the query - only used by models.","  insert: _promise2.default.method(function () {","    var syncing = this.syncing;","    return this.query.insert(syncing.format(_lodash2.default.extend(Object.create(null), syncing.attributes)), syncing.idAttribute);","  }),","","  // Issues an `update` command on the query - only used by models.","  update: _promise2.default.method(function (attrs) {","    var syncing = this.syncing,","        query = this.query;","    if (syncing.id != null) query.where(syncing.idAttribute, syncing.id);","    if (_lodash2.default.filter(query._statements, { grouping: 'where' }).length === 0) {","      throw new Error('A model cannot be updated without a \"where\" clause or an idAttribute.');","    }","    return query.update(syncing.format(_lodash2.default.extend(Object.create(null), attrs)));","  }),","","  // Issues a `delete` command on the query.","  del: _promise2.default.method(function () {","    var query = this.query,","        syncing = this.syncing;","    if (syncing.id != null) query.where(syncing.idAttribute, syncing.id);","    if (_lodash2.default.filter(query._statements, { grouping: 'where' }).length === 0) {","      throw new Error('A model cannot be destroyed without a \"where\" clause or an idAttribute.');","    }","    return this.query.del();","  })","","});","","module.exports = Sync;"],"l":{"3":1,"5":1,"7":1,"9":1,"11":1,"13":1,"15":3,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"33":1,"38":0,"39":0,"40":0,"41":0,"43":0,"49":0,"50":0,"57":0,"59":0,"62":0,"63":0,"67":0,"69":0,"75":0,"80":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"94":0,"107":0,"109":0,"111":0,"121":0,"123":0,"124":0,"125":0,"126":0,"127":0,"132":0,"134":0,"137":0,"141":0,"142":0,"143":0,"144":0,"145":0,"147":0,"149":0,"154":0,"160":0,"161":0,"165":0,"167":0,"170":0,"171":0,"175":0,"181":0,"200":0,"202":0,"208":0,"209":0,"214":0,"216":0,"217":0,"218":0,"220":0,"225":0,"227":0,"228":0,"229":0,"231":0,"236":1}},"/home/travis/build/npmtest/node-npmtest-bookshelf/node_modules/bookshelf/lib/eager.js":{"path":"/home/travis/build/npmtest/node-npmtest-bookshelf/node_modules/bookshelf/lib/eager.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":10,"24":1,"25":0,"26":0,"27":1,"28":1,"29":1,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1,"77":1},"b":{"1":[7,3],"2":[10,10],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":10,"2":0,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":47,"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":37}}},"2":{"name":"getAttributeUnique","line":51,"loc":{"start":{"line":51,"column":25},"end":{"line":51,"column":72}}},"3":{"name":"(anonymous_3)","line":52,"loc":{"start":{"line":52,"column":60},"end":{"line":52,"column":73}}},"4":{"name":"(anonymous_4)","line":62,"loc":{"start":{"line":62,"column":20},"end":{"line":62,"column":42}}},"5":{"name":"EagerRelation","line":65,"loc":{"start":{"line":65,"column":2},"end":{"line":65,"column":27}}},"6":{"name":"eagerFetch","line":76,"loc":{"start":{"line":76,"column":11},"end":{"line":76,"column":63}}},"7":{"name":"(anonymous_7)","line":88,"loc":{"start":{"line":88,"column":117},"end":{"line":88,"column":137}}},"8":{"name":"morphToFetch","line":99,"loc":{"start":{"line":99,"column":11},"end":{"line":99,"column":69}}},"9":{"name":"(anonymous_9)","line":111,"loc":{"start":{"line":111,"column":64},"end":{"line":111,"column":81}}},"10":{"name":"(anonymous_10)","line":114,"loc":{"start":{"line":114,"column":67},"end":{"line":114,"column":92}}},"11":{"name":"(anonymous_11)","line":118,"loc":{"start":{"line":118,"column":71},"end":{"line":118,"column":96}}},"12":{"name":"(anonymous_12)","line":123,"loc":{"start":{"line":123,"column":84},"end":{"line":123,"column":104}}},"13":{"name":"_eagerLoadHelper","line":134,"loc":{"start":{"line":134,"column":11},"end":{"line":134,"column":79}}},"14":{"name":"(anonymous_14)","line":140,"loc":{"start":{"line":140,"column":35},"end":{"line":140,"column":47}}},"15":{"name":"(anonymous_15)","line":154,"loc":{"start":{"line":154,"column":13},"end":{"line":154,"column":25}}},"16":{"name":"(anonymous_16)","line":155,"loc":{"start":{"line":155,"column":52},"end":{"line":155,"column":69}}},"17":{"name":"_filterRelated","line":166,"loc":{"start":{"line":166,"column":11},"end":{"line":166,"column":58}}},"18":{"name":"(anonymous_18)","line":170,"loc":{"start":{"line":170,"column":58},"end":{"line":170,"column":79}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":69}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":62}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":57}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":50}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":71}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":64}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":65}},"9":{"start":{"line":21,"column":0},"end":{"line":21,"column":58}},"10":{"start":{"line":23,"column":0},"end":{"line":23,"column":93}},"11":{"start":{"line":25,"column":0},"end":{"line":25,"column":86}},"12":{"start":{"line":27,"column":0},"end":{"line":27,"column":59}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":52}},"14":{"start":{"line":31,"column":0},"end":{"line":31,"column":32}},"15":{"start":{"line":33,"column":0},"end":{"line":33,"column":47}},"16":{"start":{"line":35,"column":0},"end":{"line":35,"column":36}},"17":{"start":{"line":37,"column":0},"end":{"line":37,"column":49}},"18":{"start":{"line":39,"column":0},"end":{"line":39,"column":41}},"19":{"start":{"line":41,"column":0},"end":{"line":41,"column":49}},"20":{"start":{"line":43,"column":0},"end":{"line":43,"column":37}},"21":{"start":{"line":45,"column":0},"end":{"line":45,"column":45}},"22":{"start":{"line":47,"column":0},"end":{"line":47,"column":95}},"23":{"start":{"line":47,"column":39},"end":{"line":47,"column":93}},"24":{"start":{"line":51,"column":0},"end":{"line":55,"column":2}},"25":{"start":{"line":52,"column":2},"end":{"line":54,"column":6}},"26":{"start":{"line":53,"column":4},"end":{"line":53,"column":28}},"27":{"start":{"line":62,"column":0},"end":{"line":180,"column":19}},"28":{"start":{"line":63,"column":2},"end":{"line":63,"column":53}},"29":{"start":{"line":65,"column":2},"end":{"line":68,"column":3}},"30":{"start":{"line":66,"column":4},"end":{"line":66,"column":55}},"31":{"start":{"line":67,"column":4},"end":{"line":67,"column":148}},"32":{"start":{"line":70,"column":2},"end":{"line":178,"column":6}},"33":{"start":{"line":77,"column":6},"end":{"line":77,"column":24}},"34":{"start":{"line":79,"column":6},"end":{"line":79,"column":44}},"35":{"start":{"line":82,"column":6},"end":{"line":82,"column":48}},"36":{"start":{"line":82,"column":41},"end":{"line":82,"column":48}},"37":{"start":{"line":84,"column":6},"end":{"line":86,"column":7}},"38":{"start":{"line":85,"column":8},"end":{"line":85,"column":69}},"39":{"start":{"line":88,"column":6},"end":{"line":90,"column":9}},"40":{"start":{"line":89,"column":8},"end":{"line":89,"column":122}},"41":{"start":{"line":100,"column":6},"end":{"line":100,"column":24}},"42":{"start":{"line":102,"column":6},"end":{"line":102,"column":54}},"43":{"start":{"line":103,"column":6},"end":{"line":103,"column":44}},"44":{"start":{"line":105,"column":6},"end":{"line":109,"column":87}},"45":{"start":{"line":111,"column":6},"end":{"line":113,"column":9}},"46":{"start":{"line":112,"column":8},"end":{"line":112,"column":37}},"47":{"start":{"line":114,"column":6},"end":{"line":116,"column":9}},"48":{"start":{"line":115,"column":8},"end":{"line":115,"column":78}},"49":{"start":{"line":118,"column":6},"end":{"line":127,"column":41}},"50":{"start":{"line":119,"column":8},"end":{"line":119,"column":40}},"51":{"start":{"line":120,"column":8},"end":{"line":120,"column":83}},"52":{"start":{"line":121,"column":8},"end":{"line":121,"column":56}},"53":{"start":{"line":123,"column":8},"end":{"line":126,"column":11}},"54":{"start":{"line":124,"column":10},"end":{"line":124,"column":114}},"55":{"start":{"line":125,"column":10},"end":{"line":125,"column":98}},"56":{"start":{"line":135,"column":6},"end":{"line":135,"column":24}},"57":{"start":{"line":137,"column":6},"end":{"line":137,"column":75}},"58":{"start":{"line":138,"column":6},"end":{"line":138,"column":44}},"59":{"start":{"line":140,"column":6},"end":{"line":158,"column":9}},"60":{"start":{"line":142,"column":8},"end":{"line":153,"column":9}},"61":{"start":{"line":143,"column":10},"end":{"line":143,"column":55}},"62":{"start":{"line":147,"column":10},"end":{"line":151,"column":11}},"63":{"start":{"line":148,"column":12},"end":{"line":148,"column":75}},"64":{"start":{"line":149,"column":12},"end":{"line":149,"column":49}},"65":{"start":{"line":149,"column":42},"end":{"line":149,"column":49}},"66":{"start":{"line":150,"column":12},"end":{"line":150,"column":89}},"67":{"start":{"line":152,"column":10},"end":{"line":152,"column":106}},"68":{"start":{"line":155,"column":8},"end":{"line":157,"column":11}},"69":{"start":{"line":156,"column":10},"end":{"line":156,"column":80}},"70":{"start":{"line":170,"column":6},"end":{"line":176,"column":13}},"71":{"start":{"line":171,"column":8},"end":{"line":174,"column":9}},"72":{"start":{"line":172,"column":10},"end":{"line":172,"column":38}},"73":{"start":{"line":173,"column":10},"end":{"line":173,"column":77}},"74":{"start":{"line":173,"column":62},"end":{"line":173,"column":77}},"75":{"start":{"line":175,"column":8},"end":{"line":175,"column":20}},"76":{"start":{"line":179,"column":2},"end":{"line":179,"column":23}},"77":{"start":{"line":182,"column":0},"end":{"line":182,"column":32}}},"branchMap":{"1":{"line":47,"type":"cond-expr","locations":[{"start":{"line":47,"column":70},"end":{"line":47,"column":73}},{"start":{"line":47,"column":76},"end":{"line":47,"column":92}}]},"2":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":46},"end":{"line":47,"column":49}},{"start":{"line":47,"column":53},"end":{"line":47,"column":67}}]},"3":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":59},"end":{"line":67,"column":82}},{"start":{"line":67,"column":86},"end":{"line":67,"column":122}}]},"4":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":6},"end":{"line":82,"column":6}},{"start":{"line":82,"column":6},"end":{"line":82,"column":6}}]},"5":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":6},"end":{"line":84,"column":6}},{"start":{"line":84,"column":6},"end":{"line":84,"column":6}}]},"6":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":24},"end":{"line":102,"column":47}},{"start":{"line":102,"column":51},"end":{"line":102,"column":53}}]},"7":{"line":107,"type":"cond-expr","locations":[{"start":{"line":107,"column":53},"end":{"line":107,"column":72}},{"start":{"line":107,"column":75},"end":{"line":107,"column":88}}]},"8":{"line":109,"type":"cond-expr","locations":[{"start":{"line":109,"column":52},"end":{"line":109,"column":69}},{"start":{"line":109,"column":72},"end":{"line":109,"column":86}}]},"9":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":8},"end":{"line":142,"column":8}},{"start":{"line":142,"column":8},"end":{"line":142,"column":8}}]},"10":{"line":142,"type":"binary-expr","locations":[{"start":{"line":142,"column":12},"end":{"line":142,"column":31}},{"start":{"line":142,"column":35},"end":{"line":142,"column":54}}]},"11":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":10},"end":{"line":147,"column":10}},{"start":{"line":147,"column":10},"end":{"line":147,"column":10}}]},"12":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":12},"end":{"line":149,"column":12}},{"start":{"line":149,"column":12},"end":{"line":149,"column":12}}]},"13":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":10},"end":{"line":173,"column":10}},{"start":{"line":173,"column":10},"end":{"line":173,"column":10}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');","","var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);","","var _extends2 = require('babel-runtime/helpers/extends');","","var _extends3 = _interopRequireDefault(_extends2);","","var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');","","var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);","","var _createClass2 = require('babel-runtime/helpers/createClass');","","var _createClass3 = _interopRequireDefault(_createClass2);","","var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');","","var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);","","var _inherits2 = require('babel-runtime/helpers/inherits');","","var _inherits3 = _interopRequireDefault(_inherits2);","","var _lodash = require('lodash');","","var _lodash2 = _interopRequireDefault(_lodash);","","var _helpers = require('./helpers');","","var _helpers2 = _interopRequireDefault(_helpers);","","var _promise = require('./base/promise');","","var _promise2 = _interopRequireDefault(_promise);","","var _eager = require('./base/eager');","","var _eager2 = _interopRequireDefault(_eager);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","// EagerRelation","// ---------------","var getAttributeUnique = function getAttributeUnique(models, attribute) {","  return _lodash2.default.uniq(_lodash2.default.map(models, function (m) {","    return m.get(attribute);","  }));","};","","// An `EagerRelation` object temporarily stores the models from an eager load,","// and handles matching eager loaded objects with their parent(s). The","// `tempModel` is only used to retrieve the value of the relation method, to","// know the constraints for the eager query.","","var EagerRelation = function (_EagerBase) {","  (0, _inherits3.default)(EagerRelation, _EagerBase);","","  function EagerRelation() {","    (0, _classCallCheck3.default)(this, EagerRelation);","    return (0, _possibleConstructorReturn3.default)(this, (EagerRelation.__proto__ || Object.getPrototypeOf(EagerRelation)).apply(this, arguments));","  }","","  (0, _createClass3.default)(EagerRelation, [{","    key: 'eagerFetch',","","","    // Handles an eager loaded fetch, passing the name of the item we're fetching","    // for, and any options needed for the current fetch.","    value: function eagerFetch(relationName, handled, options) {","      var _this2 = this;","","      var relatedData = handled.relatedData;","","      // skip eager loading for rows where the foreign key isn't set","      if (relatedData.parentFk === null) return;","","      if (relatedData.type === 'morphTo') {","        return this.morphToFetch(relationName, relatedData, options);","      }","","      return handled.sync((0, _extends3.default)({}, options, { parentResponse: this.parentResponse })).select().tap(function (response) {","        return _this2._eagerLoadHelper(response, relationName, handled, _lodash2.default.omit(options, 'parentResponse'));","      });","    }","","    // Special handler for the eager loaded morph-to relations, this handles the","    // fact that there are several potential models that we need to be fetching","    // against.  pairing them up onto a single response for the eager loading.","","  }, {","    key: 'morphToFetch',","    value: function morphToFetch(relationName, relatedData, options) {","      var _this3 = this;","","      var columnNames = relatedData.columnNames || [];","      var morphName = relatedData.morphName;","","      var _columnNames = (0, _slicedToArray3.default)(columnNames, 2),","          _columnNames$ = _columnNames[0],","          typeColumn = _columnNames$ === undefined ? morphName + '_type' : _columnNames$,","          _columnNames$2 = _columnNames[1],","          idColumn = _columnNames$2 === undefined ? morphName + '_id' : _columnNames$2;","","      var parentsByType = _lodash2.default.groupBy(this.parent, function (model) {","        return model.get(typeColumn);","      });","      var TargetByType = _lodash2.default.mapValues(parentsByType, function (parents, type) {","        return _helpers2.default.morphCandidate(relatedData.candidates, type);","      });","","      return _promise2.default.all(_lodash2.default.map(parentsByType, function (parents, type) {","        var Target = TargetByType[type];","        var idAttribute = _lodash2.default.result(Target.prototype, 'idAttribute');","        var ids = getAttributeUnique(parents, idColumn);","","        return Target.query('whereIn', idAttribute, ids).sync(options).select().tap(function (response) {","          var clone = relatedData.instance('morphTo', Target, { morphName: morphName, columnNames: columnNames });","          return _this3._eagerLoadHelper(response, relationName, { relatedData: clone }, options);","        });","      })).then(_lodash2.default.flatten);","    }","","    // Handles the eager load for both the `morphTo` and regular cases.","","  }, {","    key: '_eagerLoadHelper',","    value: function _eagerLoadHelper(response, relationName, handled, options) {","      var _this4 = this;","","      var relatedModels = this.pushModels(relationName, handled, response);","      var relatedData = handled.relatedData;","","      return _promise2.default.try(function () {","        // If there is a response, fetch additional nested eager relations, if any.","        if (response.length > 0 && options.withRelated) {","          var relatedModel = relatedData.createModel();","","          // If this is a `morphTo` relation, we need to do additional processing","          // to ensure we don't try to load any relations that don't look to exist.","          if (relatedData.type === 'morphTo') {","            var withRelated = _this4._filterRelated(relatedModel, options);","            if (withRelated.length === 0) return;","            options = _lodash2.default.extend({}, options, { withRelated: withRelated });","          }","          return new EagerRelation(relatedModels, response, relatedModel).fetch(options).return(response);","        }","      }).tap(function () {","        return _promise2.default.map(relatedModels, function (model) {","          return model.triggerThen('fetched', model, model.attributes, options);","        });","      });","    }","","    // Filters the `withRelated` on a `morphTo` relation, to ensure that only valid","    // relations are attempted for loading.","","  }, {","    key: '_filterRelated',","    value: function _filterRelated(relatedModel, options) {","","      // By this point, all withRelated should be turned into a hash, so it should","      // be fairly simple to process by splitting on the dots.","      return _lodash2.default.reduce(options.withRelated, function (memo, val) {","        for (var key in val) {","          var seg = key.split('.')[0];","          if (_lodash2.default.isFunction(relatedModel[seg])) memo.push(val);","        }","        return memo;","      }, []);","    }","  }]);","  return EagerRelation;","}(_eager2.default);","","exports.default = EagerRelation;"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":1,"21":1,"23":1,"25":1,"27":1,"29":1,"31":1,"33":1,"35":1,"37":1,"39":1,"41":1,"43":1,"45":1,"47":10,"51":1,"52":0,"53":0,"62":1,"63":1,"65":1,"66":0,"67":0,"70":1,"77":0,"79":0,"82":0,"84":0,"85":0,"88":0,"89":0,"100":0,"102":0,"103":0,"105":0,"111":0,"112":0,"114":0,"115":0,"118":0,"119":0,"120":0,"121":0,"123":0,"124":0,"125":0,"135":0,"137":0,"138":0,"140":0,"142":0,"143":0,"147":0,"148":0,"149":0,"150":0,"152":0,"155":0,"156":0,"170":0,"171":0,"172":0,"173":0,"175":0,"179":1,"182":1}},"/home/travis/build/npmtest/node-npmtest-bookshelf/node_modules/bookshelf/lib/base/eager.js":{"path":"/home/travis/build/npmtest/node-npmtest-bookshelf/node_modules/bookshelf/lib/base/eager.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":2,"7":1,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1},"b":{"1":[1,1],"2":[2,2],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":37}}},"2":{"name":"EagerBase","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":51}}},"3":{"name":"(anonymous_3)","line":31,"loc":{"start":{"line":31,"column":34},"end":{"line":31,"column":53}}},"4":{"name":"prepWithRelated","line":88,"loc":{"start":{"line":88,"column":19},"end":{"line":88,"column":57}}},"5":{"name":"pushModels","line":104,"loc":{"start":{"line":104,"column":14},"end":{"line":104,"column":67}}},"6":{"name":"(anonymous_6)","line":108,"loc":{"start":{"line":108,"column":45},"end":{"line":108,"column":60}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":47}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":36}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":49}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":95}},"6":{"start":{"line":11,"column":39},"end":{"line":11,"column":93}},"7":{"start":{"line":21,"column":0},"end":{"line":25,"column":1}},"8":{"start":{"line":22,"column":2},"end":{"line":22,"column":23}},"9":{"start":{"line":23,"column":2},"end":{"line":23,"column":39}},"10":{"start":{"line":24,"column":2},"end":{"line":24,"column":23}},"11":{"start":{"line":27,"column":0},"end":{"line":114,"column":3}},"12":{"start":{"line":32,"column":4},"end":{"line":32,"column":29}},"13":{"start":{"line":33,"column":4},"end":{"line":33,"column":36}},"14":{"start":{"line":34,"column":4},"end":{"line":34,"column":64}},"15":{"start":{"line":35,"column":4},"end":{"line":35,"column":24}},"16":{"start":{"line":38,"column":4},"end":{"line":38,"column":27}},"17":{"start":{"line":42,"column":4},"end":{"line":64,"column":5}},"18":{"start":{"line":43,"column":6},"end":{"line":43,"column":35}},"19":{"start":{"line":44,"column":6},"end":{"line":44,"column":36}},"20":{"start":{"line":47,"column":6},"end":{"line":52,"column":7}},"21":{"start":{"line":48,"column":8},"end":{"line":48,"column":28}},"22":{"start":{"line":49,"column":8},"end":{"line":49,"column":66}},"23":{"start":{"line":50,"column":8},"end":{"line":50,"column":66}},"24":{"start":{"line":51,"column":8},"end":{"line":51,"column":50}},"25":{"start":{"line":55,"column":6},"end":{"line":55,"column":42}},"26":{"start":{"line":55,"column":33},"end":{"line":55,"column":42}},"27":{"start":{"line":57,"column":6},"end":{"line":59,"column":7}},"28":{"start":{"line":58,"column":8},"end":{"line":58,"column":72}},"29":{"start":{"line":61,"column":6},"end":{"line":61,"column":44}},"30":{"start":{"line":63,"column":6},"end":{"line":63,"column":39}},"31":{"start":{"line":67,"column":4},"end":{"line":67,"column":27}},"32":{"start":{"line":72,"column":4},"end":{"line":72,"column":29}},"33":{"start":{"line":73,"column":4},"end":{"line":79,"column":5}},"34":{"start":{"line":74,"column":6},"end":{"line":78,"column":11}},"35":{"start":{"line":83,"column":4},"end":{"line":83,"column":78}},"36":{"start":{"line":89,"column":4},"end":{"line":89,"column":76}},"37":{"start":{"line":89,"column":48},"end":{"line":89,"column":76}},"38":{"start":{"line":90,"column":4},"end":{"line":90,"column":17}},"39":{"start":{"line":91,"column":4},"end":{"line":98,"column":5}},"40":{"start":{"line":92,"column":6},"end":{"line":92,"column":35}},"41":{"start":{"line":93,"column":6},"end":{"line":97,"column":7}},"42":{"start":{"line":94,"column":8},"end":{"line":94,"column":36}},"43":{"start":{"line":96,"column":8},"end":{"line":96,"column":46}},"44":{"start":{"line":99,"column":4},"end":{"line":99,"column":15}},"45":{"start":{"line":105,"column":4},"end":{"line":105,"column":29}},"46":{"start":{"line":106,"column":4},"end":{"line":106,"column":42}},"47":{"start":{"line":108,"column":4},"end":{"line":110,"column":7}},"48":{"start":{"line":109,"column":6},"end":{"line":109,"column":42}},"49":{"start":{"line":111,"column":4},"end":{"line":111,"column":64}},"50":{"start":{"line":116,"column":0},"end":{"line":116,"column":27}}},"branchMap":{"1":{"line":11,"type":"cond-expr","locations":[{"start":{"line":11,"column":70},"end":{"line":11,"column":73}},{"start":{"line":11,"column":76},"end":{"line":11,"column":92}}]},"2":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":46},"end":{"line":11,"column":49}},{"start":{"line":11,"column":53},"end":{"line":11,"column":67}}]},"3":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":6},"end":{"line":47,"column":6}},{"start":{"line":47,"column":6},"end":{"line":47,"column":6}}]},"4":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":35},"end":{"line":49,"column":59}},{"start":{"line":49,"column":63},"end":{"line":49,"column":65}}]},"5":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":6},"end":{"line":55,"column":6}},{"start":{"line":55,"column":6},"end":{"line":55,"column":6}}]},"6":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":6},"end":{"line":57,"column":6}},{"start":{"line":57,"column":6},"end":{"line":57,"column":6}}]},"7":{"line":77,"type":"binary-expr","locations":[{"start":{"line":77,"column":19},"end":{"line":77,"column":45}},{"start":{"line":77,"column":49},"end":{"line":77,"column":61}}]},"8":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":4},"end":{"line":89,"column":4}},{"start":{"line":89,"column":4},"end":{"line":89,"column":4}}]},"9":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":6},"end":{"line":93,"column":6}},{"start":{"line":93,"column":6},"end":{"line":93,"column":6}}]}},"code":["'use strict';","","var _lodash = require('lodash');","","var _lodash2 = _interopRequireDefault(_lodash);","","var _promise = require('./promise');","","var _promise2 = _interopRequireDefault(_promise);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","// Eager Base","// ---------------","","// The EagerBase provides a scaffold for handling with eager relation","// pairing, by queueing the appropriate related method calls with","// a database specific `eagerFetch` method, which then may utilize","// `pushModels` for pairing the models depending on the database need.","","function EagerBase(parent, parentResponse, target) {","  this.parent = parent;","  this.parentResponse = parentResponse;","  this.target = target;","}","","_lodash2.default.extend(EagerBase.prototype, {","","  // This helper function is used internally to determine which relations","  // are necessary for fetching based on the `model.load` or `withRelated` option.","  fetch: _promise2.default.method(function (options) {","    var target = this.target;","    var handled = this.handled = {};","    var withRelated = this.prepWithRelated(options.withRelated);","    var subRelated = {};","","    // Internal flag to determine whether to set the ctor(s) on the `Relation` object.","    target._isEager = true;","","    // Eager load each of the `withRelated` relation item, splitting on '.'","    // which indicates a nested eager load.","    for (var key in withRelated) {","      var related = key.split('.');","      var relationName = related[0];","","      // Add additional eager items to an array, to load at the next level in the query.","      if (related.length > 1) {","        var relatedObj = {};","        subRelated[relationName] = subRelated[relationName] || [];","        relatedObj[related.slice(1).join('.')] = withRelated[key];","        subRelated[relationName].push(relatedObj);","      }","","      // Only allow one of a certain nested type per-level.","      if (handled[relationName]) continue;","","      if (!_lodash2.default.isFunction(target[relationName])) {","        throw new Error(relationName + ' is not defined on the model.');","      }","","      var relation = target[relationName]();","","      handled[relationName] = relation;","    }","","    // Delete the internal flag from the model.","    delete target._isEager;","","    // Fetch all eager loaded models, loading them onto","    // an array of pending deferred objects, which will handle","    // all necessary pairing with parent objects, etc.","    var pendingDeferred = [];","    for (var _relationName in handled) {","      pendingDeferred.push(this.eagerFetch(_relationName, handled[_relationName], _lodash2.default.extend({}, options, {","        isEager: true,","        withRelated: subRelated[_relationName],","        _beforeFn: withRelated[_relationName] || _lodash.noop","      })));","    }","","    // Return a deferred handler for all of the nested object sync","    // returning the original response when these syncs & pairings are complete.","    return _promise2.default.all(pendingDeferred).return(this.parentResponse);","  }),","","  // Prep the `withRelated` object, to normalize into an object where each","  // has a function that is called when running the query.","  prepWithRelated: function prepWithRelated(withRelated) {","    if (!_lodash2.default.isArray(withRelated)) withRelated = [withRelated];","    var obj = {};","    for (var i = 0, l = withRelated.length; i < l; i++) {","      var related = withRelated[i];","      if (_lodash2.default.isString(related)) {","        obj[related] = _lodash.noop;","      } else {","        _lodash2.default.extend(obj, related);","      }","    }","    return obj;","  },","","  // Pushes each of the incoming models onto a new `related` array,","  // which is used to correcly pair additional nested relations.","  pushModels: function pushModels(relationName, handled, response) {","    var models = this.parent;","    var relatedData = handled.relatedData;","","    var related = (0, _lodash.map)(response, function (row) {","      return relatedData.createModel(row);","    });","    return relatedData.eagerPair(relationName, related, models);","  }","","});","","module.exports = EagerBase;"],"l":{"3":1,"5":1,"7":1,"9":1,"11":2,"21":1,"22":0,"23":0,"24":0,"27":1,"32":0,"33":0,"34":0,"35":0,"38":0,"42":0,"43":0,"44":0,"47":0,"48":0,"49":0,"50":0,"51":0,"55":0,"57":0,"58":0,"61":0,"63":0,"67":0,"72":0,"73":0,"74":0,"83":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"96":0,"99":0,"105":0,"106":0,"108":0,"109":0,"111":0,"116":1}},"/home/travis/build/npmtest/node-npmtest-bookshelf/node_modules/bookshelf/lib/errors.js":{"path":"/home/travis/build/npmtest/node-npmtest-bookshelf/node_modules/bookshelf/lib/errors.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1},"b":{"1":[0,1],"2":[1,1]},"f":{"1":1},"fnMap":{"1":{"name":"_interopRequireDefault","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":43}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":57}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":95}},"4":{"start":{"line":7,"column":39},"end":{"line":7,"column":93}},"5":{"start":{"line":9,"column":0},"end":{"line":24,"column":2}}},"branchMap":{"1":{"line":7,"type":"cond-expr","locations":[{"start":{"line":7,"column":70},"end":{"line":7,"column":73}},{"start":{"line":7,"column":76},"end":{"line":7,"column":92}}]},"2":{"line":7,"type":"binary-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":49}},{"start":{"line":7,"column":53},"end":{"line":7,"column":67}}]}},"code":["'use strict';","","var _createError = require('create-error');","","var _createError2 = _interopRequireDefault(_createError);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","module.exports = {","","  // Thrown when the model is not found and {require: true} is passed in the fetch options","  NotFoundError: (0, _createError2.default)('NotFoundError'),","","  // Thrown when the collection is empty and {require: true} is passed in model.fetchAll or","  // collection.fetch","  EmptyError: (0, _createError2.default)('EmptyError'),","","  // Thrown when an update affects no rows and {require: true} is passed in model.save.","  NoRowsUpdatedError: (0, _createError2.default)('NoRowsUpdatedError'),","","  // Thrown when a delete affects no rows and {require: true} is passed in model.destroy.","  NoRowsDeletedError: (0, _createError2.default)('NoRowsDeletedError')","","};"],"l":{"3":1,"5":1,"7":1,"9":1}},"/home/travis/build/npmtest/node-npmtest-bookshelf/node_modules/bookshelf/lib/base/model.js":{"path":"/home/travis/build/npmtest/node-npmtest-bookshelf/node_modules/bookshelf/lib/base/model.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":6,"15":1,"16":1,"17":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":1,"33":1,"34":1,"35":1,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":1,"78":0,"79":1,"80":0,"81":1,"82":0,"83":1,"84":0,"85":1,"86":1,"87":0,"88":1,"89":0,"90":0,"91":0,"92":1,"93":1,"94":0,"95":1,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":1,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":1,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":1,"124":0,"125":0,"126":0,"127":1,"128":0,"129":1,"130":0,"131":1,"132":0,"133":0,"134":0,"135":1,"136":1,"137":6,"138":0,"139":1,"140":1},"b":{"1":[4,2],"2":[6,6],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0]},"f":{"1":6,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":6,"27":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":37}}},"2":{"name":"ModelBase","line":47,"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":40}}},"3":{"name":"(anonymous_3)","line":107,"loc":{"start":{"line":107,"column":33},"end":{"line":107,"column":45}}},"4":{"name":"(anonymous_4)","line":163,"loc":{"start":{"line":163,"column":26},"end":{"line":163,"column":42}}},"5":{"name":"(anonymous_5)","line":181,"loc":{"start":{"line":181,"column":26},"end":{"line":181,"column":55}}},"6":{"name":"(anonymous_6)","line":234,"loc":{"start":{"line":234,"column":28},"end":{"line":234,"column":40}}},"7":{"name":"(anonymous_7)","line":267,"loc":{"start":{"line":267,"column":32},"end":{"line":267,"column":44}}},"8":{"name":"(anonymous_8)","line":284,"loc":{"start":{"line":284,"column":59},"end":{"line":284,"column":84}}},"9":{"name":"(anonymous_9)","line":292,"loc":{"start":{"line":292,"column":54},"end":{"line":292,"column":76}}},"10":{"name":"(anonymous_10)","line":313,"loc":{"start":{"line":313,"column":29},"end":{"line":313,"column":48}}},"11":{"name":"(anonymous_11)","line":322,"loc":{"start":{"line":322,"column":31},"end":{"line":322,"column":43}}},"12":{"name":"(anonymous_12)","line":332,"loc":{"start":{"line":332,"column":29},"end":{"line":332,"column":44}}},"13":{"name":"(anonymous_13)","line":343,"loc":{"start":{"line":343,"column":26},"end":{"line":343,"column":42}}},"14":{"name":"(anonymous_14)","line":392,"loc":{"start":{"line":392,"column":28},"end":{"line":392,"column":53}}},"15":{"name":"(anonymous_15)","line":401,"loc":{"start":{"line":401,"column":28},"end":{"line":401,"column":47}}},"16":{"name":"(anonymous_16)","line":402,"loc":{"start":{"line":402,"column":62},"end":{"line":402,"column":74}}},"17":{"name":"(anonymous_17)","line":447,"loc":{"start":{"line":447,"column":30},"end":{"line":447,"column":46}}},"18":{"name":"(anonymous_18)","line":460,"loc":{"start":{"line":460,"column":28},"end":{"line":460,"column":40}}},"19":{"name":"(anonymous_19)","line":462,"loc":{"start":{"line":462,"column":78},"end":{"line":462,"column":91}}},"20":{"name":"(anonymous_20)","line":482,"loc":{"start":{"line":482,"column":33},"end":{"line":482,"column":45}}},"21":{"name":"(anonymous_21)","line":514,"loc":{"start":{"line":514,"column":32},"end":{"line":514,"column":51}}},"22":{"name":"(anonymous_22)","line":553,"loc":{"start":{"line":553,"column":33},"end":{"line":553,"column":49}}},"23":{"name":"(anonymous_23)","line":568,"loc":{"start":{"line":568,"column":31},"end":{"line":568,"column":52}}},"24":{"name":"(anonymous_24)","line":583,"loc":{"start":{"line":583,"column":41},"end":{"line":583,"column":53}}},"25":{"name":"(anonymous_25)","line":597,"loc":{"start":{"line":597,"column":29},"end":{"line":597,"column":41}}},"26":{"name":"(anonymous_26)","line":631,"loc":{"start":{"line":631,"column":36},"end":{"line":631,"column":54}}},"27":{"name":"(anonymous_27)","line":632,"loc":{"start":{"line":632,"column":32},"end":{"line":632,"column":44}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":69}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":57}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":50}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":55}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":48}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":32}},"8":{"start":{"line":17,"column":0},"end":{"line":17,"column":47}},"9":{"start":{"line":19,"column":0},"end":{"line":19,"column":36}},"10":{"start":{"line":21,"column":0},"end":{"line":21,"column":51}},"11":{"start":{"line":23,"column":0},"end":{"line":23,"column":34}},"12":{"start":{"line":25,"column":0},"end":{"line":25,"column":47}},"13":{"start":{"line":27,"column":0},"end":{"line":27,"column":95}},"14":{"start":{"line":27,"column":39},"end":{"line":27,"column":93}},"15":{"start":{"line":29,"column":0},"end":{"line":29,"column":29}},"16":{"start":{"line":32,"column":0},"end":{"line":32,"column":58}},"17":{"start":{"line":35,"column":0},"end":{"line":35,"column":48}},"18":{"start":{"line":47,"column":0},"end":{"line":60,"column":1}},"19":{"start":{"line":48,"column":2},"end":{"line":48,"column":31}},"20":{"start":{"line":49,"column":2},"end":{"line":49,"column":26}},"21":{"start":{"line":50,"column":2},"end":{"line":50,"column":40}},"22":{"start":{"line":51,"column":2},"end":{"line":51,"column":16}},"23":{"start":{"line":52,"column":2},"end":{"line":52,"column":22}},"24":{"start":{"line":53,"column":2},"end":{"line":53,"column":44}},"25":{"start":{"line":54,"column":2},"end":{"line":57,"column":3}},"26":{"start":{"line":55,"column":4},"end":{"line":55,"column":78}},"27":{"start":{"line":56,"column":4},"end":{"line":56,"column":64}},"28":{"start":{"line":56,"column":23},"end":{"line":56,"column":64}},"29":{"start":{"line":58,"column":2},"end":{"line":58,"column":27}},"30":{"start":{"line":59,"column":2},"end":{"line":59,"column":41}},"31":{"start":{"line":91,"column":0},"end":{"line":91,"column":53}},"32":{"start":{"line":107,"column":0},"end":{"line":107,"column":48}},"33":{"start":{"line":138,"column":0},"end":{"line":138,"column":39}},"34":{"start":{"line":153,"column":0},"end":{"line":153,"column":42}},"35":{"start":{"line":163,"column":0},"end":{"line":165,"column":2}},"36":{"start":{"line":164,"column":2},"end":{"line":164,"column":31}},"37":{"start":{"line":181,"column":0},"end":{"line":217,"column":2}},"38":{"start":{"line":182,"column":2},"end":{"line":182,"column":31}},"39":{"start":{"line":182,"column":19},"end":{"line":182,"column":31}},"40":{"start":{"line":183,"column":2},"end":{"line":183,"column":21}},"41":{"start":{"line":186,"column":2},"end":{"line":191,"column":3}},"42":{"start":{"line":187,"column":4},"end":{"line":187,"column":16}},"43":{"start":{"line":188,"column":4},"end":{"line":188,"column":18}},"44":{"start":{"line":190,"column":4},"end":{"line":190,"column":28}},"45":{"start":{"line":192,"column":2},"end":{"line":192,"column":46}},"46":{"start":{"line":195,"column":2},"end":{"line":195,"column":28}},"47":{"start":{"line":196,"column":2},"end":{"line":196,"column":32}},"48":{"start":{"line":197,"column":2},"end":{"line":197,"column":38}},"49":{"start":{"line":200,"column":2},"end":{"line":200,"column":67}},"50":{"start":{"line":200,"column":33},"end":{"line":200,"column":67}},"51":{"start":{"line":203,"column":2},"end":{"line":215,"column":3}},"52":{"start":{"line":204,"column":4},"end":{"line":204,"column":22}},"53":{"start":{"line":205,"column":4},"end":{"line":209,"column":5}},"54":{"start":{"line":206,"column":6},"end":{"line":206,"column":31}},"55":{"start":{"line":208,"column":6},"end":{"line":208,"column":32}},"56":{"start":{"line":210,"column":4},"end":{"line":214,"column":5}},"57":{"start":{"line":211,"column":6},"end":{"line":211,"column":27}},"58":{"start":{"line":213,"column":6},"end":{"line":213,"column":26}},"59":{"start":{"line":216,"column":2},"end":{"line":216,"column":14}},"60":{"start":{"line":234,"column":0},"end":{"line":236,"column":2}},"61":{"start":{"line":235,"column":2},"end":{"line":235,"column":25}},"62":{"start":{"line":267,"column":0},"end":{"line":300,"column":2}},"63":{"start":{"line":268,"column":2},"end":{"line":268,"column":87}},"64":{"start":{"line":269,"column":2},"end":{"line":274,"column":74}},"65":{"start":{"line":275,"column":2},"end":{"line":275,"column":35}},"66":{"start":{"line":278,"column":2},"end":{"line":280,"column":3}},"67":{"start":{"line":279,"column":4},"end":{"line":279,"column":16}},"68":{"start":{"line":282,"column":2},"end":{"line":297,"column":3}},"69":{"start":{"line":284,"column":4},"end":{"line":286,"column":7}},"70":{"start":{"line":285,"column":6},"end":{"line":285,"column":75}},"71":{"start":{"line":289,"column":4},"end":{"line":289,"column":76}},"72":{"start":{"line":291,"column":4},"end":{"line":291,"column":66}},"73":{"start":{"line":292,"column":4},"end":{"line":294,"column":7}},"74":{"start":{"line":293,"column":6},"end":{"line":293,"column":37}},"75":{"start":{"line":296,"column":4},"end":{"line":296,"column":78}},"76":{"start":{"line":299,"column":2},"end":{"line":299,"column":48}},"77":{"start":{"line":313,"column":0},"end":{"line":315,"column":2}},"78":{"start":{"line":314,"column":2},"end":{"line":314,"column":33}},"79":{"start":{"line":322,"column":0},"end":{"line":324,"column":2}},"80":{"start":{"line":323,"column":2},"end":{"line":323,"column":26}},"81":{"start":{"line":332,"column":0},"end":{"line":334,"column":2}},"82":{"start":{"line":333,"column":2},"end":{"line":333,"column":48}},"83":{"start":{"line":343,"column":0},"end":{"line":345,"column":2}},"84":{"start":{"line":344,"column":2},"end":{"line":344,"column":32}},"85":{"start":{"line":375,"column":0},"end":{"line":375,"column":45}},"86":{"start":{"line":392,"column":0},"end":{"line":394,"column":2}},"87":{"start":{"line":393,"column":2},"end":{"line":393,"column":87}},"88":{"start":{"line":401,"column":0},"end":{"line":406,"column":2}},"89":{"start":{"line":402,"column":2},"end":{"line":404,"column":5}},"90":{"start":{"line":403,"column":4},"end":{"line":403,"column":21}},"91":{"start":{"line":405,"column":2},"end":{"line":405,"column":87}},"92":{"start":{"line":420,"column":0},"end":{"line":420,"column":46}},"93":{"start":{"line":447,"column":0},"end":{"line":449,"column":2}},"94":{"start":{"line":448,"column":2},"end":{"line":448,"column":93}},"95":{"start":{"line":460,"column":0},"end":{"line":468,"column":2}},"96":{"start":{"line":461,"column":2},"end":{"line":461,"column":52}},"97":{"start":{"line":462,"column":2},"end":{"line":464,"column":6}},"98":{"start":{"line":463,"column":4},"end":{"line":463,"column":21}},"99":{"start":{"line":465,"column":2},"end":{"line":465,"column":75}},"100":{"start":{"line":466,"column":2},"end":{"line":466,"column":51}},"101":{"start":{"line":467,"column":2},"end":{"line":467,"column":15}},"102":{"start":{"line":482,"column":0},"end":{"line":494,"column":2}},"103":{"start":{"line":483,"column":2},"end":{"line":487,"column":60}},"104":{"start":{"line":489,"column":2},"end":{"line":492,"column":3}},"105":{"start":{"line":490,"column":4},"end":{"line":490,"column":126}},"106":{"start":{"line":490,"column":28},"end":{"line":490,"column":126}},"107":{"start":{"line":491,"column":4},"end":{"line":491,"column":22}},"108":{"start":{"line":493,"column":2},"end":{"line":493,"column":107}},"109":{"start":{"line":514,"column":0},"end":{"line":537,"column":2}},"110":{"start":{"line":515,"column":2},"end":{"line":515,"column":37}},"111":{"start":{"line":515,"column":27},"end":{"line":515,"column":37}},"112":{"start":{"line":517,"column":2},"end":{"line":517,"column":23}},"113":{"start":{"line":518,"column":2},"end":{"line":518,"column":22}},"114":{"start":{"line":519,"column":2},"end":{"line":519,"column":40}},"115":{"start":{"line":520,"column":2},"end":{"line":520,"column":104}},"116":{"start":{"line":522,"column":2},"end":{"line":524,"column":30}},"117":{"start":{"line":526,"column":2},"end":{"line":528,"column":3}},"118":{"start":{"line":527,"column":4},"end":{"line":527,"column":35}},"119":{"start":{"line":530,"column":2},"end":{"line":532,"column":3}},"120":{"start":{"line":531,"column":4},"end":{"line":531,"column":35}},"121":{"start":{"line":534,"column":2},"end":{"line":534,"column":32}},"122":{"start":{"line":536,"column":2},"end":{"line":536,"column":20}},"123":{"start":{"line":553,"column":0},"end":{"line":556,"column":2}},"124":{"start":{"line":554,"column":2},"end":{"line":554,"column":67}},"125":{"start":{"line":554,"column":20},"end":{"line":554,"column":67}},"126":{"start":{"line":555,"column":2},"end":{"line":555,"column":50}},"127":{"start":{"line":568,"column":0},"end":{"line":570,"column":2}},"128":{"start":{"line":569,"column":2},"end":{"line":569,"column":45}},"129":{"start":{"line":583,"column":0},"end":{"line":585,"column":2}},"130":{"start":{"line":584,"column":2},"end":{"line":584,"column":54}},"131":{"start":{"line":597,"column":0},"end":{"line":601,"column":2}},"132":{"start":{"line":598,"column":2},"end":{"line":598,"column":65}},"133":{"start":{"line":599,"column":2},"end":{"line":599,"column":37}},"134":{"start":{"line":600,"column":2},"end":{"line":600,"column":14}},"135":{"start":{"line":628,"column":0},"end":{"line":628,"column":75}},"136":{"start":{"line":631,"column":0},"end":{"line":635,"column":3}},"137":{"start":{"line":632,"column":2},"end":{"line":634,"column":4}},"138":{"start":{"line":633,"column":4},"end":{"line":633,"column":125}},"139":{"start":{"line":705,"column":0},"end":{"line":705,"column":40}},"140":{"start":{"line":707,"column":0},"end":{"line":707,"column":27}}},"branchMap":{"1":{"line":27,"type":"cond-expr","locations":[{"start":{"line":27,"column":70},"end":{"line":27,"column":73}},{"start":{"line":27,"column":76},"end":{"line":27,"column":92}}]},"2":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":46},"end":{"line":27,"column":49}},{"start":{"line":27,"column":53},"end":{"line":27,"column":67}}]},"3":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":14},"end":{"line":48,"column":24}},{"start":{"line":48,"column":28},"end":{"line":48,"column":30}}]},"4":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":12},"end":{"line":49,"column":19}},{"start":{"line":49,"column":23},"end":{"line":49,"column":25}}]},"5":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":2},"end":{"line":54,"column":2}},{"start":{"line":54,"column":2},"end":{"line":54,"column":2}}]},"6":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":56,"column":4}},{"start":{"line":56,"column":4},"end":{"line":56,"column":4}}]},"7":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":31},"end":{"line":56,"column":57}},{"start":{"line":56,"column":61},"end":{"line":56,"column":63}}]},"8":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":2},"end":{"line":182,"column":2}},{"start":{"line":182,"column":2},"end":{"line":182,"column":2}}]},"9":{"line":186,"type":"if","locations":[{"start":{"line":186,"column":2},"end":{"line":186,"column":2}},{"start":{"line":186,"column":2},"end":{"line":186,"column":2}}]},"10":{"line":186,"type":"cond-expr","locations":[{"start":{"line":186,"column":36},"end":{"line":186,"column":47}},{"start":{"line":186,"column":50},"end":{"line":186,"column":76}}]},"11":{"line":192,"type":"binary-expr","locations":[{"start":{"line":192,"column":12},"end":{"line":192,"column":39}},{"start":{"line":192,"column":43},"end":{"line":192,"column":45}}]},"12":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":2},"end":{"line":200,"column":2}},{"start":{"line":200,"column":2},"end":{"line":200,"column":2}}]},"13":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":4},"end":{"line":205,"column":4}},{"start":{"line":205,"column":4},"end":{"line":205,"column":4}}]},"14":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":4},"end":{"line":210,"column":4}},{"start":{"line":210,"column":4},"end":{"line":210,"column":4}}]},"15":{"line":268,"type":"cond-expr","locations":[{"start":{"line":268,"column":69},"end":{"line":268,"column":81}},{"start":{"line":268,"column":84},"end":{"line":268,"column":86}}]},"16":{"line":268,"type":"binary-expr","locations":[{"start":{"line":268,"column":16},"end":{"line":268,"column":36}},{"start":{"line":268,"column":40},"end":{"line":268,"column":66}}]},"17":{"line":270,"type":"cond-expr","locations":[{"start":{"line":270,"column":49},"end":{"line":270,"column":54}},{"start":{"line":270,"column":57},"end":{"line":270,"column":73}}]},"18":{"line":272,"type":"cond-expr","locations":[{"start":{"line":272,"column":53},"end":{"line":272,"column":58}},{"start":{"line":272,"column":61},"end":{"line":272,"column":79}}]},"19":{"line":274,"type":"cond-expr","locations":[{"start":{"line":274,"column":49},"end":{"line":274,"column":54}},{"start":{"line":274,"column":57},"end":{"line":274,"column":73}}]},"20":{"line":278,"type":"if","locations":[{"start":{"line":278,"column":2},"end":{"line":278,"column":2}},{"start":{"line":278,"column":2},"end":{"line":278,"column":2}}]},"21":{"line":278,"type":"binary-expr","locations":[{"start":{"line":278,"column":6},"end":{"line":278,"column":13}},{"start":{"line":278,"column":17},"end":{"line":278,"column":29}}]},"22":{"line":282,"type":"if","locations":[{"start":{"line":282,"column":2},"end":{"line":282,"column":2}},{"start":{"line":282,"column":2},"end":{"line":282,"column":2}}]},"23":{"line":285,"type":"cond-expr","locations":[{"start":{"line":285,"column":39},"end":{"line":285,"column":63}},{"start":{"line":285,"column":66},"end":{"line":285,"column":74}}]},"24":{"line":291,"type":"binary-expr","locations":[{"start":{"line":291,"column":16},"end":{"line":291,"column":26}},{"start":{"line":291,"column":30},"end":{"line":291,"column":40}},{"start":{"line":291,"column":44},"end":{"line":291,"column":65}}]},"25":{"line":448,"type":"binary-expr","locations":[{"start":{"line":448,"column":9},"end":{"line":448,"column":29}},{"start":{"line":448,"column":34},"end":{"line":448,"column":91}}]},"26":{"line":448,"type":"cond-expr","locations":[{"start":{"line":448,"column":47},"end":{"line":448,"column":82}},{"start":{"line":448,"column":85},"end":{"line":448,"column":91}}]},"27":{"line":483,"type":"cond-expr","locations":[{"start":{"line":483,"column":66},"end":{"line":483,"column":78}},{"start":{"line":483,"column":81},"end":{"line":483,"column":83}}]},"28":{"line":483,"type":"binary-expr","locations":[{"start":{"line":483,"column":13},"end":{"line":483,"column":33}},{"start":{"line":483,"column":37},"end":{"line":483,"column":63}}]},"29":{"line":485,"type":"cond-expr","locations":[{"start":{"line":485,"column":43},"end":{"line":485,"column":47}},{"start":{"line":485,"column":50},"end":{"line":485,"column":61}}]},"30":{"line":487,"type":"cond-expr","locations":[{"start":{"line":487,"column":41},"end":{"line":487,"column":46}},{"start":{"line":487,"column":49},"end":{"line":487,"column":59}}]},"31":{"line":489,"type":"if","locations":[{"start":{"line":489,"column":2},"end":{"line":489,"column":2}},{"start":{"line":489,"column":2},"end":{"line":489,"column":2}}]},"32":{"line":490,"type":"if","locations":[{"start":{"line":490,"column":4},"end":{"line":490,"column":4}},{"start":{"line":490,"column":4},"end":{"line":490,"column":4}}]},"33":{"line":493,"type":"cond-expr","locations":[{"start":{"line":493,"column":49},"end":{"line":493,"column":83}},{"start":{"line":493,"column":86},"end":{"line":493,"column":106}}]},"34":{"line":493,"type":"binary-expr","locations":[{"start":{"line":493,"column":10},"end":{"line":493,"column":15}},{"start":{"line":493,"column":19},"end":{"line":493,"column":27}},{"start":{"line":493,"column":31},"end":{"line":493,"column":37}}]},"35":{"line":493,"type":"cond-expr","locations":[{"start":{"line":493,"column":64},"end":{"line":493,"column":72}},{"start":{"line":493,"column":75},"end":{"line":493,"column":83}}]},"36":{"line":515,"type":"if","locations":[{"start":{"line":515,"column":2},"end":{"line":515,"column":2}},{"start":{"line":515,"column":2},"end":{"line":515,"column":2}}]},"37":{"line":520,"type":"cond-expr","locations":[{"start":{"line":520,"column":60},"end":{"line":520,"column":78}},{"start":{"line":520,"column":81},"end":{"line":520,"column":103}}]},"38":{"line":526,"type":"if","locations":[{"start":{"line":526,"column":2},"end":{"line":526,"column":2}},{"start":{"line":526,"column":2},"end":{"line":526,"column":2}}]},"39":{"line":530,"type":"if","locations":[{"start":{"line":530,"column":2},"end":{"line":530,"column":2}},{"start":{"line":530,"column":2},"end":{"line":530,"column":2}}]},"40":{"line":530,"type":"binary-expr","locations":[{"start":{"line":530,"column":6},"end":{"line":530,"column":18}},{"start":{"line":530,"column":22},"end":{"line":530,"column":41}}]},"41":{"line":554,"type":"if","locations":[{"start":{"line":554,"column":2},"end":{"line":554,"column":2}},{"start":{"line":554,"column":2},"end":{"line":554,"column":2}}]}},"code":["'use strict';","","var _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');","","var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);","","var _extends2 = require('babel-runtime/helpers/extends');","","var _extends3 = _interopRequireDefault(_extends2);","","var _typeof2 = require('babel-runtime/helpers/typeof');","","var _typeof3 = _interopRequireDefault(_typeof2);","","var _lodash = require('lodash');","","var _lodash2 = _interopRequireDefault(_lodash);","","var _inherits = require('inherits');","","var _inherits2 = _interopRequireDefault(_inherits);","","var _events = require('./events');","","var _events2 = _interopRequireDefault(_events);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","var PIVOT_PREFIX = '_pivot_'; // Base Model","// ---------------","","var DEFAULT_TIMESTAMP_KEYS = ['created_at', 'updated_at'];","","// List of attributes attached directly from the `options` passed to the constructor.","var modelProps = ['tableName', 'hasTimestamps'];","","/**"," * @class"," * @classdesc"," * @extends Events"," * @inheritdoc"," * @description"," *"," * The \"ModelBase\" is similar to the 'Active Model' in Rails, it defines a"," * standard interface from which other objects may inherit."," */","function ModelBase(attributes, options) {","  var attrs = attributes || {};","  options = options || {};","  this.attributes = Object.create(null);","  this._reset();","  this.relations = {};","  this.cid = _lodash2.default.uniqueId('c');","  if (options) {","    _lodash2.default.extend(this, _lodash2.default.pick(options, modelProps));","    if (options.parse) attrs = this.parse(attrs, options) || {};","  }","  this.set(attrs, options);","  this.initialize.apply(this, arguments);","}","","/**"," * @method ModelBase#on"," * @example"," *"," * customer.on('fetching', function(model, columns) {"," *   // Do something before the data is fetched from the database"," * });"," *"," * @see Events#on"," */","","/**"," * @method ModelBase#off"," * @example"," *"," * customer.off('fetched fetching');"," * ship.off(); // This will remove all event listeners"," *"," * @see Events#off"," */","","/**"," * @method ModelBase#trigger"," * @example"," *"," * ship.trigger('fetched');"," *"," * @see Events#trigger"," */","(0, _inherits2.default)(ModelBase, _events2.default);","","/**"," * @method ModelBase#initialize"," * @description"," *"," * Called by the {@link Model Model constructor} when creating a new instance."," * Override this function to add custom initialization, such as event listeners."," *"," * @see Model"," *"," * @param {Object} attributes"," *   Initial values for this model's attributes."," * @param {Object=}  options"," *   The hash of options passed to {@link Model constructor}."," */","ModelBase.prototype.initialize = function () {};","","/**"," * @name ModelBase#tableName"," * @member {string}"," * @description"," *"," * A required property for any database usage, The"," * {@linkcode Model#tableName tableName} property refers to the database"," * table name the model will query against."," *"," * @example"," *"," * var Television = bookshelf.Model.extend({"," *   tableName: 'televisions'"," * });"," */","","/**"," * @member {string}"," * @default \"id\""," * @description"," *"," * This tells the model which attribute to expect as the unique identifier"," * for each database row (typically an auto-incrementing primary key named"," * `\"id\"`). Note that if you are using {@link Model#parse parse} and {@link"," * Model#format format} (to have your model's attributes in `camelCase`,"," * but your database's columns in `snake_case`, for example) this refers to"," * the name returned by parse (`myId`), not the database column (`my_id`)."," *"," */","ModelBase.prototype.idAttribute = 'id';","","/**"," * @member {boolean|Array}"," * @default false"," * @description"," *"," * Sets the current date/time on the timestamps columns `created_at` and"," * `updated_at` for a given method. The 'update' method will only update"," * `updated_at`.  To override the default column names, assign an array"," * to {@link Model#hasTimestamps hasTimestamps}.  The first element will"," * be the created column name and the second will be the updated"," * column name."," *"," */","ModelBase.prototype.hasTimestamps = false;","","/**"," * @method"," * @description  Get the current value of an attribute from the model."," * @example      note.get(\"title\");"," *"," * @param {string} attribute - The name of the attribute to retrieve."," * @returns {mixed} Attribute value."," */","ModelBase.prototype.get = function (attr) {","  return this.attributes[attr];","};","","/**"," * @method"," * @description  Set a hash of attributes (one or many) on the model."," * @example"," *"," * customer.set({first_name: \"Joe\", last_name: \"Customer\"});"," * customer.set(\"telephone\", \"555-555-1212\");"," *"," * @param {string|Object} attribute Attribute name, or hash of attribute names and values."," * @param {mixed=} value If a string was provided for `attribute`, the value to be set."," * @param {Object=} options"," * @param {Object} [options.unset=false] Remove attributes from the model instead of setting them."," * @returns {Model} This model."," */","ModelBase.prototype.set = function (key, val, options) {","  if (key == null) return this;","  var attrs = void 0;","","  // Handle both `\"key\", value` and `{key: value}` -style arguments.","  if ((typeof key === 'undefined' ? 'undefined' : (0, _typeof3.default)(key)) === 'object') {","    attrs = key;","    options = val;","  } else {","    (attrs = {})[key] = val;","  }","  options = (0, _lodash.clone)(options) || {};","","  // Extract attributes and options.","  var unset = options.unset;","  var current = this.attributes;","  var prev = this._previousAttributes;","","  // Check for changes of `id`.","  if (this.idAttribute in attrs) this.id = attrs[this.idAttribute];","","  // For each `set` attribute, update or delete the current value.","  for (var attr in attrs) {","    val = attrs[attr];","    if (!_lodash2.default.isEqual(prev[attr], val)) {","      this.changed[attr] = val;","    } else {","      delete this.changed[attr];","    }","    if (unset) {","      delete current[attr];","    } else {","      current[attr] = val;","    }","  }","  return this;","};","","/**"," * @method"," * @description"," *"," * Checks for the existence of an id to determine whether the model is"," * considered \"new\"."," *"," * @example"," *"," * var modelA = new bookshelf.Model();"," * modelA.isNew(); // true"," *"," * var modelB = new bookshelf.Model({id: 1});"," * modelB.isNew(); // false"," */","ModelBase.prototype.isNew = function () {","  return this.id == null;","};","","/**"," * @method"," * @description"," *"," * Return a copy of the model's {@link Model#attributes attributes} for JSON"," * stringification. If the {@link Model model} has any relations defined, this"," * will also call {@link Model#toJSON toJSON} on each of the related"," * objects, and include them on the object unless `{shallow: true}` is"," * passed as an option."," *"," * `serialize` is called internally by {@link Model#toJSON toJSON}. Override"," * this function if you want to customize its output."," *"," * @example"," * var artist = new bookshelf.Model({"," *   firstName: \"Wassily\","," *   lastName: \"Kandinsky\""," * });"," *"," * artist.set({birthday: \"December 16, 1866\"});"," *"," * console.log(JSON.stringify(artist));"," * // {firstName: \"Wassily\", lastName: \"Kandinsky\", birthday: \"December 16, 1866\"}"," *"," * @param {Object=} options"," * @param {bool}    [options.shallow=false]   Exclude relations."," * @param {bool}    [options.omitPivot=false] Exclude pivot values."," * @returns {Object} Serialized model as a plain object."," */","ModelBase.prototype.serialize = function () {","  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};","  var _options$shallow = options.shallow,","      shallow = _options$shallow === undefined ? false : _options$shallow,","      _options$omitPivot = options.omitPivot,","      omitPivot = _options$omitPivot === undefined ? false : _options$omitPivot,","      _options$omitNew = options.omitNew,","      omitNew = _options$omitNew === undefined ? false : _options$omitNew;","  var attributes = this.attributes;","","","  if (omitNew && this.isNew()) {","    return null;","  }","","  if (!shallow) {","","    var relations = (0, _lodash.mapValues)(this.relations, function (relation, key) {","      return relation.toJSON != null ? relation.toJSON(options) : relation;","    });","","    // Omit null relations from the omitNew option","    relations = _lodash2.default.omitBy(relations, _lodash2.default.isNull);","","    var pivot = this.pivot && !omitPivot && this.pivot.attributes;","    var pivotAttributes = (0, _lodash.mapKeys)(pivot, function (value, key) {","      return '' + PIVOT_PREFIX + key;","    });","","    return (0, _extends3.default)({}, attributes, relations, pivotAttributes);","  }","","  return (0, _extends3.default)({}, attributes);","};","","/**"," * @method"," * @description"," *"," * Called automatically by {@link"," * https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#toJSON()_behavior"," * `JSON.stringify`}. To customize serialization, override {@link"," * Model#serialize serialize}."," *"," * @param {Object=} options Options passed to {@link Model#serialize}."," */","ModelBase.prototype.toJSON = function (options) {","  return this.serialize(options);","};","","/**"," * @method"," * @private"," * @returns String representation of the object."," */","ModelBase.prototype.toString = function () {","  return '[Object Model]';","};","","/**"," * @method"," * @description Get the HTML-escaped value of an attribute."," * @param {string} attribute The attribute to escape."," * @returns {string} HTML-escaped value of an attribute."," */","ModelBase.prototype.escape = function (key) {","  return _lodash2.default.escape(this.get(key));","};","","/**"," * @method"," * @description"," * Returns `true` if the attribute contains a value that is not null or undefined."," * @param {string} attribute The attribute to check."," * @returns {bool} True if `attribute` is set, otherwise null."," */","ModelBase.prototype.has = function (attr) {","  return this.get(attr) != null;","};","","/**"," * @method"," * @description"," *"," * The parse method is called whenever a {@link Model model}'s data is returned"," * in a {@link Model#fetch fetch} call. The function is passed the raw database"," * response object, and should return the {@link Model#attributes"," * attributes} hash to be {@link Model#set set} on the model. The default"," * implementation is a no-op, simply passing through the JSON response."," * Override this if you need to format the database responses - for example"," * calling {@link"," * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse"," * JSON.parse} on a text field containing JSON, or explicitly typecasting a"," * boolean in a sqlite3 database response."," *"," * @example"," *"," * // Example of a \"parse\" to convert snake_case to camelCase, using `underscore.string`"," * model.parse = function(attrs) {"," *   return _.reduce(attrs, function(memo, val, key) {"," *     memo[_.camelCase(key)] = val;"," *     return memo;"," *   }, {});"," * };"," *"," * @param {Object} response Hash of attributes to parse."," * @returns {Object} Parsed attributes."," */","ModelBase.prototype.parse = _lodash.identity;","","/**"," * @method"," * @description"," *"," * Remove an attribute from the model. `unset` is a noop if the attribute"," * doesn't exist."," *"," * Note that unsetting an attribute from the model will not affect the related"," * record's column value when saving the model. In order to clear the value of a"," * column in the database record, set the attribute value to `null` instead:"," * `model.set(\"column_name\", null)`."," *"," * @param attribute Attribute to unset."," * @returns {Model} This model."," */","ModelBase.prototype.unset = function (attr, options) {","  return this.set(attr, void 0, _lodash2.default.extend({}, options, { unset: true }));","};","","/**"," * @method"," * @description Clear all attributes on the model."," * @returns {Model} This model."," */","ModelBase.prototype.clear = function (options) {","  var undefinedKeys = (0, _lodash.mapValues)(this.attributes, function () {","    return undefined;","  });","  return this.set(undefinedKeys, (0, _extends3.default)({}, options, { unset: true }));","};","","/**"," * @method"," * @description"," *"," * The `format` method is used to modify the current state of the model before"," * it is persisted to the database. The `attributes` passed are a shallow clone"," * of the {@link Model model}, and are only used for inserting/updating - the"," * current values of the model are left intact."," *"," * @param {Object} attributes The attributes to be converted."," * @returns {Object} Formatted attributes."," */","ModelBase.prototype.format = _lodash.identity;","","/**"," * @method"," * @description"," *"," * The `related` method returns a specified relation loaded on the relations"," * hash on the model, or calls the associated relation method and adds it to"," * the relations hash if one exists and has not yet been loaded."," *"," * @example"," *"," * new Photo({id: 1}).fetch({"," *   withRelated: ['account']"," * }).then(function(photo) {"," *   if (photo) {"," *     var account = photo.related('account');"," *     if (account.id) {"," *        return account.related('trips').fetch();"," *     }"," *   }"," * });"," *"," * @param name {string} The name of the relation to retrieve."," * @returns {Model|Collection|undefined} The specified relation as defined by a"," *   method on the model, or undefined if it does not exist."," */","ModelBase.prototype.related = function (name) {","  return this.relations[name] || (this[name] ? this.relations[name] = this[name]() : void 0);","};","","/**"," * @method"," * @description"," * Returns a new instance of the model with identical {@link"," * Model#attributes attributes}, including any relations from the cloned"," * model."," *"," * @returns {Model} Cloned instance of this model."," */","ModelBase.prototype.clone = function () {","  var model = new this.constructor(this.attributes);","  (0, _lodash.assign)(model.relations, (0, _lodash.mapValues)(this.relations, function (r) {","    return r.clone();","  }));","  model._previousAttributes = (0, _lodash.clone)(this._previousAttributes);","  model.changed = (0, _lodash.clone)(this.changed);","  return model;","};","","/**"," * @method"," * @private"," * @description"," *"," * Returns the method that will be used on save, either 'update' or 'insert'."," * This is an internal helper that uses `isNew` and `options.method` to"," * determine the correct method. If `option.method` is provided, it will be"," * returned, but lowercased for later comparison."," *"," * @returns {string} Either `'insert'` or `'update'`."," */","ModelBase.prototype.saveMethod = function () {","  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},","      _ref$method = _ref.method,","      method = _ref$method === undefined ? null : _ref$method,","      _ref$patch = _ref.patch,","      patch = _ref$patch === undefined ? false : _ref$patch;","","  if (patch) {","    if (method == 'insert') throw new TypeError('Cannot accept incompatible options: methods=' + method + ', patch=' + patch);","    method = 'update';","  }","  return (patch && 'update' || method) == null ? this.isNew() ? 'insert' : 'update' : method.toLowerCase();","};","","/**"," * @method"," * @description"," * Sets the timestamp attributes on the model, if {@link Model#hasTimestamps"," * hasTimestamps} is set to `true` or an array. Check if the model {@link"," * Model#isNew isNew} or if `{method: 'insert'}` is provided as an option and"," * set the `created_at` and `updated_at` attributes to the current date if it"," * is being inserted, and just the `updated_at` attribute if it's being updated."," * This method may be overriden to use different column names or types for the"," * timestamps."," *"," * @param {Object=} options"," * @param {string} [options.method]"," *   Either `'insert'` or `'update'`. Specify what kind of save the attribute"," *   update is for."," *"," * @returns {Object} A hash of timestamp attributes that were set."," */","ModelBase.prototype.timestamp = function (options) {","  if (!this.hasTimestamps) return {};","","  var now = new Date();","  var attributes = {};","  var method = this.saveMethod(options);","  var keys = _lodash2.default.isArray(this.hasTimestamps) ? this.hasTimestamps : DEFAULT_TIMESTAMP_KEYS;","","  var _keys = (0, _slicedToArray3.default)(keys, 2),","      createdAtKey = _keys[0],","      updatedAtKey = _keys[1];","","  if (updatedAtKey) {","    attributes[updatedAtKey] = now;","  }","","  if (createdAtKey && method === 'insert') {","    attributes[createdAtKey] = now;","  }","","  this.set(attributes, options);","","  return attributes;","};","","/**"," * @method"," * @description"," *"," * Returns true if any {@link Model#attributes attribute} attribute has changed"," * since the last {@link Model#fetch fetch}, {@link Model#save save}, or {@link"," * Model#destroy destroy}. If an attribute is passed, returns true only if that"," * specific attribute has changed."," *"," * @param {string=} attribute"," * @returns {bool}"," * `true` if any attribute has changed. Or, if `attribute` was specified, true"," * if it has changed."," */","ModelBase.prototype.hasChanged = function (attr) {","  if (attr == null) return !_lodash2.default.isEmpty(this.changed);","  return _lodash2.default.has(this.changed, attr);","};","","/**"," * @method"," * @description"," *"," * Returns the this previous value of a changed {@link Model#attributes"," * attribute}, or `undefined` if one had not been specified previously."," *"," * @param {string} attribute The attribute to check"," * @returns {mixed} The previous value"," */","ModelBase.prototype.previous = function (attribute) {","  return this._previousAttributes[attribute];","};","","/**"," * @method"," * @description"," *"," * Return a copy of the {@link Model model}'s previous attributes from the"," * model's last {@link Model#fetch fetch}, {@link Model#save save}, or {@link"," * Model#destroy destroy}. Useful for getting a diff between versions of a"," * model, or getting back to a valid state after an error occurs."," *"," * @returns {Object} The attributes as they were before the last change."," */","ModelBase.prototype.previousAttributes = function () {","  return (0, _lodash.clone)(this._previousAttributes);","};","","/**"," * @method"," * @private"," * @description"," *"," * Resets the `_previousAttributes` and `changed` hash for the model."," * Typically called after a `sync` action (save, fetch, delete) -"," *"," * @returns {Model} This model."," */","ModelBase.prototype._reset = function () {","  this._previousAttributes = (0, _lodash.clone)(this.attributes);","  this.changed = Object.create(null);","  return this;","};","","/**"," * @method ModelBase#keys"," * @see http://lodash.com/docs/#keys"," */","/**"," * @method ModelBase#values"," * @see http://lodash.com/docs/#values"," */","/**"," * @method ModelBase#toPairs"," * @see http://lodash.com/docs/#toPairs"," */","/**"," * @method ModelBase#invert"," * @see http://lodash.com/docs/#invert"," */","/**"," * @method ModelBase#pick"," * @see http://lodash.com/docs/#pick"," */","/**"," * @method ModelBase#omit"," * @see http://lodash.com/docs/#omit"," */","// \"_\" methods that we want to implement on the Model.","var modelMethods = ['keys', 'values', 'toPairs', 'invert', 'pick', 'omit'];","","// Mix in each \"_\" method as a proxy to `Model#attributes`.","_lodash2.default.each(modelMethods, function (method) {","  ModelBase.prototype[method] = function () {","    return _lodash2.default[method].apply(_lodash2.default, [this.attributes].concat(Array.prototype.slice.call(arguments)));","  };","});","","/**"," * @method Model.extend"," * @description"," *"," * To create a Model class of your own, you extend {@link Model bookshelf.Model}."," *"," * `extend` correctly sets up the prototype chain, so subclasses created with"," * `extend` can be further extended and subclassed as far as you like."," *"," *     var checkit  = require('checkit');"," *     var Promise  = require('bluebird');"," *     var bcrypt   = Promise.promisifyAll(require('bcrypt'));"," *"," *     var Customer = bookshelf.Model.extend({"," *       initialize: function() {"," *         this.on('saving', this.validateSave);"," *       },"," *"," *       validateSave: function() {"," *         return checkit(rules).run(this.attributes);"," *       },"," *"," *       account: function() {"," *         return this.belongsTo(Account);"," *       },"," *     }, {"," *       login: Promise.method(function(email, password) {"," *         if (!email || !password) throw new Error('Email and password are both required');"," *         return new this({email: email.toLowerCase().trim()}).fetch({require: true}).tap(function(customer) {"," *           return bcrypt.compareAsync(password, customer.get('password'))"," *             .then(function(res) {"," *               if (!res) throw new Error('Invalid password');"," *             });"," *         });"," *       })"," *     });"," *"," *     Customer.login(email, password)"," *       .then(function(customer) {"," *         res.json(customer.omit('password'));"," *       }).catch(Customer.NotFoundError, function() {"," *         res.json(400, {error: email + ' not found'});"," *       }).catch(function(err) {"," *         console.error(err);"," *       });"," *"," * _Brief aside on `super`: JavaScript does not provide a simple way to call"," * `super` — the function of the same name defined higher on the prototype"," * chain. If you override a core function like {@link Model#set set}, or {@link"," * Model#save save}, and you want to invoke the parent object's implementation,"," * you'll have to explicitly call it, along these lines:_"," *"," *     var Customer = bookshelf.Model.extend({"," *       set: function() {"," *         // ..."," *         bookshelf.Model.prototype.set.apply(this, arguments);"," *         // ..."," *       }"," *     });"," *"," * @param {Object=} prototypeProperties"," *   Instance methods and properties to be attached to instances of the new"," *   class."," * @param {Object=} classProperties"," *   Class (ie. static) functions and properties to be attached to the"," *   constructor of the new class."," * @returns {Function} Constructor for new `Model` subclass."," */","ModelBase.extend = require('../extend');","","module.exports = ModelBase;"],"l":{"3":1,"5":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":1,"21":1,"23":1,"25":1,"27":6,"29":1,"32":1,"35":1,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"58":0,"59":0,"91":1,"107":1,"138":1,"153":1,"163":1,"164":0,"181":1,"182":0,"183":0,"186":0,"187":0,"188":0,"190":0,"192":0,"195":0,"196":0,"197":0,"200":0,"203":0,"204":0,"205":0,"206":0,"208":0,"210":0,"211":0,"213":0,"216":0,"234":1,"235":0,"267":1,"268":0,"269":0,"275":0,"278":0,"279":0,"282":0,"284":0,"285":0,"289":0,"291":0,"292":0,"293":0,"296":0,"299":0,"313":1,"314":0,"322":1,"323":0,"332":1,"333":0,"343":1,"344":0,"375":1,"392":1,"393":0,"401":1,"402":0,"403":0,"405":0,"420":1,"447":1,"448":0,"460":1,"461":0,"462":0,"463":0,"465":0,"466":0,"467":0,"482":1,"483":0,"489":0,"490":0,"491":0,"493":0,"514":1,"515":0,"517":0,"518":0,"519":0,"520":0,"522":0,"526":0,"527":0,"530":0,"531":0,"534":0,"536":0,"553":1,"554":0,"555":0,"568":1,"569":0,"583":1,"584":0,"597":1,"598":0,"599":0,"600":0,"628":1,"631":1,"632":6,"633":0,"705":1,"707":1}},"/home/travis/build/npmtest/node-npmtest-bookshelf/node_modules/bookshelf/lib/extend.js":{"path":"/home/travis/build/npmtest/node-npmtest-bookshelf/node_modules/bookshelf/lib/extend.js","s":{"1":1,"2":1,"3":3,"4":3,"5":0,"6":3,"7":3,"8":3,"9":3,"10":3,"11":3,"12":0,"13":3},"b":{"1":[0,3],"2":[3,3],"3":[3,0],"4":[0,3]},"f":{"1":3,"2":0},"fnMap":{"1":{"name":"extend","line":6,"loc":{"start":{"line":6,"column":17},"end":{"line":6,"column":58}}},"2":{"name":"(anonymous_2)","line":12,"loc":{"start":{"line":12,"column":96},"end":{"line":12,"column":108}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":6,"column":0},"end":{"line":40,"column":2}},"3":{"start":{"line":7,"column":2},"end":{"line":7,"column":20}},"4":{"start":{"line":12,"column":2},"end":{"line":14,"column":4}},"5":{"start":{"line":13,"column":4},"end":{"line":13,"column":41}},"6":{"start":{"line":16,"column":2},"end":{"line":16,"column":50}},"7":{"start":{"line":19,"column":2},"end":{"line":26,"column":5}},"8":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"9":{"start":{"line":29,"column":4},"end":{"line":29,"column":53}},"10":{"start":{"line":33,"column":2},"end":{"line":33,"column":37}},"11":{"start":{"line":37,"column":2},"end":{"line":37,"column":71}},"12":{"start":{"line":37,"column":48},"end":{"line":37,"column":71}},"13":{"start":{"line":39,"column":2},"end":{"line":39,"column":15}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":71},"end":{"line":12,"column":93}},{"start":{"line":12,"column":96},"end":{"line":14,"column":3}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":14},"end":{"line":12,"column":24}},{"start":{"line":12,"column":28},"end":{"line":12,"column":68}}]},"3":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"4":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]}},"code":["'use strict';","","var _lodash = require('lodash');","","// Uses a hash of prototype properties and class properties to be extended.","module.exports = function extend(protoProps, staticProps) {","  var Parent = this;","","  // The constructor function for the new subclass is either defined by you","  // (the \"constructor\" property in your `extend` definition), or defaulted","  // by us to simply call the parent's constructor.","  var Child = protoProps && protoProps.hasOwnProperty('constructor') ? protoProps.constructor : function () {","    return Parent.apply(this, arguments);","  };","","  (0, _lodash.assign)(Child, Parent, staticProps);","","  // Set the prototype chain to inherit from `Parent`.","  Child.prototype = Object.create(Parent.prototype, {","    constructor: {","      value: Child,","      enumerable: false,","      writable: true,","      configurable: true","    }","  });","","  if (protoProps) {","    (0, _lodash.assign)(Child.prototype, protoProps);","  }","","  // Give child access to the parent prototype as part of \"super\"","  Child.__super__ = Parent.prototype;","","  // If there is an \"extended\" function set on the parent,","  // call it with the extended child object.","  if ((0, _lodash.isFunction)(Parent.extended)) Parent.extended(Child);","","  return Child;","};"],"l":{"3":1,"6":1,"7":3,"12":3,"13":0,"16":3,"19":3,"28":3,"29":3,"33":3,"37":3,"39":3}},"/home/travis/build/npmtest/node-npmtest-bookshelf/node_modules/bookshelf/lib/collection.js":{"path":"/home/travis/build/npmtest/node-npmtest-bookshelf/node_modules/bookshelf/lib/collection.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":7,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":1,"75":1},"b":{"1":[2,5],"2":[7,7],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]},"f":{"1":7,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":37,"loc":{"start":{"line":37,"column":0},"end":{"line":37,"column":37}}},"2":{"name":"through","line":100,"loc":{"start":{"line":100,"column":11},"end":{"line":100,"column":107}}},"3":{"name":"(anonymous_3)","line":137,"loc":{"start":{"line":137,"column":34},"end":{"line":137,"column":53}}},"4":{"name":"(anonymous_4)","line":139,"loc":{"start":{"line":139,"column":54},"end":{"line":139,"column":74}}},"5":{"name":"(anonymous_5)","line":152,"loc":{"start":{"line":152,"column":9},"end":{"line":152,"column":29}}},"6":{"name":"(anonymous_6)","line":156,"loc":{"start":{"line":156,"column":11},"end":{"line":156,"column":31}}},"7":{"name":"(anonymous_7)","line":171,"loc":{"start":{"line":171,"column":42},"end":{"line":171,"column":57}}},"8":{"name":"(anonymous_8)","line":204,"loc":{"start":{"line":204,"column":34},"end":{"line":204,"column":61}}},"9":{"name":"(anonymous_9)","line":247,"loc":{"start":{"line":247,"column":37},"end":{"line":247,"column":56}}},"10":{"name":"(anonymous_10)","line":270,"loc":{"start":{"line":270,"column":33},"end":{"line":270,"column":63}}},"11":{"name":"(anonymous_11)","line":307,"loc":{"start":{"line":307,"column":35},"end":{"line":307,"column":61}}},"12":{"name":"(anonymous_12)","line":319,"loc":{"start":{"line":319,"column":101},"end":{"line":319,"column":113}}},"13":{"name":"(anonymous_13)","line":323,"loc":{"start":{"line":323,"column":12},"end":{"line":323,"column":24}}},"14":{"name":"resetQuery","line":337,"loc":{"start":{"line":337,"column":14},"end":{"line":337,"column":36}}},"15":{"name":"query","line":380,"loc":{"start":{"line":380,"column":9},"end":{"line":380,"column":26}}},"16":{"name":"orderBy","line":408,"loc":{"start":{"line":408,"column":11},"end":{"line":408,"column":30}}},"17":{"name":"sync","line":422,"loc":{"start":{"line":422,"column":8},"end":{"line":422,"column":31}}},"18":{"name":"clone","line":427,"loc":{"start":{"line":427,"column":9},"end":{"line":427,"column":26}}},"19":{"name":"_handleResponse","line":443,"loc":{"start":{"line":443,"column":19},"end":{"line":443,"column":54}}},"20":{"name":"_handleEager","line":458,"loc":{"start":{"line":458,"column":16},"end":{"line":458,"column":57}}},"21":{"name":"extended","line":464,"loc":{"start":{"line":464,"column":12},"end":{"line":464,"column":37}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":32}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":30}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":43}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":36}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":49}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":32}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":45}},"9":{"start":{"line":21,"column":0},"end":{"line":21,"column":34}},"10":{"start":{"line":23,"column":0},"end":{"line":23,"column":47}},"11":{"start":{"line":25,"column":0},"end":{"line":25,"column":47}},"12":{"start":{"line":27,"column":0},"end":{"line":27,"column":55}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":41}},"14":{"start":{"line":31,"column":0},"end":{"line":31,"column":49}},"15":{"start":{"line":33,"column":0},"end":{"line":33,"column":43}},"16":{"start":{"line":35,"column":0},"end":{"line":35,"column":57}},"17":{"start":{"line":37,"column":0},"end":{"line":37,"column":95}},"18":{"start":{"line":37,"column":39},"end":{"line":37,"column":93}},"19":{"start":{"line":66,"column":0},"end":{"line":475,"column":3}},"20":{"start":{"line":101,"column":4},"end":{"line":103,"column":7}},"21":{"start":{"line":138,"column":4},"end":{"line":138,"column":57}},"22":{"start":{"line":139,"column":4},"end":{"line":176,"column":20}},"23":{"start":{"line":140,"column":6},"end":{"line":142,"column":7}},"24":{"start":{"line":141,"column":8},"end":{"line":141,"column":63}},"25":{"start":{"line":153,"column":6},"end":{"line":155,"column":7}},"26":{"start":{"line":154,"column":8},"end":{"line":154,"column":82}},"27":{"start":{"line":170,"column":6},"end":{"line":170,"column":66}},"28":{"start":{"line":172,"column":6},"end":{"line":174,"column":7}},"29":{"start":{"line":173,"column":8},"end":{"line":173,"column":18}},"30":{"start":{"line":175,"column":6},"end":{"line":175,"column":39}},"31":{"start":{"line":205,"column":4},"end":{"line":208,"column":5}},"32":{"start":{"line":206,"column":6},"end":{"line":206,"column":23}},"33":{"start":{"line":207,"column":6},"end":{"line":207,"column":25}},"34":{"start":{"line":209,"column":4},"end":{"line":209,"column":55}},"35":{"start":{"line":209,"column":17},"end":{"line":209,"column":55}},"36":{"start":{"line":210,"column":4},"end":{"line":210,"column":44}},"37":{"start":{"line":248,"column":4},"end":{"line":248,"column":33}},"38":{"start":{"line":249,"column":4},"end":{"line":249,"column":39}},"39":{"start":{"line":250,"column":4},"end":{"line":250,"column":22}},"40":{"start":{"line":251,"column":4},"end":{"line":251,"column":63}},"41":{"start":{"line":251,"column":26},"end":{"line":251,"column":63}},"42":{"start":{"line":252,"column":4},"end":{"line":252,"column":32}},"43":{"start":{"line":271,"column":4},"end":{"line":271,"column":66}},"44":{"start":{"line":271,"column":42},"end":{"line":271,"column":66}},"45":{"start":{"line":272,"column":4},"end":{"line":272,"column":90}},"46":{"start":{"line":273,"column":4},"end":{"line":273,"column":112}},"47":{"start":{"line":308,"column":4},"end":{"line":308,"column":65}},"48":{"start":{"line":309,"column":4},"end":{"line":309,"column":39}},"49":{"start":{"line":311,"column":4},"end":{"line":311,"column":47}},"50":{"start":{"line":315,"column":4},"end":{"line":318,"column":5}},"51":{"start":{"line":316,"column":6},"end":{"line":316,"column":31}},"52":{"start":{"line":317,"column":6},"end":{"line":317,"column":24}},"53":{"start":{"line":319,"column":4},"end":{"line":325,"column":21}},"54":{"start":{"line":320,"column":6},"end":{"line":322,"column":7}},"55":{"start":{"line":321,"column":8},"end":{"line":321,"column":71}},"56":{"start":{"line":324,"column":6},"end":{"line":324,"column":31}},"57":{"start":{"line":338,"column":4},"end":{"line":338,"column":22}},"58":{"start":{"line":339,"column":4},"end":{"line":339,"column":16}},"59":{"start":{"line":381,"column":4},"end":{"line":381,"column":74}},"60":{"start":{"line":409,"column":4},"end":{"line":411,"column":5}},"61":{"start":{"line":410,"column":6},"end":{"line":410,"column":35}},"62":{"start":{"line":413,"column":4},"end":{"line":413,"column":83}},"63":{"start":{"line":423,"column":4},"end":{"line":423,"column":45}},"64":{"start":{"line":428,"column":4},"end":{"line":428,"column":76}},"65":{"start":{"line":429,"column":4},"end":{"line":431,"column":5}},"66":{"start":{"line":430,"column":6},"end":{"line":430,"column":57}},"67":{"start":{"line":432,"column":4},"end":{"line":432,"column":18}},"68":{"start":{"line":444,"column":4},"end":{"line":444,"column":39}},"69":{"start":{"line":446,"column":4},"end":{"line":446,"column":74}},"70":{"start":{"line":447,"column":4},"end":{"line":449,"column":5}},"71":{"start":{"line":448,"column":6},"end":{"line":448,"column":42}},"72":{"start":{"line":459,"column":4},"end":{"line":459,"column":87}},"73":{"start":{"line":472,"column":4},"end":{"line":472,"column":67}},"74":{"start":{"line":477,"column":0},"end":{"line":477,"column":61}},"75":{"start":{"line":479,"column":0},"end":{"line":479,"column":38}}},"branchMap":{"1":{"line":37,"type":"cond-expr","locations":[{"start":{"line":37,"column":70},"end":{"line":37,"column":73}},{"start":{"line":37,"column":76},"end":{"line":37,"column":92}}]},"2":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":46},"end":{"line":37,"column":49}},{"start":{"line":37,"column":53},"end":{"line":37,"column":67}}]},"3":{"line":138,"type":"cond-expr","locations":[{"start":{"line":138,"column":24},"end":{"line":138,"column":51}},{"start":{"line":138,"column":54},"end":{"line":138,"column":56}}]},"4":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":6},"end":{"line":140,"column":6}},{"start":{"line":140,"column":6},"end":{"line":140,"column":6}}]},"5":{"line":140,"type":"binary-expr","locations":[{"start":{"line":140,"column":10},"end":{"line":140,"column":19}},{"start":{"line":140,"column":23},"end":{"line":140,"column":44}}]},"6":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":6},"end":{"line":153,"column":6}},{"start":{"line":153,"column":6},"end":{"line":153,"column":6}}]},"7":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":6},"end":{"line":172,"column":6}},{"start":{"line":172,"column":6},"end":{"line":172,"column":6}}]},"8":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":4},"end":{"line":205,"column":4}},{"start":{"line":205,"column":4},"end":{"line":205,"column":4}}]},"9":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":4},"end":{"line":209,"column":4}},{"start":{"line":209,"column":4},"end":{"line":209,"column":4}}]},"10":{"line":251,"type":"if","locations":[{"start":{"line":251,"column":4},"end":{"line":251,"column":4}},{"start":{"line":251,"column":4},"end":{"line":251,"column":4}}]},"11":{"line":271,"type":"if","locations":[{"start":{"line":271,"column":4},"end":{"line":271,"column":4}},{"start":{"line":271,"column":4},"end":{"line":271,"column":4}}]},"12":{"line":308,"type":"cond-expr","locations":[{"start":{"line":308,"column":32},"end":{"line":308,"column":59}},{"start":{"line":308,"column":62},"end":{"line":308,"column":64}}]},"13":{"line":315,"type":"if","locations":[{"start":{"line":315,"column":4},"end":{"line":315,"column":4}},{"start":{"line":315,"column":4},"end":{"line":315,"column":4}}]},"14":{"line":320,"type":"if","locations":[{"start":{"line":320,"column":6},"end":{"line":320,"column":6}},{"start":{"line":320,"column":6},"end":{"line":320,"column":6}}]},"15":{"line":320,"type":"binary-expr","locations":[{"start":{"line":320,"column":10},"end":{"line":320,"column":21}},{"start":{"line":320,"column":25},"end":{"line":320,"column":61}}]},"16":{"line":429,"type":"if","locations":[{"start":{"line":429,"column":4},"end":{"line":429,"column":4}},{"start":{"line":429,"column":4},"end":{"line":429,"column":4}}]},"17":{"line":447,"type":"if","locations":[{"start":{"line":447,"column":4},"end":{"line":447,"column":4}},{"start":{"line":447,"column":4},"end":{"line":447,"column":4}}]},"18":{"line":447,"type":"binary-expr","locations":[{"start":{"line":447,"column":8},"end":{"line":447,"column":19}},{"start":{"line":447,"column":23},"end":{"line":447,"column":45}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _lodash = require('lodash');","","var _sync = require('./sync');","","var _sync2 = _interopRequireDefault(_sync);","","var _helpers = require('./helpers');","","var _helpers2 = _interopRequireDefault(_helpers);","","var _eager = require('./eager');","","var _eager2 = _interopRequireDefault(_eager);","","var _errors = require('./errors');","","var _errors2 = _interopRequireDefault(_errors);","","var _collection = require('./base/collection');","","var _collection2 = _interopRequireDefault(_collection);","","var _promise = require('./base/promise');","","var _promise2 = _interopRequireDefault(_promise);","","var _createError = require('create-error');","","var _createError2 = _interopRequireDefault(_createError);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","/**"," * @class Collection"," * @extends CollectionBase"," * @inheritdoc"," * @classdesc"," *"," * Collections are ordered sets of models returned from the database, from a"," * {@link Model#fetchAll fetchAll} call. They may be used with a suite of"," * {@link http://lodash.com/ Lodash} methods."," *"," * @constructor"," * @description"," *"," * When creating a {@link Collection}, you may choose to pass in the initial"," * array of {@link Model models}. The collection's {@link Collection#comparator"," * comparator} may be included as an option. Passing `false` as the comparator"," * option will prevent sorting. If you define an {@link Collection#initialize"," * initialize} function, it will be invoked when the collection is created."," *"," * @example"," * let tabs = new TabSet([tab1, tab2, tab3]);"," *"," * @param {(Model[])=} models Initial array of models."," * @param {Object=} options"," * @param {bool} [options.comparator=false]"," *   {@link Collection#comparator Comparator} for collection, or `false` to disable sorting."," */","var BookshelfCollection = _collection2.default.extend({","","  /**","   * @method Collection#through","   * @description","   * Used to define passthrough relationships - `hasOne`, `hasMany`, `belongsTo`","   * or `belongsToMany`, \"through\" an `Interim` model or collection.","   *","   * @param {Model} Interim Pivot model.","   *","   * @param {string=} throughForeignKey","   *","   *   Foreign key in this collection model. By default, the `foreignKey` is assumed to","   *   be the singular form of the `Target` model's tableName, followed by `_id` /","   *   `_{{{@link Model#idAttribute idAttribute}}}`.","   *","   * @param {string=} otherKey","   *","   *   Foreign key in the `Interim` model. By default, the `otherKey` is assumed to","   *   be the singular form of this model's tableName, followed by `_id` /","   *   `_{{{@link Model#idAttribute idAttribute}}}`.","   *","   * @param {string=} throughForeignKeyTarget","   *","   *   Column in the `Target` model which `throughForeignKey` references, if other","   *   than `Target` model's `id` / `{@link Model#idAttribute idAttribute}`.","   *","   * @param {string=} otherKeyTarget","   *","   *   Column in this collection model which `otherKey` references, if other","   *   than `id` / `{@link Model#idAttribute idAttribute}`.","   *","   * @returns {Collection}","   */","  through: function through(Interim, throughForeignKey, otherKey, throughForeignKeyTarget, otherKeyTarget) {","    return this.relatedData.through(this, Interim, {","      throughForeignKey: throughForeignKey, otherKey: otherKey, throughForeignKeyTarget: throughForeignKeyTarget, otherKeyTarget: otherKeyTarget","    });","  },","","  /**","   * @method Collection#fetch","   * @description","   * Fetch the default set of models for this collection from the database,","   * resetting the collection when they arrive. If you wish to trigger an error","   * if the fetched collection is empty, pass `{require: true}` as one of the","   * options to the {@link Collection#fetch fetch} call. A {@link","   * Collection#fetched \"fetched\"} event will be fired when records are","   * successfully retrieved. If you need to constrain the query performed by","   * `fetch`, you can call the {@link Collection#query query} method before","   * calling `fetch`.","   *","   * *If you'd like to only fetch specific columns, you may specify a `columns`","   * property in the options for the `fetch` call.*","   *","   * The `withRelated` option may be specified to fetch the models of the","   * collection, eager loading any specified {@link Relation relations} named on","   * the model. A single property, or an array of properties can be specified as","   * a value for the `withRelated` property. The results of these relation","   * queries will be loaded into a relations property on the respective models,","   * may be retrieved with the {@link Model#related related} method.","   *","   * @fires Collection#fetched","   * @throws {Collection.EmptyError}","   *   Upon a sucessful query resulting in no records returns. Only fired if `require: true` is passed as an option.","   *","   * @param {Object=} options","   * @param {bool} [options.require=false] Trigger a {@link Collection.EmptyError} if no records are found.","   * @param {string|string[]} [options.withRelated=[]] A relation, or list of relations, to be eager loaded as part of the `fetch` operation.","   * @returns {Promise<Collection>}","   */","  fetch: _promise2.default.method(function (options) {","    options = options ? (0, _lodash.clone)(options) : {};","    return this.sync(options).select().bind(this).tap(function (response) {","      if (!response || response.length === 0) {","        throw new this.constructor.EmptyError('EmptyResponse');","      }","    })","","    // Now, load all of the data onto the collection as necessary.","    .tap(this._handleResponse)","","    // If the \"withRelated\" is specified, we also need to eager load all of the","    // data on the collection, as a side-effect, before we ultimately jump into the","    // next step of the collection. Since the `columns` are only relevant to the current","    // level, ensure those are omitted from the options.","    .tap(function (response) {","      if (options.withRelated) {","        return this._handleEager(response, (0, _lodash.omit)(options, 'columns'));","      }","    }).tap(function (response) {","","      /**","       * @event Collection#fetched","       *","       * @description","       * Fired after a `fetch` operation. A promise may be returned from the","       * event handler for async behaviour.","       *","       * @param {Collection} collection The collection performing the {@link Collection#fetch}.","       * @param {Object} reponse Knex query response.","       * @param {Object} options Options object passed to {@link Collection#fetch fetch}.","       * @returns {Promise}","       */","      return this.triggerThen('fetched', this, response, options);","    }).catch(this.constructor.EmptyError, function (err) {","      if (options.require) {","        throw err;","      }","      this.reset([], { silent: true });","    }).return(this);","  }),","","  /**","   * @method Collection#count","   * @since 0.8.2","   * @description","   *","   * Get the number of records in the collection's table.","   *","   * @example","   *","   * // select count(*) from shareholders where company_id = 1 and share &gt; 0.1;","   * Company.forge({id:1})","   *   .shareholders()","   *   .query('where', 'share', '>', '0.1')","   *   .count()","   *   .then(function(count) {","   *     assert(count === 3);","   *   });","   *","   * @param {string} [column='*']","   *   Specify a column to count - rows with null values in this column will be excluded.","   * @param {Object=} options","   *   Hash of options.","   * @returns {Promise<Number>}","   *   A promise resolving to the number of matching rows.","   */","  count: _promise2.default.method(function (column, options) {","    if (!(0, _lodash.isString)(column)) {","      options = column;","      column = undefined;","    }","    if (options) options = (0, _lodash.clone)(options);","    return this.sync(options).count(column);","  }),","","  /**","   * @method Collection#fetchOne","   * @description","   *","   * Fetch and return a single {@link Model model} from the collection,","   * maintaining any {@link Relation relation} data from the collection, and","   * any {@link Collection#query query} parameters that have already been passed","   * to the collection. Especially helpful on relations, where you would only","   * like to return a single model from the associated collection.","   *","   * @example","   *","   * // select * from authors where site_id = 1 and id = 2 limit 1;","   * new Site({id:1})","   *   .authors()","   *   .query({where: {id: 2}})","   *   .fetchOne()","   *   .then(function(model) {","   *     // ...","   *   });","   *","   * @param {Object=}  options","   * @param {boolean} [options.require=false]","   *   If `true`, will reject the returned response with a {@link","   *   Model.NotFoundError NotFoundError} if no result is found.","   * @param {(string|string[])} [options.columns='*']","   *   Limit the number of columns fetched.","   * @param {Transaction} options.transacting","   *  Optionally run the query in a transaction.","   *","   * @throws {Model.NotFoundError}","   * @returns {Promise<Model|null>}","   *  A promise resolving to the fetched {@link Model model} or `null` if none exists.","   */","  fetchOne: _promise2.default.method(function (options) {","    var model = new this.model();","    model._knex = this.query().clone();","    this.resetQuery();","    if (this.relatedData) model.relatedData = this.relatedData;","    return model.fetch(options);","  }),","","  /**","   * @method Collection#load","   * @description","   * `load` is used to eager load relations onto a Collection, in a similar way","   * that the `withRelated` property works on {@link Collection#fetch fetch}.","   * Nested eager loads can be specified by separating the nested relations with","   * `'.'`.","   *","   *  @param {string|string[]} relations The relation, or relations, to be loaded.","   *  @param {Object=}      options Hash of options.","   *  @param {Transaction=} options.transacting","   *","   *  @returns {Promise<Collection>} A promise resolving to this {@link","   *  Collection collection}","   */","  load: _promise2.default.method(function (relations, options) {","    if (!(0, _lodash.isArray)(relations)) relations = [relations];","    options = (0, _lodash.extend)({}, options, { shallow: true, withRelated: relations });","    return new _eager2.default(this.models, this.toJSON(options), new this.model()).fetch(options).return(this);","  }),","","  /**","   * @method Collection#create","   * @description","   *","   * Convenience method to create a new {@link Model model} instance within a","   * collection. Equivalent to instantiating a model with a hash of {@link","   * Model#attributes attributes}, {@link Model#save saving} the model to the","   * database then adding the model to the collection.","   *","   * When used on a relation, `create` will automatically set foreign key","   * attributes before persisting the `Model`.","   *","   * ```","   * const { courses, ...attributes } = req.body;","   *","   * Student.forge(attributes).save().tap(student =>","   *   Promise.map(courses, course => student.related('courses').create(course))","   * ).then(student =>","   *   res.status(200).send(student)","   * ).catch(error =>","   *   res.status(500).send(error.message)","   * );","   * ```","   *","   * @param {Object} model A set of attributes to be set on the new model.","   * @param {Object=} options","   * @param {Transaction=} options.transacting","   *","   * @returns {Promise<Model>} A promise resolving with the new {@link Modle","   * model}.","   */","  create: _promise2.default.method(function (model, options) {","    options = options != null ? (0, _lodash.clone)(options) : {};","    var relatedData = this.relatedData;","","    model = this._prepareModel(model, options);","","    // If we've already added things on the query chain,","    // these are likely intended for the model.","    if (this._knex) {","      model._knex = this._knex;","      this.resetQuery();","    }","    return _helpers2.default.saveConstraints(model, relatedData).save(null, options).bind(this).then(function () {","      if (relatedData && relatedData.type === 'belongsToMany') {","        return this.attach(model, (0, _lodash.omit)(options, 'query'));","      }","    }).then(function () {","      this.add(model, options);","    }).return(model);","  }),","","  /**","   * @method Collection#resetQuery","   * @description","   * Used to reset the internal state of the current query builder instance.","   * This method is called internally each time a database action is completed","   * by {@link Sync}.","   *","   * @returns {Collection} Self, this method is chainable.","   */","  resetQuery: function resetQuery() {","    this._knex = null;","    return this;","  },","","  /**","   * @method Collection#query","   * @description","   *","   * `query` is used to tap into the underlying Knex query builder instance for","   * the current collection. If called with no arguments, it will return the","   * query builder directly. Otherwise, it will call the specified `method` on","   * the query builder, applying any additional arguments from the","   * `collection.query` call. If the `method` argument is a function, it will be","   * called with the Knex query builder as the context and the first argument.","   *","   * @example","   *","   * let qb = collection.query();","   *     qb.where({id: 1}).select().then(function(resp) {","   *       // ...","   *     });","   *","   * collection.query(function(qb) {","   *   qb.where('id', '>', 5).andWhere('first_name', '=', 'Test');","   * }).fetch()","   *   .then(function(collection) {","   *     // ...","   *   });","   *","   * collection","   *   .query('where', 'other_id', '=', '5')","   *   .fetch()","   *   .then(function(collection) {","   *     // ...","   *   });","   *","   * @param {function|Object|...string=} arguments The query method.","   * @returns {Collection|QueryBuilder}","   *   Will return this model or, if called with no arguments, the underlying query builder.","   *","   * @see {@link http://knexjs.org/#Builder Knex `QueryBuilder`}","   */","  query: function query() {","    return _helpers2.default.query(this, (0, _lodash.toArray)(arguments));","  },","","  /**","   * @method Collection#orderBy","   * @since 0.9.3","   * @description","   *","   * Specifies the column to sort on and sort order.","   *","   * The order parameter is optional, and defaults to 'ASC'. You may","   * also specify 'DESC' order by prepending a hyphen to the sort column","   * name. `orderBy(\"date\", 'DESC')` is the same as `orderBy(\"-date\")`.","   *","   * Unless specified using dot notation (i.e., \"table.column\"), the default","   * table will be the table name of the model `orderBy` was called on.","   *","   * @example","   *","   * Cars.forge().orderBy('color', 'ASC').fetch()","   *    .then(function (rows) { // ...","   *","   * @param sort {string}","   *   Column to sort on","   * @param order {string}","   *   Ascending ('ASC') or descending ('DESC') order","   */","  orderBy: function orderBy() {","    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {","      args[_key] = arguments[_key];","    }","","    return _helpers2.default.orderBy.apply(_helpers2.default, [this].concat(args));","  },","","","  /**","   * @method Collection#query","   * @private","   * @description Creates and returns a new `Bookshelf.Sync` instance.","   */","  sync: function sync(options) {","    return new _sync2.default(this, options);","  },","","  /* Ensure that QueryBuilder is copied on clone. */","  clone: function clone() {","    var cloned = BookshelfCollection.__super__.clone.apply(this, arguments);","    if (this._knex != null) {","      cloned._knex = cloned._builder(this._knex.clone());","    }","    return cloned;","  },","","","  /**","   * @method Collection#_handleResponse","   * @private","   * @description","   * Handles the response data for the collection, returning from the","   * collection's `fetch` call.","   */","  _handleResponse: function _handleResponse(response) {","    var relatedData = this.relatedData;","","    this.set(response, { silent: true, parse: true }).invokeMap('_reset');","    if (relatedData && relatedData.isJoined()) {","      relatedData.parsePivot(this.models);","    }","  },","","  /**","   * @method Collection#_handleEager","   * @private","   * @description","   * Handle the related data loading on the collection.","   */","  _handleEager: function _handleEager(response, options) {","    return new _eager2.default(this.models, response, new this.model()).fetch(options);","  }","","}, {","","  extended: function extended(child) {","    /**","     * @class Collection.EmptyError","     * @description","     *   Thrown when no records are found by {@link Collection#fetch fetch},","     *   {@link Model#fetchAll}, or {@link Model.fetchAll} when called with","     *   the `{require: true}` option.","     */","    child.EmptyError = (0, _createError2.default)(this.EmptyError);","  }","","});","","BookshelfCollection.EmptyError = _errors2.default.EmptyError;","","exports.default = BookshelfCollection;"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":1,"21":1,"23":1,"25":1,"27":1,"29":1,"31":1,"33":1,"35":1,"37":7,"66":1,"101":0,"138":0,"139":0,"140":0,"141":0,"153":0,"154":0,"170":0,"172":0,"173":0,"175":0,"205":0,"206":0,"207":0,"209":0,"210":0,"248":0,"249":0,"250":0,"251":0,"252":0,"271":0,"272":0,"273":0,"308":0,"309":0,"311":0,"315":0,"316":0,"317":0,"319":0,"320":0,"321":0,"324":0,"338":0,"339":0,"381":0,"409":0,"410":0,"413":0,"423":0,"428":0,"429":0,"430":0,"432":0,"444":0,"446":0,"447":0,"448":0,"459":0,"472":0,"477":1,"479":1}},"/home/travis/build/npmtest/node-npmtest-bookshelf/node_modules/bookshelf/lib/base/collection.js":{"path":"/home/travis/build/npmtest/node-npmtest-bookshelf/node_modules/bookshelf/lib/base/collection.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":6,"15":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":0,"32":1,"33":0,"34":1,"35":0,"36":1,"37":0,"38":1,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":1,"98":0,"99":0,"100":0,"101":1,"102":0,"103":1,"104":0,"105":1,"106":0,"107":1,"108":0,"109":1,"110":0,"111":1,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":1,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":1,"137":0,"138":1,"139":0,"140":0,"141":0,"142":1,"143":0,"144":1,"145":0,"146":0,"147":0,"148":1,"149":0,"150":1,"151":0,"152":0,"153":0,"154":1,"155":0,"156":1,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":1,"165":0,"166":1,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":1,"177":0,"178":1,"179":0,"180":1,"181":0,"182":1,"183":0,"184":0,"185":0,"186":1,"187":1,"188":31,"189":0,"190":1,"191":1,"192":3,"193":0,"194":0,"195":0,"196":1,"197":1},"b":{"1":[2,4],"2":[6,6],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0]},"f":{"1":6,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":31,"33":0,"34":3,"35":0,"36":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":37}}},"2":{"name":"CollectionBase","line":44,"loc":{"start":{"line":44,"column":0},"end":{"line":44,"column":41}}},"3":{"name":"(anonymous_3)","line":122,"loc":{"start":{"line":122,"column":37},"end":{"line":122,"column":49}}},"4":{"name":"(anonymous_4)","line":133,"loc":{"start":{"line":133,"column":39},"end":{"line":133,"column":51}}},"5":{"name":"(anonymous_5)","line":137,"loc":{"start":{"line":137,"column":36},"end":{"line":137,"column":48}}},"6":{"name":"(anonymous_6)","line":160,"loc":{"start":{"line":160,"column":37},"end":{"line":160,"column":56}}},"7":{"name":"(anonymous_7)","line":175,"loc":{"start":{"line":175,"column":34},"end":{"line":175,"column":53}}},"8":{"name":"(anonymous_8)","line":201,"loc":{"start":{"line":201,"column":31},"end":{"line":201,"column":58}}},"9":{"name":"(anonymous_9)","line":295,"loc":{"start":{"line":295,"column":41},"end":{"line":295,"column":67}}},"10":{"name":"(anonymous_10)","line":306,"loc":{"start":{"line":306,"column":35},"end":{"line":306,"column":64}}},"11":{"name":"(anonymous_11)","line":331,"loc":{"start":{"line":331,"column":38},"end":{"line":331,"column":50}}},"12":{"name":"(anonymous_12)","line":347,"loc":{"start":{"line":347,"column":38},"end":{"line":347,"column":81}}},"13":{"name":"(anonymous_13)","line":351,"loc":{"start":{"line":351,"column":33},"end":{"line":351,"column":45}}},"14":{"name":"(anonymous_14)","line":384,"loc":{"start":{"line":384,"column":31},"end":{"line":384,"column":58}}},"15":{"name":"(anonymous_15)","line":400,"loc":{"start":{"line":400,"column":34},"end":{"line":400,"column":61}}},"16":{"name":"(anonymous_16)","line":435,"loc":{"start":{"line":435,"column":33},"end":{"line":435,"column":60}}},"17":{"name":"(anonymous_17)","line":452,"loc":{"start":{"line":452,"column":32},"end":{"line":452,"column":58}}},"18":{"name":"(anonymous_18)","line":461,"loc":{"start":{"line":461,"column":31},"end":{"line":461,"column":50}}},"19":{"name":"(anonymous_19)","line":472,"loc":{"start":{"line":472,"column":35},"end":{"line":472,"column":61}}},"20":{"name":"(anonymous_20)","line":481,"loc":{"start":{"line":481,"column":33},"end":{"line":481,"column":52}}},"21":{"name":"(anonymous_21)","line":492,"loc":{"start":{"line":492,"column":33},"end":{"line":492,"column":45}}},"22":{"name":"(anonymous_22)","line":509,"loc":{"start":{"line":509,"column":31},"end":{"line":509,"column":46}}},"23":{"name":"(anonymous_23)","line":521,"loc":{"start":{"line":521,"column":30},"end":{"line":521,"column":47}}},"24":{"name":"(anonymous_24)","line":531,"loc":{"start":{"line":531,"column":33},"end":{"line":531,"column":57}}},"25":{"name":"(anonymous_25)","line":533,"loc":{"start":{"line":533,"column":41},"end":{"line":533,"column":58}}},"26":{"name":"(anonymous_26)","line":548,"loc":{"start":{"line":548,"column":37},"end":{"line":548,"column":54}}},"27":{"name":"(anonymous_27)","line":558,"loc":{"start":{"line":558,"column":32},"end":{"line":558,"column":51}}},"28":{"name":"(anonymous_28)","line":579,"loc":{"start":{"line":579,"column":33},"end":{"line":579,"column":49}}},"29":{"name":"(anonymous_29)","line":594,"loc":{"start":{"line":594,"column":33},"end":{"line":594,"column":49}}},"30":{"name":"(anonymous_30)","line":603,"loc":{"start":{"line":603,"column":33},"end":{"line":603,"column":45}}},"31":{"name":"(anonymous_31)","line":613,"loc":{"start":{"line":613,"column":34},"end":{"line":613,"column":46}}},"32":{"name":"(anonymous_32)","line":753,"loc":{"start":{"line":753,"column":31},"end":{"line":753,"column":49}}},"33":{"name":"(anonymous_33)","line":754,"loc":{"start":{"line":754,"column":37},"end":{"line":754,"column":49}}},"34":{"name":"(anonymous_34)","line":777,"loc":{"start":{"line":777,"column":40},"end":{"line":777,"column":58}}},"35":{"name":"(anonymous_35)","line":778,"loc":{"start":{"line":778,"column":37},"end":{"line":778,"column":63}}},"36":{"name":"(anonymous_36)","line":779,"loc":{"start":{"line":779,"column":64},"end":{"line":779,"column":81}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":47}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":36}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":51}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":34}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":47}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"8":{"start":{"line":17,"column":0},"end":{"line":17,"column":49}},"9":{"start":{"line":19,"column":0},"end":{"line":19,"column":32}},"10":{"start":{"line":21,"column":0},"end":{"line":21,"column":45}},"11":{"start":{"line":23,"column":0},"end":{"line":23,"column":35}},"12":{"start":{"line":25,"column":0},"end":{"line":25,"column":47}},"13":{"start":{"line":27,"column":0},"end":{"line":27,"column":95}},"14":{"start":{"line":27,"column":39},"end":{"line":27,"column":93}},"15":{"start":{"line":34,"column":0},"end":{"line":36,"column":35}},"16":{"start":{"line":44,"column":0},"end":{"line":52,"column":1}},"17":{"start":{"line":45,"column":2},"end":{"line":45,"column":94}},"18":{"start":{"line":45,"column":15},"end":{"line":45,"column":94}},"19":{"start":{"line":46,"column":2},"end":{"line":46,"column":16}},"20":{"start":{"line":47,"column":2},"end":{"line":47,"column":41}},"21":{"start":{"line":48,"column":2},"end":{"line":50,"column":3}},"22":{"start":{"line":49,"column":4},"end":{"line":49,"column":88}},"23":{"start":{"line":51,"column":2},"end":{"line":51,"column":85}},"24":{"start":{"line":51,"column":14},"end":{"line":51,"column":85}},"25":{"start":{"line":83,"column":0},"end":{"line":83,"column":58}},"26":{"start":{"line":99,"column":0},"end":{"line":101,"column":109}},"27":{"start":{"line":104,"column":0},"end":{"line":104,"column":58}},"28":{"start":{"line":105,"column":0},"end":{"line":105,"column":46}},"29":{"start":{"line":113,"column":0},"end":{"line":113,"column":51}},"30":{"start":{"line":122,"column":0},"end":{"line":124,"column":2}},"31":{"start":{"line":123,"column":2},"end":{"line":123,"column":68}},"32":{"start":{"line":133,"column":0},"end":{"line":135,"column":2}},"33":{"start":{"line":134,"column":2},"end":{"line":134,"column":42}},"34":{"start":{"line":137,"column":0},"end":{"line":139,"column":2}},"35":{"start":{"line":138,"column":2},"end":{"line":138,"column":31}},"36":{"start":{"line":160,"column":0},"end":{"line":162,"column":2}},"37":{"start":{"line":161,"column":2},"end":{"line":161,"column":108}},"38":{"start":{"line":175,"column":0},"end":{"line":177,"column":2}},"39":{"start":{"line":176,"column":2},"end":{"line":176,"column":33}},"40":{"start":{"line":201,"column":0},"end":{"line":287,"column":2}},"41":{"start":{"line":202,"column":2},"end":{"line":202,"column":63}},"42":{"start":{"line":203,"column":2},"end":{"line":203,"column":73}},"43":{"start":{"line":203,"column":41},"end":{"line":203,"column":73}},"44":{"start":{"line":204,"column":2},"end":{"line":204,"column":58}},"45":{"start":{"line":204,"column":21},"end":{"line":204,"column":58}},"46":{"start":{"line":205,"column":2},"end":{"line":209,"column":21}},"47":{"start":{"line":210,"column":2},"end":{"line":210,"column":22}},"48":{"start":{"line":211,"column":2},"end":{"line":211,"column":31}},"49":{"start":{"line":212,"column":2},"end":{"line":212,"column":17}},"50":{"start":{"line":213,"column":2},"end":{"line":213,"column":20}},"51":{"start":{"line":214,"column":2},"end":{"line":214,"column":20}},"52":{"start":{"line":215,"column":2},"end":{"line":218,"column":31}},"53":{"start":{"line":220,"column":2},"end":{"line":220,"column":41}},"54":{"start":{"line":224,"column":2},"end":{"line":253,"column":3}},"55":{"start":{"line":225,"column":4},"end":{"line":225,"column":22}},"56":{"start":{"line":226,"column":4},"end":{"line":230,"column":5}},"57":{"start":{"line":227,"column":6},"end":{"line":227,"column":25}},"58":{"start":{"line":229,"column":6},"end":{"line":229,"column":52}},"59":{"start":{"line":234,"column":4},"end":{"line":234,"column":32}},"60":{"start":{"line":235,"column":4},"end":{"line":251,"column":5}},"61":{"start":{"line":236,"column":6},"end":{"line":238,"column":7}},"62":{"start":{"line":237,"column":8},"end":{"line":237,"column":38}},"63":{"start":{"line":239,"column":6},"end":{"line":243,"column":7}},"64":{"start":{"line":240,"column":8},"end":{"line":240,"column":59}},"65":{"start":{"line":241,"column":8},"end":{"line":241,"column":66}},"66":{"start":{"line":241,"column":27},"end":{"line":241,"column":66}},"67":{"start":{"line":242,"column":8},"end":{"line":242,"column":37}},"68":{"start":{"line":246,"column":11},"end":{"line":251,"column":5}},"69":{"start":{"line":247,"column":6},"end":{"line":247,"column":66}},"70":{"start":{"line":247,"column":57},"end":{"line":247,"column":66}},"71":{"start":{"line":248,"column":6},"end":{"line":248,"column":24}},"72":{"start":{"line":249,"column":6},"end":{"line":249,"column":36}},"73":{"start":{"line":250,"column":6},"end":{"line":250,"column":57}},"74":{"start":{"line":250,"column":28},"end":{"line":250,"column":57}},"75":{"start":{"line":252,"column":4},"end":{"line":252,"column":45}},"76":{"start":{"line":252,"column":15},"end":{"line":252,"column":45}},"77":{"start":{"line":256,"column":2},"end":{"line":261,"column":3}},"78":{"start":{"line":257,"column":4},"end":{"line":259,"column":5}},"79":{"start":{"line":258,"column":6},"end":{"line":258,"column":72}},"80":{"start":{"line":258,"column":51},"end":{"line":258,"column":72}},"81":{"start":{"line":260,"column":4},"end":{"line":260,"column":56}},"82":{"start":{"line":260,"column":25},"end":{"line":260,"column":56}},"83":{"start":{"line":264,"column":2},"end":{"line":278,"column":3}},"84":{"start":{"line":265,"column":4},"end":{"line":265,"column":32}},"85":{"start":{"line":266,"column":4},"end":{"line":277,"column":5}},"86":{"start":{"line":267,"column":6},"end":{"line":267,"column":55}},"87":{"start":{"line":269,"column":6},"end":{"line":273,"column":7}},"88":{"start":{"line":270,"column":8},"end":{"line":270,"column":31}},"89":{"start":{"line":272,"column":8},"end":{"line":272,"column":22}},"90":{"start":{"line":274,"column":6},"end":{"line":276,"column":7}},"91":{"start":{"line":275,"column":8},"end":{"line":275,"column":35}},"92":{"start":{"line":280,"column":2},"end":{"line":280,"column":34}},"93":{"start":{"line":280,"column":22},"end":{"line":280,"column":34}},"94":{"start":{"line":283,"column":2},"end":{"line":285,"column":3}},"95":{"start":{"line":284,"column":4},"end":{"line":284,"column":60}},"96":{"start":{"line":286,"column":2},"end":{"line":286,"column":14}},"97":{"start":{"line":295,"column":0},"end":{"line":298,"column":2}},"98":{"start":{"line":296,"column":2},"end":{"line":296,"column":53}},"99":{"start":{"line":296,"column":40},"end":{"line":296,"column":53}},"100":{"start":{"line":297,"column":2},"end":{"line":297,"column":40}},"101":{"start":{"line":306,"column":0},"end":{"line":308,"column":2}},"102":{"start":{"line":307,"column":2},"end":{"line":307,"column":79}},"103":{"start":{"line":331,"column":0},"end":{"line":333,"column":2}},"104":{"start":{"line":332,"column":2},"end":{"line":332,"column":70}},"105":{"start":{"line":347,"column":0},"end":{"line":349,"column":2}},"106":{"start":{"line":348,"column":2},"end":{"line":348,"column":103}},"107":{"start":{"line":351,"column":0},"end":{"line":353,"column":2}},"108":{"start":{"line":352,"column":2},"end":{"line":352,"column":81}},"109":{"start":{"line":384,"column":0},"end":{"line":386,"column":2}},"110":{"start":{"line":385,"column":2},"end":{"line":385,"column":90}},"111":{"start":{"line":400,"column":0},"end":{"line":418,"column":2}},"112":{"start":{"line":401,"column":2},"end":{"line":401,"column":51}},"113":{"start":{"line":402,"column":2},"end":{"line":402,"column":64}},"114":{"start":{"line":403,"column":2},"end":{"line":403,"column":26}},"115":{"start":{"line":404,"column":2},"end":{"line":416,"column":3}},"116":{"start":{"line":405,"column":4},"end":{"line":405,"column":48}},"117":{"start":{"line":406,"column":4},"end":{"line":406,"column":25}},"118":{"start":{"line":406,"column":16},"end":{"line":406,"column":25}},"119":{"start":{"line":407,"column":4},"end":{"line":407,"column":32}},"120":{"start":{"line":408,"column":4},"end":{"line":408,"column":33}},"121":{"start":{"line":409,"column":4},"end":{"line":409,"column":36}},"122":{"start":{"line":410,"column":4},"end":{"line":410,"column":33}},"123":{"start":{"line":411,"column":4},"end":{"line":411,"column":34}},"124":{"start":{"line":412,"column":4},"end":{"line":415,"column":5}},"125":{"start":{"line":413,"column":6},"end":{"line":413,"column":28}},"126":{"start":{"line":414,"column":6},"end":{"line":414,"column":52}},"127":{"start":{"line":417,"column":2},"end":{"line":417,"column":39}},"128":{"start":{"line":435,"column":0},"end":{"line":442,"column":2}},"129":{"start":{"line":436,"column":2},"end":{"line":436,"column":26}},"130":{"start":{"line":437,"column":2},"end":{"line":437,"column":39}},"131":{"start":{"line":438,"column":2},"end":{"line":438,"column":16}},"132":{"start":{"line":439,"column":2},"end":{"line":439,"column":80}},"133":{"start":{"line":440,"column":2},"end":{"line":440,"column":60}},"134":{"start":{"line":440,"column":23},"end":{"line":440,"column":60}},"135":{"start":{"line":441,"column":2},"end":{"line":441,"column":16}},"136":{"start":{"line":452,"column":0},"end":{"line":454,"column":2}},"137":{"start":{"line":453,"column":2},"end":{"line":453,"column":80}},"138":{"start":{"line":461,"column":0},"end":{"line":465,"column":2}},"139":{"start":{"line":462,"column":2},"end":{"line":462,"column":39}},"140":{"start":{"line":463,"column":2},"end":{"line":463,"column":30}},"141":{"start":{"line":464,"column":2},"end":{"line":464,"column":15}},"142":{"start":{"line":472,"column":0},"end":{"line":474,"column":2}},"143":{"start":{"line":473,"column":2},"end":{"line":473,"column":70}},"144":{"start":{"line":481,"column":0},"end":{"line":485,"column":2}},"145":{"start":{"line":482,"column":2},"end":{"line":482,"column":25}},"146":{"start":{"line":483,"column":2},"end":{"line":483,"column":30}},"147":{"start":{"line":484,"column":2},"end":{"line":484,"column":15}},"148":{"start":{"line":492,"column":0},"end":{"line":494,"column":2}},"149":{"start":{"line":493,"column":2},"end":{"line":493,"column":45}},"150":{"start":{"line":509,"column":0},"end":{"line":512,"column":2}},"151":{"start":{"line":510,"column":2},"end":{"line":510,"column":33}},"152":{"start":{"line":510,"column":19},"end":{"line":510,"column":33}},"153":{"start":{"line":511,"column":2},"end":{"line":511,"column":70}},"154":{"start":{"line":521,"column":0},"end":{"line":523,"column":2}},"155":{"start":{"line":522,"column":2},"end":{"line":522,"column":28}},"156":{"start":{"line":531,"column":0},"end":{"line":539,"column":2}},"157":{"start":{"line":532,"column":2},"end":{"line":532,"column":66}},"158":{"start":{"line":532,"column":39},"end":{"line":532,"column":66}},"159":{"start":{"line":533,"column":2},"end":{"line":538,"column":5}},"160":{"start":{"line":534,"column":4},"end":{"line":536,"column":5}},"161":{"start":{"line":535,"column":6},"end":{"line":535,"column":54}},"162":{"start":{"line":535,"column":41},"end":{"line":535,"column":54}},"163":{"start":{"line":537,"column":4},"end":{"line":537,"column":16}},"164":{"start":{"line":548,"column":0},"end":{"line":550,"column":2}},"165":{"start":{"line":549,"column":2},"end":{"line":549,"column":33}},"166":{"start":{"line":558,"column":0},"end":{"line":571,"column":2}},"167":{"start":{"line":559,"column":2},"end":{"line":559,"column":82}},"168":{"start":{"line":559,"column":24},"end":{"line":559,"column":82}},"169":{"start":{"line":560,"column":2},"end":{"line":560,"column":26}},"170":{"start":{"line":563,"column":2},"end":{"line":567,"column":3}},"171":{"start":{"line":564,"column":4},"end":{"line":564,"column":53}},"172":{"start":{"line":566,"column":4},"end":{"line":566,"column":67}},"173":{"start":{"line":569,"column":2},"end":{"line":569,"column":59}},"174":{"start":{"line":569,"column":23},"end":{"line":569,"column":59}},"175":{"start":{"line":570,"column":2},"end":{"line":570,"column":14}},"176":{"start":{"line":579,"column":0},"end":{"line":581,"column":2}},"177":{"start":{"line":580,"column":2},"end":{"line":580,"column":37}},"178":{"start":{"line":594,"column":0},"end":{"line":596,"column":2}},"179":{"start":{"line":595,"column":2},"end":{"line":595,"column":14}},"180":{"start":{"line":603,"column":0},"end":{"line":605,"column":2}},"181":{"start":{"line":604,"column":2},"end":{"line":604,"column":89}},"182":{"start":{"line":613,"column":0},"end":{"line":617,"column":2}},"183":{"start":{"line":614,"column":2},"end":{"line":614,"column":18}},"184":{"start":{"line":615,"column":2},"end":{"line":615,"column":19}},"185":{"start":{"line":616,"column":2},"end":{"line":616,"column":35}},"186":{"start":{"line":750,"column":0},"end":{"line":750,"column":319}},"187":{"start":{"line":753,"column":0},"end":{"line":757,"column":3}},"188":{"start":{"line":754,"column":2},"end":{"line":756,"column":4}},"189":{"start":{"line":755,"column":4},"end":{"line":755,"column":121}},"190":{"start":{"line":774,"column":0},"end":{"line":774,"column":56}},"191":{"start":{"line":777,"column":0},"end":{"line":784,"column":3}},"192":{"start":{"line":778,"column":2},"end":{"line":783,"column":4}},"193":{"start":{"line":779,"column":4},"end":{"line":781,"column":6}},"194":{"start":{"line":780,"column":6},"end":{"line":780,"column":30}},"195":{"start":{"line":782,"column":4},"end":{"line":782,"column":91}},"196":{"start":{"line":801,"column":0},"end":{"line":801,"column":41}},"197":{"start":{"line":809,"column":0},"end":{"line":809,"column":32}}},"branchMap":{"1":{"line":27,"type":"cond-expr","locations":[{"start":{"line":27,"column":70},"end":{"line":27,"column":73}},{"start":{"line":27,"column":76},"end":{"line":27,"column":92}}]},"2":{"line":27,"type":"binary-expr","locations":[{"start":{"line":27,"column":46},"end":{"line":27,"column":49}},{"start":{"line":27,"column":53},"end":{"line":27,"column":67}}]},"3":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]},"4":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":2},"end":{"line":48,"column":2}},{"start":{"line":48,"column":2},"end":{"line":48,"column":2}}]},"5":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":2},"end":{"line":51,"column":2}},{"start":{"line":51,"column":2},"end":{"line":51,"column":2}}]},"6":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":2},"end":{"line":203,"column":2}},{"start":{"line":203,"column":2},"end":{"line":203,"column":2}}]},"7":{"line":203,"type":"cond-expr","locations":[{"start":{"line":203,"column":59},"end":{"line":203,"column":67}},{"start":{"line":203,"column":70},"end":{"line":203,"column":72}}]},"8":{"line":204,"type":"if","locations":[{"start":{"line":204,"column":2},"end":{"line":204,"column":2}},{"start":{"line":204,"column":2},"end":{"line":204,"column":2}}]},"9":{"line":220,"type":"cond-expr","locations":[{"start":{"line":220,"column":30},"end":{"line":220,"column":32}},{"start":{"line":220,"column":35},"end":{"line":220,"column":40}}]},"10":{"line":220,"type":"binary-expr","locations":[{"start":{"line":220,"column":14},"end":{"line":220,"column":17}},{"start":{"line":220,"column":21},"end":{"line":220,"column":27}}]},"11":{"line":226,"type":"if","locations":[{"start":{"line":226,"column":4},"end":{"line":226,"column":4}},{"start":{"line":226,"column":4},"end":{"line":226,"column":4}}]},"12":{"line":235,"type":"if","locations":[{"start":{"line":235,"column":4},"end":{"line":235,"column":4}},{"start":{"line":235,"column":4},"end":{"line":235,"column":4}}]},"13":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":6},"end":{"line":236,"column":6}},{"start":{"line":236,"column":6},"end":{"line":236,"column":6}}]},"14":{"line":239,"type":"if","locations":[{"start":{"line":239,"column":6},"end":{"line":239,"column":6}},{"start":{"line":239,"column":6},"end":{"line":239,"column":6}}]},"15":{"line":240,"type":"cond-expr","locations":[{"start":{"line":240,"column":34},"end":{"line":240,"column":50}},{"start":{"line":240,"column":53},"end":{"line":240,"column":58}}]},"16":{"line":241,"type":"if","locations":[{"start":{"line":241,"column":8},"end":{"line":241,"column":8}},{"start":{"line":241,"column":8},"end":{"line":241,"column":8}}]},"17":{"line":246,"type":"if","locations":[{"start":{"line":246,"column":11},"end":{"line":246,"column":11}},{"start":{"line":246,"column":11},"end":{"line":246,"column":11}}]},"18":{"line":247,"type":"if","locations":[{"start":{"line":247,"column":6},"end":{"line":247,"column":6}},{"start":{"line":247,"column":6},"end":{"line":247,"column":6}}]},"19":{"line":250,"type":"if","locations":[{"start":{"line":250,"column":6},"end":{"line":250,"column":6}},{"start":{"line":250,"column":6},"end":{"line":250,"column":6}}]},"20":{"line":252,"type":"if","locations":[{"start":{"line":252,"column":4},"end":{"line":252,"column":4}},{"start":{"line":252,"column":4},"end":{"line":252,"column":4}}]},"21":{"line":252,"type":"binary-expr","locations":[{"start":{"line":252,"column":26},"end":{"line":252,"column":34}},{"start":{"line":252,"column":38},"end":{"line":252,"column":43}}]},"22":{"line":256,"type":"if","locations":[{"start":{"line":256,"column":2},"end":{"line":256,"column":2}},{"start":{"line":256,"column":2},"end":{"line":256,"column":2}}]},"23":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":6},"end":{"line":258,"column":6}},{"start":{"line":258,"column":6},"end":{"line":258,"column":6}}]},"24":{"line":260,"type":"if","locations":[{"start":{"line":260,"column":4},"end":{"line":260,"column":4}},{"start":{"line":260,"column":4},"end":{"line":260,"column":4}}]},"25":{"line":264,"type":"if","locations":[{"start":{"line":264,"column":2},"end":{"line":264,"column":2}},{"start":{"line":264,"column":2},"end":{"line":264,"column":2}}]},"26":{"line":264,"type":"binary-expr","locations":[{"start":{"line":264,"column":6},"end":{"line":264,"column":18}},{"start":{"line":264,"column":22},"end":{"line":264,"column":27}},{"start":{"line":264,"column":31},"end":{"line":264,"column":43}}]},"27":{"line":266,"type":"if","locations":[{"start":{"line":266,"column":4},"end":{"line":266,"column":4}},{"start":{"line":266,"column":4},"end":{"line":266,"column":4}}]},"28":{"line":269,"type":"if","locations":[{"start":{"line":269,"column":6},"end":{"line":269,"column":6}},{"start":{"line":269,"column":6},"end":{"line":269,"column":6}}]},"29":{"line":280,"type":"if","locations":[{"start":{"line":280,"column":2},"end":{"line":280,"column":2}},{"start":{"line":280,"column":2},"end":{"line":280,"column":2}}]},"30":{"line":296,"type":"if","locations":[{"start":{"line":296,"column":2},"end":{"line":296,"column":2}},{"start":{"line":296,"column":2},"end":{"line":296,"column":2}}]},"31":{"line":402,"type":"cond-expr","locations":[{"start":{"line":402,"column":22},"end":{"line":402,"column":30}},{"start":{"line":402,"column":33},"end":{"line":402,"column":63}}]},"32":{"line":403,"type":"binary-expr","locations":[{"start":{"line":403,"column":12},"end":{"line":403,"column":19}},{"start":{"line":403,"column":23},"end":{"line":403,"column":25}}]},"33":{"line":406,"type":"if","locations":[{"start":{"line":406,"column":4},"end":{"line":406,"column":4}},{"start":{"line":406,"column":4},"end":{"line":406,"column":4}}]},"34":{"line":412,"type":"if","locations":[{"start":{"line":412,"column":4},"end":{"line":412,"column":4}},{"start":{"line":412,"column":4},"end":{"line":412,"column":4}}]},"35":{"line":417,"type":"cond-expr","locations":[{"start":{"line":417,"column":20},"end":{"line":417,"column":29}},{"start":{"line":417,"column":32},"end":{"line":417,"column":38}}]},"36":{"line":436,"type":"binary-expr","locations":[{"start":{"line":436,"column":12},"end":{"line":436,"column":19}},{"start":{"line":436,"column":23},"end":{"line":436,"column":25}}]},"37":{"line":440,"type":"if","locations":[{"start":{"line":440,"column":2},"end":{"line":440,"column":2}},{"start":{"line":440,"column":2},"end":{"line":440,"column":2}}]},"38":{"line":510,"type":"if","locations":[{"start":{"line":510,"column":2},"end":{"line":510,"column":2}},{"start":{"line":510,"column":2},"end":{"line":510,"column":2}}]},"39":{"line":511,"type":"binary-expr","locations":[{"start":{"line":511,"column":9},"end":{"line":511,"column":27}},{"start":{"line":511,"column":31},"end":{"line":511,"column":50}},{"start":{"line":511,"column":54},"end":{"line":511,"column":69}}]},"40":{"line":532,"type":"if","locations":[{"start":{"line":532,"column":2},"end":{"line":532,"column":2}},{"start":{"line":532,"column":2},"end":{"line":532,"column":2}}]},"41":{"line":532,"type":"cond-expr","locations":[{"start":{"line":532,"column":54},"end":{"line":532,"column":60}},{"start":{"line":532,"column":63},"end":{"line":532,"column":65}}]},"42":{"line":533,"type":"cond-expr","locations":[{"start":{"line":533,"column":22},"end":{"line":533,"column":28}},{"start":{"line":533,"column":31},"end":{"line":533,"column":39}}]},"43":{"line":535,"type":"if","locations":[{"start":{"line":535,"column":6},"end":{"line":535,"column":6}},{"start":{"line":535,"column":6},"end":{"line":535,"column":6}}]},"44":{"line":559,"type":"if","locations":[{"start":{"line":559,"column":2},"end":{"line":559,"column":2}},{"start":{"line":559,"column":2},"end":{"line":559,"column":2}}]},"45":{"line":560,"type":"binary-expr","locations":[{"start":{"line":560,"column":12},"end":{"line":560,"column":19}},{"start":{"line":560,"column":23},"end":{"line":560,"column":25}}]},"46":{"line":563,"type":"if","locations":[{"start":{"line":563,"column":2},"end":{"line":563,"column":2}},{"start":{"line":563,"column":2},"end":{"line":563,"column":2}}]},"47":{"line":563,"type":"binary-expr","locations":[{"start":{"line":563,"column":6},"end":{"line":563,"column":48}},{"start":{"line":563,"column":52},"end":{"line":563,"column":80}}]},"48":{"line":569,"type":"if","locations":[{"start":{"line":569,"column":2},"end":{"line":569,"column":2}},{"start":{"line":569,"column":2},"end":{"line":569,"column":2}}]},"49":{"line":779,"type":"cond-expr","locations":[{"start":{"line":779,"column":56},"end":{"line":779,"column":61}},{"start":{"line":779,"column":64},"end":{"line":781,"column":5}}]}},"code":["'use strict';","","var _lodash = require('lodash');","","var _lodash2 = _interopRequireDefault(_lodash);","","var _inherits = require('inherits');","","var _inherits2 = _interopRequireDefault(_inherits);","","var _events = require('./events');","","var _events2 = _interopRequireDefault(_events);","","var _promise = require('./promise');","","var _promise2 = _interopRequireDefault(_promise);","","var _model = require('./model');","","var _model2 = _interopRequireDefault(_model);","","var _extend = require('../extend');","","var _extend2 = _interopRequireDefault(_extend);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","// All components that need to be referenced in this scope.","// Base Collection","// ---------------","","// All exernal dependencies required in this scope.","var _Array$prototype = Array.prototype,","    splice = _Array$prototype.splice,","    slice = _Array$prototype.slice;","","/**"," * @class CollectionBase"," * @extends Events"," * @inheritdoc"," */","","function CollectionBase(models, options) {","  if (options) _lodash2.default.extend(this, _lodash2.default.pick(options, collectionProps));","  this._reset();","  this.initialize.apply(this, arguments);","  if (!_lodash2.default.isFunction(this.model)) {","    throw new Error('A valid `model` constructor must be defined for all collections.');","  }","  if (models) this.reset(models, _lodash2.default.extend({ silent: true }, options));","}","","/**"," * @method CollectionBase#on"," * @example"," *"," * const ships = new bookshelf.Collection;"," * ships.on('fetched', function(collection, response) {"," *   // Do something after the data has been fetched from the database"," * })"," *"," * @see Events#on"," */","","/**"," * @method CollectionBase#off"," * @example"," *"," * ships.off('fetched') // Remove the 'fetched' event listener"," *"," * @see Events#off"," */","","/**"," * @method CollectionBase#trigger"," * @example"," *"," * ships.trigger('fetched')"," *"," * @see Events#trigger"," */","(0, _inherits2.default)(CollectionBase, _events2.default);","","// List of attributes attached directly from the constructor's options object.","//","// RE: 'relatedData'","// It's okay for two `Collection`s to share a `Relation` instance.","// `relatedData` does not mutate itself after declaration. This is only","// here because `clone` needs to duplicate this property. It should not","// be documented as a valid argument for consumer code.","//","// RE: 'attach', 'detach', 'updatePivot', 'withPivot', '_processPivot', '_processPlainPivot', '_processModelPivot'","// It's okay to whitelist also given method references to be copied when cloning","// a collection. These methods are present only when `relatedData` is present and","// its `type` is 'belongsToMany'. So it is safe to put them in the list and use them","// without any additional verification.","// These should not be documented as a valid arguments for consumer code.","var collectionProps = ['model', 'comparator', 'relatedData',","// `belongsToMany` pivotal collection properties","'attach', 'detach', 'updatePivot', 'withPivot', '_processPivot', '_processPlainPivot', '_processModelPivot'];","","// Copied over from Backbone.","var setOptions = { add: true, remove: true, merge: true };","var addOptions = { add: true, remove: false };","","/**"," * @method CollectionBase#initialize"," * @description"," * Custom initialization function."," * @see Collection"," */","CollectionBase.prototype.initialize = _lodash.noop;","","/**"," * @method"," * @private"," * @description"," * The `tableName` on the associated Model, used in relation building."," * @returns {string} The {@link Model#tableName tableName} of the associated model."," */","CollectionBase.prototype.tableName = function () {","  return _lodash2.default.result(this.model.prototype, 'tableName');","};","","/**"," * @method"," * @private"," * @description"," * The `idAttribute` on the associated Model, used in relation building."," * @returns {string} The {@link Model#idAttribute idAttribute} of the associated model."," */","CollectionBase.prototype.idAttribute = function () {","  return this.model.prototype.idAttribute;","};","","CollectionBase.prototype.toString = function () {","  return '[Object Collection]';","};","","/**"," * @method"," * @description"," *"," * Return a raw array of the collection's {@link Model#attributes"," * attributes} for JSON stringification. If the {@link Model models} have any"," * relations defined, this will also call {@link Model#toJSON toJSON} on"," * each of the related objects, and include them on the object unless"," * `{shallow: true}` is passed as an option."," *"," * `serialize` is called internally by {@link Collection#toJSON toJSON}."," * Override this function if you want to customize its output.","*"," * @param {Object=} options"," * @param {bool}    [options.shallow=false]   Exclude relations."," * @param {bool}    [options.omitPivot=false] Exclude pivot values."," * @param {bool}    [options.omitNew=false]   Exclude models that return true for isNew."," * @returns {Object} Serialized model as a plain object."," */","CollectionBase.prototype.serialize = function (options) {","  return (0, _lodash.invokeMap)(this.models, 'toJSON', options).filter((0, _lodash.negate)(_lodash.isNull));","};","","/**"," * @method"," * @description"," *"," * Called automatically by {@link"," * https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#toJSON()_behavior"," * `JSON.stringify`}. To customize serialization, override {@link"," * Collection#serialize serialize}."," *"," * @param {options} Options passed to {@link Collection#serialize}."," */","CollectionBase.prototype.toJSON = function (options) {","  return this.serialize(options);","};","","/**"," * @method"," * @description"," *"," * The set method performs a \"smart\" update of the collection with the passed"," * model or list of models. If a model in the list isn't yet in the"," * collection it will be added; if the model is already in the collection"," * its attributes will be merged; and if the collection contains any models"," * that aren't present in the list, they'll be removed. If you'd like to"," * customize the behavior, you can disable it with options: `{add: false}`,"," * `{remove: false}`, or `{merge: false}`."," *"," * @example"," *"," * var vanHalen = new bookshelf.Collection([eddie, alex, stone, roth]);"," * vanHalen.set([eddie, alex, stone, hagar]);"," *"," * @param {Object[]|Model[]|Object|Model} models One or more models or raw"," * attribute objects."," * @param {Object=} options See description."," * @returns {Collection} Self, this method is chainable."," */","CollectionBase.prototype.set = function (models, options) {","  options = _lodash2.default.defaults({}, options, setOptions);","  if (!_lodash2.default.isArray(models)) models = models ? [models] : [];","  if (options.parse) models = this.parse(models, options);","  var i = void 0,","      l = void 0,","      id = void 0,","      model = void 0,","      attrs = void 0;","  var at = options.at;","  var targetModel = this.model;","  var toAdd = [];","  var toRemove = [];","  var modelMap = {};","  var _options = options,","      add = _options.add,","      merge = _options.merge,","      remove = _options.remove;","","  var order = add && remove ? [] : false;","","  // Turn bare objects into model references, and prevent invalid models","  // from being added.","  for (i = 0, l = models.length; i < l; i++) {","    attrs = models[i];","    if (attrs instanceof _model2.default) {","      id = model = attrs;","    } else {","      id = attrs[targetModel.prototype.idAttribute];","    }","","    // If a duplicate is found, prevent it from being added and","    // optionally merge it into the existing model.","    var existing = this.get(id);","    if (existing) {","      if (remove) {","        modelMap[existing.cid] = true;","      }","      if (merge) {","        attrs = attrs === model ? model.attributes : attrs;","        if (options.parse) attrs = existing.parse(attrs, options);","        existing.set(attrs, options);","      }","","      // This is a new model, push it to the `toAdd` list.","    } else if (add) {","      if (!(model = this._prepareModel(attrs, options))) continue;","      toAdd.push(model);","      this._byId[model.cid] = model;","      if (model.id != null) this._byId[model.id] = model;","    }","    if (order) order.push(existing || model);","  }","","  // Remove nonexistent models if appropriate.","  if (remove) {","    for (i = 0, l = this.length; i < l; ++i) {","      if (!modelMap[(model = this.models[i]).cid]) toRemove.push(model);","    }","    if (toRemove.length) this.remove(toRemove, options);","  }","","  // See if sorting is needed, update `length` and splice in new models.","  if (toAdd.length || order && order.length) {","    this.length += toAdd.length;","    if (at != null) {","      splice.apply(this.models, [at, 0].concat(toAdd));","    } else {","      if (order) {","        this.models.length = 0;","      } else {","        order = toAdd;","      }","      for (i = 0, l = order.length; i < l; ++i) {","        this.models.push(order[i]);","      }","    }","  }","","  if (options.silent) return this;","","  // Trigger `add` events.","  for (i = 0, l = toAdd.length; i < l; i++) {","    (model = toAdd[i]).trigger('add', model, this, options);","  }","  return this;","};","","/**"," * @method"," * @private"," * @description"," * Prepare a model or hash of attributes to be added to this collection."," */","CollectionBase.prototype._prepareModel = function (attrs, options) {","  if (attrs instanceof _model2.default) return attrs;","  return new this.model(attrs, options);","};","","/**"," * @method"," * @private"," * @description"," * Run \"Promise.map\" over the models"," */","CollectionBase.prototype.mapThen = function (iterator, context) {","  return _promise2.default.bind(context).thenReturn(this.models).map(iterator);","};","","/**"," * @method"," * @description"," * Shortcut for calling `Promise.all` around a {@link Collection#invoke}, this"," * will delegate to the collection's `invoke` method, resolving the promise with"," * an array of responses all async (and sync) behavior has settled. Useful for"," * bulk saving or deleting models:"," *"," *     collection.invokeThen('save', null, options).then(function() {"," *       // ... all models in the collection have been saved"," *     });"," *"," *     collection.invokeThen('destroy', options).then(function() {"," *       // ... all models in the collection have been destroyed"," *     });"," *"," * @param {string} method The {@link Model model} method to invoke."," * @param {...mixed} arguments Arguments to `method`."," * @returns {Promise<mixed[]>}"," *   Promise resolving to array of results from invocation."," */","CollectionBase.prototype.invokeThen = function () {","  return _promise2.default.all(this.invokeMap.apply(this, arguments));","};","","/**"," * @method"," * @description"," * Run \"reduce\" over the models in the collection."," * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce | MDN `Array.prototype.reduce` reference.}"," * @param {Function} iterator"," * @param {mixed} initialValue"," * @param {Object} context Bound to `this` in the `iterator` callback."," * @returns {Promise<mixed[]>}"," *   Promise resolving to array of results from invocation."," *"," */","CollectionBase.prototype.reduceThen = function (iterator, initialValue, context) {","  return _promise2.default.bind(context).thenReturn(this.models).reduce(iterator, initialValue).bind();","};","","CollectionBase.prototype.fetch = function () {","  return _promise2.default.rejected('The fetch method has not been implemented');","};","","/**"," * @method"," * @description"," *"," * Add a {@link Model model} (or an array of models) to the collection, You may"," * also pass raw attributes objects, and have them be vivified as instances of"," * the model. Pass `{at: index}` to splice the model into the collection at the"," * specified `index`. If you're adding models to the collection that are already"," * in the collection, they'll be ignored, unless you pass `{merge: true}`, in"," * which case their {@link Model#attributes attributes} will be merged into the"," * corresponding models."," *"," * *Note that adding the same model (a model with the same id) to a collection"," * more than once is a no-op.*"," *"," * @example"," *"," * const ships = new bookshelf.Collection;"," *"," * ships.add(["," *   {name: \"Flying Dutchman\"},"," *   {name: \"Black Pearl\"}"," * ]);"," *"," * @param {Object[]|Model[]|Object|Model} models One or more models or raw"," * attribute objects."," * @param {Object=} options See description."," * @returns {Collection} Self, this method is chainable."," */","CollectionBase.prototype.add = function (models, options) {","  return this.set(models, _lodash2.default.extend({ merge: false }, options, addOptions));","};","","/**"," * @method"," * @description"," *"," * Remove a {@link Model model} (or an array of models) from the collection,"," * but does not remove the model from the database, use the model's {@link"," * Model#destroy destroy} method for this."," *"," * @param {Model|Model[]} models The model, or models, to be removed."," * @param {Object} options"," * @returns {Model|Model[]} The same value passed as `models` argument."," */","CollectionBase.prototype.remove = function (models, options) {","  var singular = !_lodash2.default.isArray(models);","  models = singular ? [models] : _lodash2.default.clone(models);","  options = options || {};","  for (var i = 0; i < models.length; i++) {","    var model = models[i] = this.get(models[i]);","    if (!model) continue;","    delete this._byId[model.id];","    delete this._byId[model.cid];","    var index = this.indexOf(model);","    this.models.splice(index, 1);","    this.length = this.length - 1;","    if (!options.silent) {","      options.index = index;","      model.trigger('remove', model, this, options);","    }","  }","  return singular ? models[0] : models;","};","","/**"," * @method"," * @description"," *"," * Adding and removing models one at a time is all well and good, but sometimes"," * you have so many models to change that you'd rather just update the"," * collection in bulk. Use `reset` to replace a collection with a new list of"," * models (or attribute hashes). Calling `collection.reset()` without passing"," * any models as arguments will empty the entire collection."," *"," * @param {Object[]|Model[]|Object|Model} models One or more models or raw"," * attribute objects."," * @param {Object} options See {@link Collection#add add}."," * @returns {Model[]} Array of models."," */","CollectionBase.prototype.reset = function (models, options) {","  options = options || {};","  options.previousModels = this.models;","  this._reset();","  models = this.add(models, _lodash2.default.extend({ silent: true }, options));","  if (!options.silent) this.trigger('reset', this, options);","  return models;","};","","/**"," * @method"," * @description"," * Add a model to the end of the collection."," * @param {Object[]|Model[]|Object|Model} model One or more models or raw"," * attribute objects."," * @returns {Collection} Self, this method is chainable."," */","CollectionBase.prototype.push = function (model, options) {","  return this.add(model, _lodash2.default.extend({ at: this.length }, options));","};","","/**"," * @method"," * @description"," * Remove a model from the end of the collection."," */","CollectionBase.prototype.pop = function (options) {","  var model = this.at(this.length - 1);","  this.remove(model, options);","  return model;","};","","/**"," * @method"," * @description"," * Add a model to the beginning of the collection."," */","CollectionBase.prototype.unshift = function (model, options) {","  return this.add(model, _lodash2.default.extend({ at: 0 }, options));","};","","/**"," * @method"," * @description"," * Remove a model from the beginning of the collection."," */","CollectionBase.prototype.shift = function (options) {","  var model = this.at(0);","  this.remove(model, options);","  return model;","};","","/**"," * @method"," * @description"," * Slice out a sub-array of models from the collection."," */","CollectionBase.prototype.slice = function () {","  return slice.apply(this.models, arguments);","};","","/**"," * @method"," * @description"," *"," * Get a model from a collection, specified by an {@link Model#id id}, a {@link"," * Model#cid cid}, or by passing in a {@link Model model}."," *"," * @example"," *"," * const book = library.get(110);"," *"," * @returns {Model} The model, or `undefined` if it is not in the collection."," */","CollectionBase.prototype.get = function (obj) {","  if (obj == null) return void 0;","  return this._byId[obj.id] || this._byId[obj.cid] || this._byId[obj];","};","","/**"," * @method"," * @description"," * Get a model from a collection, specified by index. Useful if your collection"," * is sorted, and if your collection isn't sorted, `at` will still retrieve"," * models in insertion order."," */","CollectionBase.prototype.at = function (index) {","  return this.models[index];","};","","/**"," * @method"," * @description"," * Return models with matching attributes. Useful for simple cases of `filter`."," * @returns {Model[]} Array of matching models."," */","CollectionBase.prototype.where = function (attrs, first) {","  if (_lodash2.default.isEmpty(attrs)) return first ? void 0 : [];","  return this[first ? 'find' : 'filter'](function (model) {","    for (var key in attrs) {","      if (attrs[key] !== model.get(key)) return false;","    }","    return true;","  });","};","","/**"," * @method"," * @description"," * Return the first model with matching attributes. Useful for simple cases of"," * `find`."," * @returns {Model} The first matching model."," */","CollectionBase.prototype.findWhere = function (attrs) {","  return this.where(attrs, true);","};","","/**"," * @method"," * @private"," * @description"," * Force the collection to re-sort itself, based on a comporator defined on the model."," */","CollectionBase.prototype.sort = function (options) {","  if (!this.comparator) throw new Error('Cannot sort a set without a comparator');","  options = options || {};","","  // Run sort based on type of `comparator`.","  if (_lodash2.default.isString(this.comparator) || this.comparator.length === 1) {","    this.models = this.sortBy(this.comparator, this);","  } else {","    this.models.sort(_lodash2.default.bind(this.comparator, this));","  }","","  if (!options.silent) this.trigger('sort', this, options);","  return this;","};","","/**"," * @method"," * @description"," * Pluck an attribute from each model in the collection."," * @returns {mixed[]} An array of attribute values."," */","CollectionBase.prototype.pluck = function (attr) {","  return this.invokeMap('get', attr);","};","","/**"," * @method"," * @description"," * The `parse` method is called whenever a collection's data is returned in a"," * {@link Collection#fetch fetch} call. The function is passed the raw"," * database `response` array, and should return an array to be set on the"," * collection. The default implementation is a no-op, simply passing through"," * the JSON response."," *"," * @param {Object[]} resp Raw database response array."," */","CollectionBase.prototype.parse = function (resp) {","  return resp;","};","","/**"," * @method"," * @description"," * Create a new collection with an identical list of models as this one."," */","CollectionBase.prototype.clone = function () {","  return new this.constructor(this.models, _lodash2.default.pick(this, collectionProps));","};","","/**"," * @method"," * @private"," * @description"," * Reset all internal state. Called when the collection is first initialized or reset."," */","CollectionBase.prototype._reset = function () {","  this.length = 0;","  this.models = [];","  this._byId = Object.create(null);","};","","/**"," * @method CollectionBase#forEach"," * @see http://lodash.com/docs/#forEach"," */","/**"," * @method CollectionBase#each"," * @see http://lodash.com/docs/#each"," */","/**"," * @method CollectionBase#map"," * @see http://lodash.com/docs/#map"," */","/**"," * @method CollectionBase#reduce"," * @see http://lodash.com/docs/#reduce"," */","/**"," * @method CollectionBase#reduceRight"," * @see http://lodash.com/docs/#reduceRight"," */","/**"," * @method CollectionBase#find"," * @see http://lodash.com/docs/#find"," */","/**"," * @method CollectionBase#filter"," * @see http://lodash.com/docs/#filter"," */","/**"," * @method CollectionBase#reject"," * @see http://lodash.com/docs/#reject"," */","/**"," * @method CollectionBase#every"," * @see http://lodash.com/docs/#every"," */","/**"," * @method CollectionBase#some"," * @see http://lodash.com/docs/#some"," */","/**"," * @method CollectionBase#includes"," * @see http://lodash.com/docs/#includes"," */","/**"," * @method CollectionBase#invokeMap"," * @see http://lodash.com/docs/#invokeMap"," */","/**"," * @method CollectionBase#max"," * @see http://lodash.com/docs/#max"," */","/**"," * @method CollectionBase#maxBy"," * @see http://lodash.com/docs/#maxBy"," */","/**"," * @method CollectionBase#min"," * @see http://lodash.com/docs/#min"," */","/**"," * @method CollectionBase#minBy"," * @see http://lodash.com/docs/#minBy"," */","/**"," * @method CollectionBase#toArray"," * @see http://lodash.com/docs/#toArray"," */","/**"," * @method CollectionBase#size"," * @see http://lodash.com/docs/#size"," */","/**"," * @method CollectionBase#first"," * @see http://lodash.com/docs/#first"," */","/**"," * @method CollectionBase#head"," * @see http://lodash.com/docs/#head"," */","/**"," * @method CollectionBase#take"," * @see http://lodash.com/docs/#take"," */","/**"," * @method CollectionBase#initial"," * @see http://lodash.com/docs/#initial"," */","/**"," * @method CollectionBase#tail"," * @see http://lodash.com/docs/#tail"," */","/**"," * @method CollectionBase#drop"," * @see http://lodash.com/docs/#drop"," */","/**"," * @method CollectionBase#last"," * @see http://lodash.com/docs/#last"," */","/**"," * @method CollectionBase#without"," * @see http://lodash.com/docs/#without"," */","/**"," * @method CollectionBase#difference"," * @see http://lodash.com/docs/#difference"," */","/**"," * @method CollectionBase#indexOf"," * @see http://lodash.com/docs/#indexOf"," */","/**"," * @method CollectionBase#shuffle"," * @see http://lodash.com/docs/#shuffle"," */","/**"," * @method CollectionBase#lastIndexOf"," * @see http://lodash.com/docs/#lastIndexOf"," */","/**"," * @method CollectionBase#isEmpty"," * @see http://lodash.com/docs/#isEmpty"," */","/**"," * @method CollectionBase#chain"," * @see http://lodash.com/docs/#chain"," */","// Lodash methods that we want to implement on the Collection.","// 90% of the core usefulness of Backbone Collections is actually implemented","// right here:","var methods = ['forEach', 'each', 'map', 'reduce', 'reduceRight', 'find', 'filter', 'every', 'some', 'includes', 'invokeMap', 'max', 'min', 'maxBy', 'minBy', 'toArray', 'size', 'first', 'head', 'take', 'initial', 'tail', 'drop', 'last', 'without', 'difference', 'indexOf', 'shuffle', 'lastIndexOf', 'isEmpty', 'chain'];","","// Mix in each Lodash method as a proxy to `Collection#models`.","_lodash2.default.each(methods, function (method) {","  CollectionBase.prototype[method] = function () {","    return _lodash2.default[method].apply(_lodash2.default, [this.models].concat(Array.prototype.slice.call(arguments)));","  };","});","","/**"," * @method CollectionBase#groupBy"," * @see http://lodash.com/docs/#groupBy"," */","// Underscore methods that we want to implement on the Collection.","/**"," * @method CollectionBase#countBy"," * @see http://lodash.com/docs/#countBy"," */","// Underscore methods that we want to implement on the Collection.","/**"," * @method CollectionBase#sortBy"," * @see http://lodash.com/docs/#sortBy"," */","// Lodash methods that take a property name as an argument.","var attributeMethods = ['groupBy', 'countBy', 'sortBy'];","","// Use attributes instead of properties.","_lodash2.default.each(attributeMethods, function (method) {","  CollectionBase.prototype[method] = function (value, context) {","    var iterator = _lodash2.default.isFunction(value) ? value : function (model) {","      return model.get(value);","    };","    return _lodash2.default[method](this.models, _lodash2.default.bind(iterator, context));","  };","});","","/**"," * @method Collection.extend"," * @description"," *"," * To create a {@link Collection} class of your own, extend"," * `Bookshelf.Collection`."," *"," * @param {Object=} prototypeProperties"," *   Instance methods and properties to be attached to instances of the new"," *   class."," * @param {Object=} classProperties"," *   Class (ie. static) functions and properties to be attached to the"," *   constructor of the new class."," * @returns {Function} Constructor for new `Collection` subclass."," */","CollectionBase.extend = _extend2.default;","","/*"," * NOTE: For some reason `export` is failing in the version of Babel I'm"," * currently using. At some stage it should be corrected to:"," *"," *     export default CollectionBase;"," */","module.exports = CollectionBase;"],"l":{"3":1,"5":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":1,"21":1,"23":1,"25":1,"27":6,"34":1,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"51":0,"83":1,"99":1,"104":1,"105":1,"113":1,"122":1,"123":0,"133":1,"134":0,"137":1,"138":0,"160":1,"161":0,"175":1,"176":0,"201":1,"202":0,"203":0,"204":0,"205":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"220":0,"224":0,"225":0,"226":0,"227":0,"229":0,"234":0,"235":0,"236":0,"237":0,"239":0,"240":0,"241":0,"242":0,"246":0,"247":0,"248":0,"249":0,"250":0,"252":0,"256":0,"257":0,"258":0,"260":0,"264":0,"265":0,"266":0,"267":0,"269":0,"270":0,"272":0,"274":0,"275":0,"280":0,"283":0,"284":0,"286":0,"295":1,"296":0,"297":0,"306":1,"307":0,"331":1,"332":0,"347":1,"348":0,"351":1,"352":0,"384":1,"385":0,"400":1,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"417":0,"435":1,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"452":1,"453":0,"461":1,"462":0,"463":0,"464":0,"472":1,"473":0,"481":1,"482":0,"483":0,"484":0,"492":1,"493":0,"509":1,"510":0,"511":0,"521":1,"522":0,"531":1,"532":0,"533":0,"534":0,"535":0,"537":0,"548":1,"549":0,"558":1,"559":0,"560":0,"563":0,"564":0,"566":0,"569":0,"570":0,"579":1,"580":0,"594":1,"595":0,"603":1,"604":0,"613":1,"614":0,"615":0,"616":0,"750":1,"753":1,"754":31,"755":0,"774":1,"777":1,"778":3,"779":0,"780":0,"782":0,"801":1,"809":1}},"/home/travis/build/npmtest/node-npmtest-bookshelf/node_modules/bookshelf/lib/relation.js":{"path":"/home/travis/build/npmtest/node-npmtest-bookshelf/node_modules/bookshelf/lib/relation.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":6,"17":1,"18":1,"19":0,"20":1,"21":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":1,"234":1,"235":1,"236":0,"237":0,"238":0,"239":1,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0},"b":{"1":[2,4],"2":[6,6],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0,0,0],"13":[0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0,0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0,0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0,0],"123":[0,0],"124":[0,0]},"f":{"1":6,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":33,"loc":{"start":{"line":33,"column":0},"end":{"line":33,"column":37}}},"2":{"name":"removePivotPrefix","line":38,"loc":{"start":{"line":38,"column":24},"end":{"line":38,"column":56}}},"3":{"name":"hasPivotPrefix","line":41,"loc":{"start":{"line":41,"column":21},"end":{"line":41,"column":50}}},"4":{"name":"init","line":50,"loc":{"start":{"line":50,"column":8},"end":{"line":50,"column":30}}},"5":{"name":"through","line":81,"loc":{"start":{"line":81,"column":11},"end":{"line":81,"column":53}}},"6":{"name":"key","line":110,"loc":{"start":{"line":110,"column":7},"end":{"line":110,"column":29}}},"7":{"name":"attribute","line":151,"loc":{"start":{"line":151,"column":13},"end":{"line":151,"column":52}}},"8":{"name":"selectConstraints","line":240,"loc":{"start":{"line":240,"column":21},"end":{"line":240,"column":63}}},"9":{"name":"joinColumns","line":271,"loc":{"start":{"line":271,"column":15},"end":{"line":271,"column":42}}},"10":{"name":"(anonymous_10)","line":278,"loc":{"start":{"line":278,"column":47},"end":{"line":278,"column":62}}},"11":{"name":"joinClauses","line":284,"loc":{"start":{"line":284,"column":15},"end":{"line":284,"column":42}}},"12":{"name":"whereClauses","line":304,"loc":{"start":{"line":304,"column":16},"end":{"line":304,"column":54}}},"13":{"name":"eagerKeys","line":333,"loc":{"start":{"line":333,"column":13},"end":{"line":333,"column":42}}},"14":{"name":"joinTable","line":339,"loc":{"start":{"line":339,"column":13},"end":{"line":339,"column":34}}},"15":{"name":"relatedInstance","line":346,"loc":{"start":{"line":346,"column":19},"end":{"line":346,"column":52}}},"16":{"name":"eagerPair","line":370,"loc":{"start":{"line":370,"column":13},"end":{"line":370,"column":69}}},"17":{"name":"(anonymous_17)","line":375,"loc":{"start":{"line":375,"column":59},"end":{"line":375,"column":72}}},"18":{"name":"(anonymous_18)","line":384,"loc":{"start":{"line":384,"column":52},"end":{"line":384,"column":65}}},"19":{"name":"(anonymous_19)","line":402,"loc":{"start":{"line":402,"column":40},"end":{"line":402,"column":57}}},"20":{"name":"(anonymous_20)","line":418,"loc":{"start":{"line":418,"column":16},"end":{"line":418,"column":33}}},"21":{"name":"parsePivot","line":426,"loc":{"start":{"line":426,"column":14},"end":{"line":426,"column":42}}},"22":{"name":"(anonymous_22)","line":429,"loc":{"start":{"line":429,"column":40},"end":{"line":429,"column":57}}},"23":{"name":"(anonymous_23)","line":432,"loc":{"start":{"line":432,"column":62},"end":{"line":432,"column":89}}},"24":{"name":"isThrough","line":457,"loc":{"start":{"line":457,"column":13},"end":{"line":457,"column":34}}},"25":{"name":"isJoined","line":460,"loc":{"start":{"line":460,"column":12},"end":{"line":460,"column":32}}},"26":{"name":"isMorph","line":463,"loc":{"start":{"line":463,"column":11},"end":{"line":463,"column":30}}},"27":{"name":"isSingle","line":466,"loc":{"start":{"line":466,"column":12},"end":{"line":466,"column":32}}},"28":{"name":"isInverse","line":470,"loc":{"start":{"line":470,"column":13},"end":{"line":470,"column":34}}},"29":{"name":"isForeignKeyTargeted","line":473,"loc":{"start":{"line":473,"column":24},"end":{"line":473,"column":56}}},"30":{"name":"isThroughForeignKeyTargeted","line":476,"loc":{"start":{"line":476,"column":31},"end":{"line":476,"column":70}}},"31":{"name":"isOtherKeyTargeted","line":479,"loc":{"start":{"line":479,"column":22},"end":{"line":479,"column":52}}},"32":{"name":"hasParentAttributes","line":482,"loc":{"start":{"line":482,"column":23},"end":{"line":482,"column":54}}},"33":{"name":"withPivot","line":488,"loc":{"start":{"line":488,"column":13},"end":{"line":488,"column":41}}},"34":{"name":"(anonymous_34)","line":498,"loc":{"start":{"line":498,"column":19},"end":{"line":498,"column":31}}},"35":{"name":"(anonymous_35)","line":500,"loc":{"start":{"line":500,"column":9},"end":{"line":500,"column":24}}},"36":{"name":"attach","line":543,"loc":{"start":{"line":543,"column":10},"end":{"line":543,"column":40}}},"37":{"name":"(anonymous_37)","line":546,"loc":{"start":{"line":546,"column":33},"end":{"line":546,"column":45}}},"38":{"name":"(anonymous_38)","line":548,"loc":{"start":{"line":548,"column":12},"end":{"line":548,"column":24}}},"39":{"name":"(anonymous_39)","line":550,"loc":{"start":{"line":550,"column":12},"end":{"line":550,"column":32}}},"40":{"name":"detach","line":576,"loc":{"start":{"line":576,"column":10},"end":{"line":576,"column":40}}},"41":{"name":"(anonymous_41)","line":579,"loc":{"start":{"line":579,"column":33},"end":{"line":579,"column":45}}},"42":{"name":"(anonymous_42)","line":581,"loc":{"start":{"line":581,"column":12},"end":{"line":581,"column":24}}},"43":{"name":"(anonymous_43)","line":583,"loc":{"start":{"line":583,"column":12},"end":{"line":583,"column":32}}},"44":{"name":"updatePivot","line":613,"loc":{"start":{"line":613,"column":15},"end":{"line":613,"column":57}}},"45":{"name":"withPivot","line":634,"loc":{"start":{"line":634,"column":13},"end":{"line":634,"column":41}}},"46":{"name":"(anonymous_46)","line":641,"loc":{"start":{"line":641,"column":37},"end":{"line":641,"column":69}}},"47":{"name":"(anonymous_47)","line":650,"loc":{"start":{"line":650,"column":31},"end":{"line":650,"column":45}}},"48":{"name":"(anonymous_48)","line":660,"loc":{"start":{"line":660,"column":42},"end":{"line":660,"column":66}}},"49":{"name":"(anonymous_49)","line":693,"loc":{"start":{"line":693,"column":47},"end":{"line":693,"column":86}}},"50":{"name":"(anonymous_50)","line":710,"loc":{"start":{"line":710,"column":44},"end":{"line":710,"column":56}}},"51":{"name":"(anonymous_51)","line":719,"loc":{"start":{"line":719,"column":51},"end":{"line":719,"column":73}}},"52":{"name":"(anonymous_52)","line":727,"loc":{"start":{"line":727,"column":66},"end":{"line":727,"column":78}}},"53":{"name":"(anonymous_53)","line":728,"loc":{"start":{"line":728,"column":39},"end":{"line":728,"column":51}}},"54":{"name":"(anonymous_54)","line":737,"loc":{"start":{"line":737,"column":47},"end":{"line":737,"column":91}}},"55":{"name":"(anonymous_55)","line":751,"loc":{"start":{"line":751,"column":12},"end":{"line":751,"column":32}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":32}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":47}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":40}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":55}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":49}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":37}},"9":{"start":{"line":21,"column":0},"end":{"line":21,"column":45}},"10":{"start":{"line":23,"column":0},"end":{"line":23,"column":43}},"11":{"start":{"line":25,"column":0},"end":{"line":25,"column":51}},"12":{"start":{"line":27,"column":0},"end":{"line":27,"column":41}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":49}},"14":{"start":{"line":31,"column":0},"end":{"line":31,"column":40}},"15":{"start":{"line":33,"column":0},"end":{"line":33,"column":95}},"16":{"start":{"line":33,"column":39},"end":{"line":33,"column":93}},"17":{"start":{"line":35,"column":0},"end":{"line":35,"column":32}},"18":{"start":{"line":38,"column":0},"end":{"line":40,"column":2}},"19":{"start":{"line":39,"column":2},"end":{"line":39,"column":51}},"20":{"start":{"line":41,"column":0},"end":{"line":43,"column":2}},"21":{"start":{"line":42,"column":2},"end":{"line":42,"column":67}},"22":{"start":{"line":45,"column":0},"end":{"line":494,"column":3}},"23":{"start":{"line":51,"column":4},"end":{"line":51,"column":30}},"24":{"start":{"line":52,"column":4},"end":{"line":52,"column":72}},"25":{"start":{"line":53,"column":4},"end":{"line":53,"column":73}},"26":{"start":{"line":57,"column":4},"end":{"line":57,"column":85}},"27":{"start":{"line":59,"column":4},"end":{"line":64,"column":5}},"28":{"start":{"line":62,"column":6},"end":{"line":62,"column":115}},"29":{"start":{"line":63,"column":6},"end":{"line":63,"column":89}},"30":{"start":{"line":66,"column":4},"end":{"line":66,"column":73}},"31":{"start":{"line":67,"column":4},"end":{"line":67,"column":47}},"32":{"start":{"line":69,"column":4},"end":{"line":69,"column":59}},"33":{"start":{"line":70,"column":4},"end":{"line":70,"column":30}},"34":{"start":{"line":72,"column":4},"end":{"line":74,"column":5}},"35":{"start":{"line":73,"column":6},"end":{"line":73,"column":52}},"36":{"start":{"line":76,"column":4},"end":{"line":76,"column":18}},"37":{"start":{"line":82,"column":4},"end":{"line":82,"column":25}},"38":{"start":{"line":83,"column":4},"end":{"line":85,"column":5}},"39":{"start":{"line":84,"column":6},"end":{"line":84,"column":111}},"40":{"start":{"line":87,"column":4},"end":{"line":87,"column":32}},"41":{"start":{"line":88,"column":4},"end":{"line":88,"column":83}},"42":{"start":{"line":90,"column":4},"end":{"line":90,"column":43}},"43":{"start":{"line":91,"column":4},"end":{"line":91,"column":50}},"44":{"start":{"line":93,"column":4},"end":{"line":93,"column":65}},"45":{"start":{"line":94,"column":4},"end":{"line":94,"column":65}},"46":{"start":{"line":95,"column":4},"end":{"line":95,"column":75}},"47":{"start":{"line":96,"column":4},"end":{"line":96,"column":47}},"48":{"start":{"line":99,"column":4},"end":{"line":103,"column":5}},"49":{"start":{"line":100,"column":6},"end":{"line":100,"column":47}},"50":{"start":{"line":101,"column":11},"end":{"line":103,"column":5}},"51":{"start":{"line":102,"column":6},"end":{"line":102,"column":38}},"52":{"start":{"line":105,"column":4},"end":{"line":105,"column":18}},"53":{"start":{"line":111,"column":4},"end":{"line":111,"column":44}},"54":{"start":{"line":111,"column":23},"end":{"line":111,"column":44}},"55":{"start":{"line":112,"column":4},"end":{"line":145,"column":5}},"56":{"start":{"line":114,"column":8},"end":{"line":114,"column":90}},"57":{"start":{"line":115,"column":8},"end":{"line":115,"column":14}},"58":{"start":{"line":117,"column":8},"end":{"line":117,"column":87}},"59":{"start":{"line":118,"column":8},"end":{"line":118,"column":14}},"60":{"start":{"line":120,"column":8},"end":{"line":137,"column":9}},"61":{"start":{"line":123,"column":14},"end":{"line":123,"column":117}},"62":{"start":{"line":124,"column":14},"end":{"line":124,"column":40}},"63":{"start":{"line":125,"column":14},"end":{"line":125,"column":20}},"64":{"start":{"line":128,"column":12},"end":{"line":128,"column":94}},"65":{"start":{"line":129,"column":12},"end":{"line":129,"column":18}},"66":{"start":{"line":131,"column":12},"end":{"line":134,"column":13}},"67":{"start":{"line":132,"column":14},"end":{"line":132,"column":117}},"68":{"start":{"line":133,"column":14},"end":{"line":133,"column":20}},"69":{"start":{"line":135,"column":12},"end":{"line":135,"column":94}},"70":{"start":{"line":136,"column":12},"end":{"line":136,"column":18}},"71":{"start":{"line":138,"column":8},"end":{"line":138,"column":14}},"72":{"start":{"line":140,"column":8},"end":{"line":140,"column":113}},"73":{"start":{"line":141,"column":8},"end":{"line":141,"column":14}},"74":{"start":{"line":143,"column":8},"end":{"line":143,"column":69}},"75":{"start":{"line":144,"column":8},"end":{"line":144,"column":14}},"76":{"start":{"line":146,"column":4},"end":{"line":146,"column":25}},"77":{"start":{"line":152,"column":4},"end":{"line":235,"column":5}},"78":{"start":{"line":154,"column":8},"end":{"line":169,"column":9}},"79":{"start":{"line":155,"column":10},"end":{"line":157,"column":11}},"80":{"start":{"line":156,"column":12},"end":{"line":156,"column":42}},"81":{"start":{"line":159,"column":10},"end":{"line":161,"column":11}},"82":{"start":{"line":160,"column":12},"end":{"line":160,"column":48}},"83":{"start":{"line":163,"column":10},"end":{"line":165,"column":11}},"84":{"start":{"line":164,"column":12},"end":{"line":164,"column":39}},"85":{"start":{"line":168,"column":10},"end":{"line":168,"column":40}},"86":{"start":{"line":171,"column":8},"end":{"line":173,"column":9}},"87":{"start":{"line":172,"column":10},"end":{"line":172,"column":39}},"88":{"start":{"line":175,"column":8},"end":{"line":175,"column":62}},"89":{"start":{"line":178,"column":8},"end":{"line":185,"column":9}},"90":{"start":{"line":179,"column":10},"end":{"line":181,"column":11}},"91":{"start":{"line":180,"column":12},"end":{"line":180,"column":39}},"92":{"start":{"line":184,"column":10},"end":{"line":184,"column":40}},"93":{"start":{"line":187,"column":8},"end":{"line":189,"column":9}},"94":{"start":{"line":188,"column":10},"end":{"line":188,"column":79}},"95":{"start":{"line":191,"column":8},"end":{"line":193,"column":9}},"96":{"start":{"line":192,"column":10},"end":{"line":192,"column":39}},"97":{"start":{"line":195,"column":8},"end":{"line":197,"column":9}},"98":{"start":{"line":196,"column":10},"end":{"line":196,"column":37}},"99":{"start":{"line":199,"column":8},"end":{"line":199,"column":38}},"100":{"start":{"line":202,"column":8},"end":{"line":204,"column":9}},"101":{"start":{"line":203,"column":10},"end":{"line":203,"column":46}},"102":{"start":{"line":206,"column":8},"end":{"line":208,"column":9}},"103":{"start":{"line":207,"column":10},"end":{"line":207,"column":40}},"104":{"start":{"line":210,"column":8},"end":{"line":210,"column":72}},"105":{"start":{"line":213,"column":8},"end":{"line":215,"column":9}},"106":{"start":{"line":214,"column":10},"end":{"line":214,"column":17}},"107":{"start":{"line":217,"column":8},"end":{"line":232,"column":9}},"108":{"start":{"line":218,"column":10},"end":{"line":220,"column":11}},"109":{"start":{"line":219,"column":12},"end":{"line":219,"column":71}},"110":{"start":{"line":222,"column":10},"end":{"line":224,"column":11}},"111":{"start":{"line":223,"column":12},"end":{"line":223,"column":106}},"112":{"start":{"line":226,"column":10},"end":{"line":228,"column":11}},"113":{"start":{"line":227,"column":12},"end":{"line":227,"column":62}},"114":{"start":{"line":231,"column":10},"end":{"line":231,"column":31}},"115":{"start":{"line":234,"column":8},"end":{"line":234,"column":105}},"116":{"start":{"line":241,"column":4},"end":{"line":241,"column":38}},"117":{"start":{"line":244,"column":4},"end":{"line":244,"column":48}},"118":{"start":{"line":244,"column":25},"end":{"line":244,"column":48}},"119":{"start":{"line":247,"column":4},"end":{"line":247,"column":62}},"120":{"start":{"line":247,"column":27},"end":{"line":247,"column":62}},"121":{"start":{"line":250,"column":4},"end":{"line":252,"column":5}},"122":{"start":{"line":251,"column":6},"end":{"line":251,"column":36}},"123":{"start":{"line":254,"column":4},"end":{"line":254,"column":90}},"124":{"start":{"line":256,"column":4},"end":{"line":258,"column":5}},"125":{"start":{"line":257,"column":6},"end":{"line":257,"column":47}},"126":{"start":{"line":260,"column":4},"end":{"line":260,"column":48}},"127":{"start":{"line":260,"column":25},"end":{"line":260,"column":48}},"128":{"start":{"line":264,"column":4},"end":{"line":264,"column":48}},"129":{"start":{"line":264,"column":34},"end":{"line":264,"column":48}},"130":{"start":{"line":267,"column":4},"end":{"line":267,"column":34}},"131":{"start":{"line":272,"column":4},"end":{"line":272,"column":21}},"132":{"start":{"line":273,"column":4},"end":{"line":273,"column":37}},"133":{"start":{"line":274,"column":4},"end":{"line":274,"column":64}},"134":{"start":{"line":274,"column":26},"end":{"line":274,"column":64}},"135":{"start":{"line":275,"column":4},"end":{"line":275,"column":41}},"136":{"start":{"line":276,"column":4},"end":{"line":276,"column":74}},"137":{"start":{"line":276,"column":39},"end":{"line":276,"column":74}},"138":{"start":{"line":277,"column":4},"end":{"line":277,"column":43}},"139":{"start":{"line":278,"column":4},"end":{"line":280,"column":8}},"140":{"start":{"line":279,"column":6},"end":{"line":279,"column":57}},"141":{"start":{"line":285,"column":4},"end":{"line":285,"column":37}},"142":{"start":{"line":287,"column":4},"end":{"line":299,"column":5}},"143":{"start":{"line":289,"column":6},"end":{"line":289,"column":96}},"144":{"start":{"line":291,"column":6},"end":{"line":291,"column":114}},"145":{"start":{"line":294,"column":6},"end":{"line":296,"column":7}},"146":{"start":{"line":295,"column":8},"end":{"line":295,"column":148}},"147":{"start":{"line":298,"column":6},"end":{"line":298,"column":135}},"148":{"start":{"line":305,"column":4},"end":{"line":305,"column":21}},"149":{"start":{"line":307,"column":4},"end":{"line":318,"column":5}},"150":{"start":{"line":308,"column":6},"end":{"line":308,"column":50}},"151":{"start":{"line":309,"column":6},"end":{"line":309,"column":78}},"152":{"start":{"line":311,"column":6},"end":{"line":311,"column":81}},"153":{"start":{"line":313,"column":6},"end":{"line":313,"column":39}},"154":{"start":{"line":315,"column":6},"end":{"line":315,"column":87}},"155":{"start":{"line":317,"column":6},"end":{"line":317,"column":49}},"156":{"start":{"line":320,"column":4},"end":{"line":320,"column":48}},"157":{"start":{"line":321,"column":4},"end":{"line":321,"column":66}},"158":{"start":{"line":322,"column":4},"end":{"line":322,"column":27}},"159":{"start":{"line":324,"column":4},"end":{"line":329,"column":5}},"160":{"start":{"line":325,"column":6},"end":{"line":325,"column":39}},"161":{"start":{"line":326,"column":6},"end":{"line":326,"column":38}},"162":{"start":{"line":327,"column":6},"end":{"line":327,"column":41}},"163":{"start":{"line":328,"column":6},"end":{"line":328,"column":44}},"164":{"start":{"line":334,"column":4},"end":{"line":334,"column":102}},"165":{"start":{"line":335,"column":4},"end":{"line":335,"column":67}},"166":{"start":{"line":340,"column":4},"end":{"line":340,"column":55}},"167":{"start":{"line":340,"column":26},"end":{"line":340,"column":55}},"168":{"start":{"line":341,"column":4},"end":{"line":341,"column":95}},"169":{"start":{"line":347,"column":4},"end":{"line":347,"column":26}},"170":{"start":{"line":349,"column":4},"end":{"line":349,"column":29}},"171":{"start":{"line":353,"column":4},"end":{"line":358,"column":5}},"172":{"start":{"line":354,"column":6},"end":{"line":356,"column":7}},"173":{"start":{"line":355,"column":8},"end":{"line":355,"column":90}},"174":{"start":{"line":357,"column":6},"end":{"line":357,"column":39}},"175":{"start":{"line":362,"column":4},"end":{"line":364,"column":5}},"176":{"start":{"line":363,"column":6},"end":{"line":363,"column":56}},"177":{"start":{"line":365,"column":4},"end":{"line":365,"column":47}},"178":{"start":{"line":371,"column":4},"end":{"line":371,"column":21}},"179":{"start":{"line":374,"column":4},"end":{"line":378,"column":5}},"180":{"start":{"line":375,"column":6},"end":{"line":377,"column":9}},"181":{"start":{"line":376,"column":8},"end":{"line":376,"column":72}},"182":{"start":{"line":381,"column":4},"end":{"line":381,"column":60}},"183":{"start":{"line":381,"column":25},"end":{"line":381,"column":60}},"184":{"start":{"line":384,"column":4},"end":{"line":398,"column":7}},"185":{"start":{"line":385,"column":6},"end":{"line":391,"column":7}},"186":{"start":{"line":386,"column":8},"end":{"line":388,"column":9}},"187":{"start":{"line":387,"column":10},"end":{"line":387,"column":111}},"188":{"start":{"line":390,"column":8},"end":{"line":390,"column":52}},"189":{"start":{"line":393,"column":6},"end":{"line":395,"column":7}},"190":{"start":{"line":394,"column":8},"end":{"line":394,"column":83}},"191":{"start":{"line":397,"column":6},"end":{"line":397,"column":44}},"192":{"start":{"line":402,"column":4},"end":{"line":414,"column":7}},"193":{"start":{"line":403,"column":6},"end":{"line":403,"column":30}},"194":{"start":{"line":404,"column":6},"end":{"line":410,"column":7}},"195":{"start":{"line":405,"column":8},"end":{"line":405,"column":56}},"196":{"start":{"line":407,"column":8},"end":{"line":407,"column":90}},"197":{"start":{"line":408,"column":8},"end":{"line":408,"column":79}},"198":{"start":{"line":409,"column":8},"end":{"line":409,"column":42}},"199":{"start":{"line":411,"column":6},"end":{"line":411,"column":96}},"200":{"start":{"line":412,"column":6},"end":{"line":412,"column":35}},"201":{"start":{"line":413,"column":6},"end":{"line":413,"column":76}},"202":{"start":{"line":413,"column":28},"end":{"line":413,"column":76}},"203":{"start":{"line":418,"column":4},"end":{"line":420,"column":7}},"204":{"start":{"line":419,"column":6},"end":{"line":419,"column":55}},"205":{"start":{"line":422,"column":4},"end":{"line":422,"column":19}},"206":{"start":{"line":427,"column":4},"end":{"line":427,"column":22}},"207":{"start":{"line":429,"column":4},"end":{"line":453,"column":7}},"208":{"start":{"line":432,"column":6},"end":{"line":439,"column":35}},"209":{"start":{"line":433,"column":8},"end":{"line":437,"column":9}},"210":{"start":{"line":434,"column":10},"end":{"line":434,"column":52}},"211":{"start":{"line":436,"column":10},"end":{"line":436,"column":33}},"212":{"start":{"line":438,"column":8},"end":{"line":438,"column":19}},"213":{"start":{"line":442,"column":6},"end":{"line":442,"column":39}},"214":{"start":{"line":446,"column":6},"end":{"line":450,"column":7}},"215":{"start":{"line":447,"column":8},"end":{"line":447,"column":43}},"216":{"start":{"line":448,"column":8},"end":{"line":448,"column":43}},"217":{"start":{"line":449,"column":8},"end":{"line":449,"column":127}},"218":{"start":{"line":452,"column":6},"end":{"line":452,"column":19}},"219":{"start":{"line":458,"column":4},"end":{"line":458,"column":38}},"220":{"start":{"line":461,"column":4},"end":{"line":461,"column":61}},"221":{"start":{"line":464,"column":4},"end":{"line":464,"column":65}},"222":{"start":{"line":467,"column":4},"end":{"line":467,"column":25}},"223":{"start":{"line":468,"column":4},"end":{"line":468,"column":98}},"224":{"start":{"line":471,"column":4},"end":{"line":471,"column":64}},"225":{"start":{"line":474,"column":4},"end":{"line":474,"column":41}},"226":{"start":{"line":477,"column":4},"end":{"line":477,"column":48}},"227":{"start":{"line":480,"column":4},"end":{"line":480,"column":39}},"228":{"start":{"line":483,"column":4},"end":{"line":483,"column":41}},"229":{"start":{"line":489,"column":4},"end":{"line":489,"column":64}},"230":{"start":{"line":489,"column":44},"end":{"line":489,"column":64}},"231":{"start":{"line":490,"column":4},"end":{"line":490,"column":48}},"232":{"start":{"line":491,"column":4},"end":{"line":491,"column":43}},"233":{"start":{"line":498,"column":0},"end":{"line":506,"column":4}},"234":{"start":{"line":499,"column":2},"end":{"line":499,"column":34}},"235":{"start":{"line":500,"column":2},"end":{"line":505,"column":4}},"236":{"start":{"line":501,"column":4},"end":{"line":503,"column":5}},"237":{"start":{"line":502,"column":6},"end":{"line":502,"column":57}},"238":{"start":{"line":504,"column":4},"end":{"line":504,"column":22}},"239":{"start":{"line":511,"column":0},"end":{"line":759,"column":2}},"240":{"start":{"line":544,"column":4},"end":{"line":544,"column":22}},"241":{"start":{"line":546,"column":4},"end":{"line":552,"column":20}},"242":{"start":{"line":547,"column":6},"end":{"line":547,"column":67}},"243":{"start":{"line":549,"column":6},"end":{"line":549,"column":53}},"244":{"start":{"line":551,"column":6},"end":{"line":551,"column":71}},"245":{"start":{"line":577,"column":4},"end":{"line":577,"column":22}},"246":{"start":{"line":579,"column":4},"end":{"line":585,"column":20}},"247":{"start":{"line":580,"column":6},"end":{"line":580,"column":67}},"248":{"start":{"line":582,"column":6},"end":{"line":582,"column":53}},"249":{"start":{"line":584,"column":6},"end":{"line":584,"column":71}},"250":{"start":{"line":614,"column":4},"end":{"line":614,"column":56}},"251":{"start":{"line":635,"column":4},"end":{"line":635,"column":40}},"252":{"start":{"line":636,"column":4},"end":{"line":636,"column":16}},"253":{"start":{"line":642,"column":4},"end":{"line":642,"column":22}},"254":{"start":{"line":644,"column":4},"end":{"line":644,"column":21}},"255":{"start":{"line":645,"column":4},"end":{"line":648,"column":5}},"256":{"start":{"line":646,"column":6},"end":{"line":646,"column":70}},"257":{"start":{"line":646,"column":31},"end":{"line":646,"column":70}},"258":{"start":{"line":647,"column":6},"end":{"line":647,"column":87}},"259":{"start":{"line":647,"column":31},"end":{"line":647,"column":87}},"260":{"start":{"line":649,"column":4},"end":{"line":649,"column":63}},"261":{"start":{"line":649,"column":40},"end":{"line":649,"column":63}},"262":{"start":{"line":650,"column":4},"end":{"line":652,"column":7}},"263":{"start":{"line":651,"column":6},"end":{"line":651,"column":69}},"264":{"start":{"line":653,"column":4},"end":{"line":653,"column":55}},"265":{"start":{"line":661,"column":4},"end":{"line":664,"column":18}},"266":{"start":{"line":666,"column":4},"end":{"line":666,"column":62}},"267":{"start":{"line":671,"column":4},"end":{"line":679,"column":5}},"268":{"start":{"line":672,"column":6},"end":{"line":676,"column":7}},"269":{"start":{"line":673,"column":8},"end":{"line":673,"column":51}},"270":{"start":{"line":674,"column":13},"end":{"line":676,"column":7}},"271":{"start":{"line":675,"column":8},"end":{"line":675,"column":44}},"272":{"start":{"line":677,"column":11},"end":{"line":679,"column":5}},"273":{"start":{"line":678,"column":6},"end":{"line":678,"column":46}},"274":{"start":{"line":681,"column":4},"end":{"line":681,"column":55}},"275":{"start":{"line":683,"column":4},"end":{"line":685,"column":5}},"276":{"start":{"line":684,"column":6},"end":{"line":684,"column":55}},"277":{"start":{"line":687,"column":4},"end":{"line":687,"column":53}},"278":{"start":{"line":694,"column":4},"end":{"line":694,"column":39}},"279":{"start":{"line":698,"column":4},"end":{"line":698,"column":57}},"280":{"start":{"line":699,"column":4},"end":{"line":701,"column":5}},"281":{"start":{"line":700,"column":6},"end":{"line":700,"column":78}},"282":{"start":{"line":703,"column":4},"end":{"line":706,"column":5}},"283":{"start":{"line":704,"column":6},"end":{"line":704,"column":72}},"284":{"start":{"line":704,"column":31},"end":{"line":704,"column":72}},"285":{"start":{"line":705,"column":6},"end":{"line":705,"column":41}},"286":{"start":{"line":705,"column":25},"end":{"line":705,"column":41}},"287":{"start":{"line":708,"column":4},"end":{"line":708,"column":26}},"288":{"start":{"line":709,"column":4},"end":{"line":717,"column":5}},"289":{"start":{"line":710,"column":6},"end":{"line":716,"column":9}},"290":{"start":{"line":711,"column":8},"end":{"line":711,"column":45}},"291":{"start":{"line":711,"column":19},"end":{"line":711,"column":45}},"292":{"start":{"line":712,"column":8},"end":{"line":712,"column":70}},"293":{"start":{"line":713,"column":8},"end":{"line":715,"column":9}},"294":{"start":{"line":714,"column":10},"end":{"line":714,"column":35}},"295":{"start":{"line":718,"column":4},"end":{"line":725,"column":5}},"296":{"start":{"line":719,"column":6},"end":{"line":724,"column":9}},"297":{"start":{"line":720,"column":8},"end":{"line":722,"column":9}},"298":{"start":{"line":721,"column":10},"end":{"line":721,"column":50}},"299":{"start":{"line":723,"column":8},"end":{"line":723,"column":26}},"300":{"start":{"line":727,"column":4},"end":{"line":731,"column":7}},"301":{"start":{"line":728,"column":6},"end":{"line":730,"column":9}},"302":{"start":{"line":729,"column":8},"end":{"line":729,"column":29}},"303":{"start":{"line":738,"column":4},"end":{"line":740,"column":36}},"304":{"start":{"line":742,"column":4},"end":{"line":742,"column":31}},"305":{"start":{"line":743,"column":4},"end":{"line":743,"column":33}},"306":{"start":{"line":745,"column":4},"end":{"line":747,"column":5}},"307":{"start":{"line":746,"column":6},"end":{"line":746,"column":53}},"308":{"start":{"line":749,"column":4},"end":{"line":756,"column":7}},"309":{"start":{"line":752,"column":6},"end":{"line":754,"column":7}},"310":{"start":{"line":753,"column":8},"end":{"line":753,"column":41}},"311":{"start":{"line":755,"column":6},"end":{"line":755,"column":42}}},"branchMap":{"1":{"line":33,"type":"cond-expr","locations":[{"start":{"line":33,"column":70},"end":{"line":33,"column":73}},{"start":{"line":33,"column":76},"end":{"line":33,"column":92}}]},"2":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":46},"end":{"line":33,"column":49}},{"start":{"line":33,"column":53},"end":{"line":33,"column":67}}]},"3":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":4},"end":{"line":59,"column":4}},{"start":{"line":59,"column":4},"end":{"line":59,"column":4}}]},"4":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":8},"end":{"line":59,"column":31}},{"start":{"line":59,"column":35},"end":{"line":59,"column":51}}]},"5":{"line":69,"type":"cond-expr","locations":[{"start":{"line":69,"column":31},"end":{"line":69,"column":53}},{"start":{"line":69,"column":56},"end":{"line":69,"column":58}}]},"6":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":4},"end":{"line":72,"column":4}},{"start":{"line":72,"column":4},"end":{"line":72,"column":4}}]},"7":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":4},"end":{"line":83,"column":4}},{"start":{"line":83,"column":4},"end":{"line":83,"column":4}}]},"8":{"line":83,"type":"binary-expr","locations":[{"start":{"line":83,"column":8},"end":{"line":83,"column":25}},{"start":{"line":83,"column":29},"end":{"line":83,"column":47}},{"start":{"line":83,"column":51},"end":{"line":83,"column":75}},{"start":{"line":83,"column":79},"end":{"line":83,"column":99}}]},"9":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":4},"end":{"line":99,"column":4}},{"start":{"line":99,"column":4},"end":{"line":99,"column":4}}]},"10":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":11},"end":{"line":101,"column":11}},{"start":{"line":101,"column":11},"end":{"line":101,"column":11}}]},"11":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":4},"end":{"line":111,"column":4}},{"start":{"line":111,"column":4},"end":{"line":111,"column":4}}]},"12":{"line":112,"type":"switch","locations":[{"start":{"line":113,"column":6},"end":{"line":115,"column":14}},{"start":{"line":116,"column":6},"end":{"line":118,"column":14}},{"start":{"line":119,"column":6},"end":{"line":138,"column":14}},{"start":{"line":139,"column":6},"end":{"line":141,"column":14}},{"start":{"line":142,"column":6},"end":{"line":144,"column":14}}]},"13":{"line":120,"type":"switch","locations":[{"start":{"line":121,"column":10},"end":{"line":126,"column":13}},{"start":{"line":127,"column":10},"end":{"line":129,"column":18}},{"start":{"line":130,"column":10},"end":{"line":136,"column":18}}]},"14":{"line":123,"type":"cond-expr","locations":[{"start":{"line":123,"column":72},"end":{"line":123,"column":91}},{"start":{"line":123,"column":94},"end":{"line":123,"column":116}}]},"15":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":30},"end":{"line":123,"column":46}},{"start":{"line":123,"column":50},"end":{"line":123,"column":69}}]},"16":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":12},"end":{"line":131,"column":12}},{"start":{"line":131,"column":12},"end":{"line":131,"column":12}}]},"17":{"line":132,"type":"cond-expr","locations":[{"start":{"line":132,"column":72},"end":{"line":132,"column":91}},{"start":{"line":132,"column":94},"end":{"line":132,"column":116}}]},"18":{"line":132,"type":"binary-expr","locations":[{"start":{"line":132,"column":30},"end":{"line":132,"column":46}},{"start":{"line":132,"column":50},"end":{"line":132,"column":69}}]},"19":{"line":140,"type":"cond-expr","locations":[{"start":{"line":140,"column":66},"end":{"line":140,"column":85}},{"start":{"line":140,"column":88},"end":{"line":140,"column":112}}]},"20":{"line":140,"type":"binary-expr","locations":[{"start":{"line":140,"column":24},"end":{"line":140,"column":40}},{"start":{"line":140,"column":44},"end":{"line":140,"column":63}}]},"21":{"line":143,"type":"binary-expr","locations":[{"start":{"line":143,"column":24},"end":{"line":143,"column":44}},{"start":{"line":143,"column":48},"end":{"line":143,"column":68}}]},"22":{"line":152,"type":"switch","locations":[{"start":{"line":153,"column":6},"end":{"line":175,"column":62}},{"start":{"line":177,"column":6},"end":{"line":199,"column":38}},{"start":{"line":201,"column":6},"end":{"line":210,"column":72}},{"start":{"line":212,"column":6},"end":{"line":234,"column":105}}]},"23":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":8},"end":{"line":154,"column":8}},{"start":{"line":154,"column":8},"end":{"line":154,"column":8}}]},"24":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":10},"end":{"line":155,"column":10}},{"start":{"line":155,"column":10},"end":{"line":155,"column":10}}]},"25":{"line":155,"type":"binary-expr","locations":[{"start":{"line":155,"column":14},"end":{"line":155,"column":39}},{"start":{"line":155,"column":43},"end":{"line":155,"column":65}}]},"26":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":10},"end":{"line":159,"column":10}},{"start":{"line":159,"column":10},"end":{"line":159,"column":10}}]},"27":{"line":159,"type":"binary-expr","locations":[{"start":{"line":159,"column":14},"end":{"line":159,"column":43}},{"start":{"line":159,"column":47},"end":{"line":159,"column":81}}]},"28":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":10},"end":{"line":163,"column":10}},{"start":{"line":163,"column":10},"end":{"line":163,"column":10}}]},"29":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":8},"end":{"line":171,"column":8}},{"start":{"line":171,"column":8},"end":{"line":171,"column":8}}]},"30":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":8},"end":{"line":178,"column":8}},{"start":{"line":178,"column":8},"end":{"line":178,"column":8}}]},"31":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":10},"end":{"line":179,"column":10}},{"start":{"line":179,"column":10},"end":{"line":179,"column":10}}]},"32":{"line":179,"type":"binary-expr","locations":[{"start":{"line":179,"column":15},"end":{"line":179,"column":44}},{"start":{"line":179,"column":48},"end":{"line":179,"column":73}},{"start":{"line":179,"column":78},"end":{"line":179,"column":103}}]},"33":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":8},"end":{"line":187,"column":8}},{"start":{"line":187,"column":8},"end":{"line":187,"column":8}}]},"34":{"line":187,"type":"binary-expr","locations":[{"start":{"line":187,"column":12},"end":{"line":187,"column":35}},{"start":{"line":187,"column":39},"end":{"line":187,"column":55}}]},"35":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":8},"end":{"line":191,"column":8}},{"start":{"line":191,"column":8},"end":{"line":191,"column":8}}]},"36":{"line":191,"type":"binary-expr","locations":[{"start":{"line":191,"column":12},"end":{"line":191,"column":37}},{"start":{"line":191,"column":41},"end":{"line":191,"column":68}}]},"37":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":8},"end":{"line":195,"column":8}},{"start":{"line":195,"column":8},"end":{"line":195,"column":8}}]},"38":{"line":195,"type":"binary-expr","locations":[{"start":{"line":195,"column":12},"end":{"line":195,"column":41}},{"start":{"line":195,"column":45},"end":{"line":195,"column":70}}]},"39":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":8},"end":{"line":202,"column":8}},{"start":{"line":202,"column":8},"end":{"line":202,"column":8}}]},"40":{"line":202,"type":"binary-expr","locations":[{"start":{"line":202,"column":12},"end":{"line":202,"column":41}},{"start":{"line":202,"column":45},"end":{"line":202,"column":79}}]},"41":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":8},"end":{"line":206,"column":8}},{"start":{"line":206,"column":8},"end":{"line":206,"column":8}}]},"42":{"line":206,"type":"binary-expr","locations":[{"start":{"line":206,"column":12},"end":{"line":206,"column":41}},{"start":{"line":206,"column":45},"end":{"line":206,"column":67}}]},"43":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":8},"end":{"line":213,"column":8}},{"start":{"line":213,"column":8},"end":{"line":213,"column":8}}]},"44":{"line":217,"type":"if","locations":[{"start":{"line":217,"column":8},"end":{"line":217,"column":8}},{"start":{"line":217,"column":8},"end":{"line":217,"column":8}}]},"45":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":10},"end":{"line":218,"column":10}},{"start":{"line":218,"column":10},"end":{"line":218,"column":10}}]},"46":{"line":218,"type":"binary-expr","locations":[{"start":{"line":218,"column":14},"end":{"line":218,"column":43}},{"start":{"line":218,"column":47},"end":{"line":218,"column":81}}]},"47":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":10},"end":{"line":222,"column":10}},{"start":{"line":222,"column":10},"end":{"line":222,"column":10}}]},"48":{"line":223,"type":"cond-expr","locations":[{"start":{"line":223,"column":44},"end":{"line":223,"column":89}},{"start":{"line":223,"column":92},"end":{"line":223,"column":105}}]},"49":{"line":226,"type":"if","locations":[{"start":{"line":226,"column":10},"end":{"line":226,"column":10}},{"start":{"line":226,"column":10},"end":{"line":226,"column":10}}]},"50":{"line":234,"type":"cond-expr","locations":[{"start":{"line":234,"column":56},"end":{"line":234,"column":78}},{"start":{"line":234,"column":81},"end":{"line":234,"column":103}}]},"51":{"line":244,"type":"if","locations":[{"start":{"line":244,"column":4},"end":{"line":244,"column":4}},{"start":{"line":244,"column":4},"end":{"line":244,"column":4}}]},"52":{"line":247,"type":"if","locations":[{"start":{"line":247,"column":4},"end":{"line":247,"column":4}},{"start":{"line":247,"column":4},"end":{"line":247,"column":4}}]},"53":{"line":250,"type":"if","locations":[{"start":{"line":250,"column":4},"end":{"line":250,"column":4}},{"start":{"line":250,"column":4},"end":{"line":250,"column":4}}]},"54":{"line":256,"type":"if","locations":[{"start":{"line":256,"column":4},"end":{"line":256,"column":4}},{"start":{"line":256,"column":4},"end":{"line":256,"column":4}}]},"55":{"line":256,"type":"binary-expr","locations":[{"start":{"line":256,"column":8},"end":{"line":256,"column":23}},{"start":{"line":256,"column":27},"end":{"line":256,"column":54}}]},"56":{"line":260,"type":"if","locations":[{"start":{"line":260,"column":4},"end":{"line":260,"column":4}},{"start":{"line":260,"column":4},"end":{"line":260,"column":4}}]},"57":{"line":264,"type":"if","locations":[{"start":{"line":264,"column":4},"end":{"line":264,"column":4}},{"start":{"line":264,"column":4},"end":{"line":264,"column":4}}]},"58":{"line":264,"type":"binary-expr","locations":[{"start":{"line":264,"column":8},"end":{"line":264,"column":23}},{"start":{"line":264,"column":27},"end":{"line":264,"column":32}}]},"59":{"line":274,"type":"if","locations":[{"start":{"line":274,"column":4},"end":{"line":274,"column":4}},{"start":{"line":274,"column":4},"end":{"line":274,"column":4}}]},"60":{"line":276,"type":"if","locations":[{"start":{"line":276,"column":4},"end":{"line":276,"column":4}},{"start":{"line":276,"column":4},"end":{"line":276,"column":4}}]},"61":{"line":287,"type":"if","locations":[{"start":{"line":287,"column":4},"end":{"line":287,"column":4}},{"start":{"line":287,"column":4},"end":{"line":287,"column":4}}]},"62":{"line":287,"type":"binary-expr","locations":[{"start":{"line":287,"column":8},"end":{"line":287,"column":33}},{"start":{"line":287,"column":37},"end":{"line":287,"column":66}}]},"63":{"line":289,"type":"cond-expr","locations":[{"start":{"line":289,"column":50},"end":{"line":289,"column":72}},{"start":{"line":289,"column":75},"end":{"line":289,"column":95}}]},"64":{"line":294,"type":"if","locations":[{"start":{"line":294,"column":6},"end":{"line":294,"column":6}},{"start":{"line":294,"column":6},"end":{"line":294,"column":6}}]},"65":{"line":307,"type":"if","locations":[{"start":{"line":307,"column":4},"end":{"line":307,"column":4}},{"start":{"line":307,"column":4},"end":{"line":307,"column":4}}]},"66":{"line":309,"type":"cond-expr","locations":[{"start":{"line":309,"column":38},"end":{"line":309,"column":58}},{"start":{"line":309,"column":61},"end":{"line":309,"column":77}}]},"67":{"line":311,"type":"cond-expr","locations":[{"start":{"line":311,"column":33},"end":{"line":311,"column":55}},{"start":{"line":311,"column":58},"end":{"line":311,"column":80}}]},"68":{"line":315,"type":"cond-expr","locations":[{"start":{"line":315,"column":39},"end":{"line":315,"column":61}},{"start":{"line":315,"column":64},"end":{"line":315,"column":86}}]},"69":{"line":320,"type":"cond-expr","locations":[{"start":{"line":320,"column":28},"end":{"line":320,"column":37}},{"start":{"line":320,"column":40},"end":{"line":320,"column":47}}]},"70":{"line":321,"type":"cond-expr","locations":[{"start":{"line":321,"column":25},"end":{"line":321,"column":49}},{"start":{"line":321,"column":52},"end":{"line":321,"column":65}}]},"71":{"line":324,"type":"if","locations":[{"start":{"line":324,"column":4},"end":{"line":324,"column":4}},{"start":{"line":324,"column":4},"end":{"line":324,"column":4}}]},"72":{"line":334,"type":"cond-expr","locations":[{"start":{"line":334,"column":54},"end":{"line":334,"column":76}},{"start":{"line":334,"column":79},"end":{"line":334,"column":101}}]},"73":{"line":334,"type":"binary-expr","locations":[{"start":{"line":334,"column":14},"end":{"line":334,"column":30}},{"start":{"line":334,"column":34},"end":{"line":334,"column":51}}]},"74":{"line":340,"type":"if","locations":[{"start":{"line":340,"column":4},"end":{"line":340,"column":4}},{"start":{"line":340,"column":4},"end":{"line":340,"column":4}}]},"75":{"line":341,"type":"binary-expr","locations":[{"start":{"line":341,"column":11},"end":{"line":341,"column":29}},{"start":{"line":341,"column":33},"end":{"line":341,"column":94}}]},"76":{"line":347,"type":"binary-expr","locations":[{"start":{"line":347,"column":13},"end":{"line":347,"column":19}},{"start":{"line":347,"column":23},"end":{"line":347,"column":25}}]},"77":{"line":353,"type":"if","locations":[{"start":{"line":353,"column":4},"end":{"line":353,"column":4}},{"start":{"line":353,"column":4},"end":{"line":353,"column":4}}]},"78":{"line":354,"type":"if","locations":[{"start":{"line":354,"column":6},"end":{"line":354,"column":6}},{"start":{"line":354,"column":6},"end":{"line":354,"column":6}}]},"79":{"line":357,"type":"binary-expr","locations":[{"start":{"line":357,"column":13},"end":{"line":357,"column":22}},{"start":{"line":357,"column":26},"end":{"line":357,"column":38}}]},"80":{"line":362,"type":"if","locations":[{"start":{"line":362,"column":4},"end":{"line":362,"column":4}},{"start":{"line":362,"column":4},"end":{"line":362,"column":4}}]},"81":{"line":374,"type":"if","locations":[{"start":{"line":374,"column":4},"end":{"line":374,"column":4}},{"start":{"line":374,"column":4},"end":{"line":374,"column":4}}]},"82":{"line":381,"type":"if","locations":[{"start":{"line":381,"column":4},"end":{"line":381,"column":4}},{"start":{"line":381,"column":4},"end":{"line":381,"column":4}}]},"83":{"line":385,"type":"if","locations":[{"start":{"line":385,"column":6},"end":{"line":385,"column":6}},{"start":{"line":385,"column":6},"end":{"line":385,"column":6}}]},"84":{"line":386,"type":"if","locations":[{"start":{"line":386,"column":8},"end":{"line":386,"column":8}},{"start":{"line":386,"column":8},"end":{"line":386,"column":8}}]},"85":{"line":386,"type":"binary-expr","locations":[{"start":{"line":386,"column":12},"end":{"line":386,"column":29}},{"start":{"line":386,"column":33},"end":{"line":386,"column":50}}]},"86":{"line":387,"type":"cond-expr","locations":[{"start":{"line":387,"column":55},"end":{"line":387,"column":97}},{"start":{"line":387,"column":100},"end":{"line":387,"column":110}}]},"87":{"line":393,"type":"if","locations":[{"start":{"line":393,"column":6},"end":{"line":393,"column":6}},{"start":{"line":393,"column":6},"end":{"line":393,"column":6}}]},"88":{"line":394,"type":"cond-expr","locations":[{"start":{"line":394,"column":46},"end":{"line":394,"column":75}},{"start":{"line":394,"column":78},"end":{"line":394,"column":82}}]},"89":{"line":404,"type":"if","locations":[{"start":{"line":404,"column":6},"end":{"line":404,"column":6}},{"start":{"line":404,"column":6},"end":{"line":404,"column":6}}]},"90":{"line":407,"type":"cond-expr","locations":[{"start":{"line":407,"column":54},"end":{"line":407,"column":73}},{"start":{"line":407,"column":76},"end":{"line":407,"column":88}}]},"91":{"line":413,"type":"if","locations":[{"start":{"line":413,"column":6},"end":{"line":413,"column":6}},{"start":{"line":413,"column":6},"end":{"line":413,"column":6}}]},"92":{"line":433,"type":"if","locations":[{"start":{"line":433,"column":8},"end":{"line":433,"column":8}},{"start":{"line":433,"column":8},"end":{"line":433,"column":8}}]},"93":{"line":446,"type":"if","locations":[{"start":{"line":446,"column":6},"end":{"line":446,"column":6}},{"start":{"line":446,"column":6},"end":{"line":446,"column":6}}]},"94":{"line":449,"type":"cond-expr","locations":[{"start":{"line":449,"column":40},"end":{"line":449,"column":66}},{"start":{"line":449,"column":69},"end":{"line":449,"column":126}}]},"95":{"line":461,"type":"binary-expr","locations":[{"start":{"line":461,"column":11},"end":{"line":461,"column":40}},{"start":{"line":461,"column":44},"end":{"line":461,"column":60}}]},"96":{"line":464,"type":"binary-expr","locations":[{"start":{"line":464,"column":11},"end":{"line":464,"column":35}},{"start":{"line":464,"column":39},"end":{"line":464,"column":64}}]},"97":{"line":468,"type":"binary-expr","locations":[{"start":{"line":468,"column":11},"end":{"line":468,"column":28}},{"start":{"line":468,"column":32},"end":{"line":468,"column":52}},{"start":{"line":468,"column":56},"end":{"line":468,"column":75}},{"start":{"line":468,"column":79},"end":{"line":468,"column":97}}]},"98":{"line":471,"type":"binary-expr","locations":[{"start":{"line":471,"column":11},"end":{"line":471,"column":36}},{"start":{"line":471,"column":40},"end":{"line":471,"column":63}}]},"99":{"line":489,"type":"if","locations":[{"start":{"line":489,"column":4},"end":{"line":489,"column":4}},{"start":{"line":489,"column":4},"end":{"line":489,"column":4}}]},"100":{"line":490,"type":"binary-expr","locations":[{"start":{"line":490,"column":24},"end":{"line":490,"column":41}},{"start":{"line":490,"column":45},"end":{"line":490,"column":47}}]},"101":{"line":501,"type":"if","locations":[{"start":{"line":501,"column":4},"end":{"line":501,"column":4}},{"start":{"line":501,"column":4},"end":{"line":501,"column":4}}]},"102":{"line":645,"type":"if","locations":[{"start":{"line":645,"column":4},"end":{"line":645,"column":4}},{"start":{"line":645,"column":4},"end":{"line":645,"column":4}}]},"103":{"line":646,"type":"if","locations":[{"start":{"line":646,"column":6},"end":{"line":646,"column":6}},{"start":{"line":646,"column":6},"end":{"line":646,"column":6}}]},"104":{"line":647,"type":"if","locations":[{"start":{"line":647,"column":6},"end":{"line":647,"column":6}},{"start":{"line":647,"column":6},"end":{"line":647,"column":6}}]},"105":{"line":649,"type":"if","locations":[{"start":{"line":649,"column":4},"end":{"line":649,"column":4}},{"start":{"line":649,"column":4},"end":{"line":649,"column":4}}]},"106":{"line":649,"type":"cond-expr","locations":[{"start":{"line":649,"column":52},"end":{"line":649,"column":57}},{"start":{"line":649,"column":60},"end":{"line":649,"column":62}}]},"107":{"line":671,"type":"if","locations":[{"start":{"line":671,"column":4},"end":{"line":671,"column":4}},{"start":{"line":671,"column":4},"end":{"line":671,"column":4}}]},"108":{"line":672,"type":"if","locations":[{"start":{"line":672,"column":6},"end":{"line":672,"column":6}},{"start":{"line":672,"column":6},"end":{"line":672,"column":6}}]},"109":{"line":674,"type":"if","locations":[{"start":{"line":674,"column":13},"end":{"line":674,"column":13}},{"start":{"line":674,"column":13},"end":{"line":674,"column":13}}]},"110":{"line":677,"type":"if","locations":[{"start":{"line":677,"column":11},"end":{"line":677,"column":11}},{"start":{"line":677,"column":11},"end":{"line":677,"column":11}}]},"111":{"line":683,"type":"if","locations":[{"start":{"line":683,"column":4},"end":{"line":683,"column":4}},{"start":{"line":683,"column":4},"end":{"line":683,"column":4}}]},"112":{"line":699,"type":"if","locations":[{"start":{"line":699,"column":4},"end":{"line":699,"column":4}},{"start":{"line":699,"column":4},"end":{"line":699,"column":4}}]},"113":{"line":699,"type":"binary-expr","locations":[{"start":{"line":699,"column":8},"end":{"line":699,"column":15}},{"start":{"line":699,"column":19},"end":{"line":699,"column":32}}]},"114":{"line":703,"type":"if","locations":[{"start":{"line":703,"column":4},"end":{"line":703,"column":4}},{"start":{"line":703,"column":4},"end":{"line":703,"column":4}}]},"115":{"line":704,"type":"if","locations":[{"start":{"line":704,"column":6},"end":{"line":704,"column":6}},{"start":{"line":704,"column":6},"end":{"line":704,"column":6}}]},"116":{"line":705,"type":"if","locations":[{"start":{"line":705,"column":6},"end":{"line":705,"column":6}},{"start":{"line":705,"column":6},"end":{"line":705,"column":6}}]},"117":{"line":709,"type":"if","locations":[{"start":{"line":709,"column":4},"end":{"line":709,"column":4}},{"start":{"line":709,"column":4},"end":{"line":709,"column":4}}]},"118":{"line":711,"type":"if","locations":[{"start":{"line":711,"column":8},"end":{"line":711,"column":8}},{"start":{"line":711,"column":8},"end":{"line":711,"column":8}}]},"119":{"line":713,"type":"if","locations":[{"start":{"line":713,"column":8},"end":{"line":713,"column":8}},{"start":{"line":713,"column":8},"end":{"line":713,"column":8}}]},"120":{"line":718,"type":"if","locations":[{"start":{"line":718,"column":4},"end":{"line":718,"column":4}},{"start":{"line":718,"column":4},"end":{"line":718,"column":4}}]},"121":{"line":720,"type":"if","locations":[{"start":{"line":720,"column":8},"end":{"line":720,"column":8}},{"start":{"line":720,"column":8},"end":{"line":720,"column":8}}]},"122":{"line":720,"type":"binary-expr","locations":[{"start":{"line":720,"column":12},"end":{"line":720,"column":19}},{"start":{"line":720,"column":23},"end":{"line":720,"column":47}},{"start":{"line":720,"column":51},"end":{"line":720,"column":67}}]},"123":{"line":745,"type":"if","locations":[{"start":{"line":745,"column":4},"end":{"line":745,"column":4}},{"start":{"line":745,"column":4},"end":{"line":745,"column":4}}]},"124":{"line":752,"type":"if","locations":[{"start":{"line":752,"column":6},"end":{"line":752,"column":6}},{"start":{"line":752,"column":6},"end":{"line":752,"column":6}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _lodash = require('lodash');","","var _lodash2 = _interopRequireDefault(_lodash);","","var _inflection = require('inflection');","","var _inflection2 = _interopRequireDefault(_inflection);","","var _helpers = require('./helpers');","","var _helpers2 = _interopRequireDefault(_helpers);","","var _model = require('./base/model');","","var _model2 = _interopRequireDefault(_model);","","var _relation = require('./base/relation');","","var _relation2 = _interopRequireDefault(_relation);","","var _promise = require('./base/promise');","","var _promise2 = _interopRequireDefault(_promise);","","var _constants = require('./constants');","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","var push = Array.prototype.push; // Relation","// ---------------","","var removePivotPrefix = function removePivotPrefix(key) {","  return key.slice(_constants.PIVOT_PREFIX.length);","};","var hasPivotPrefix = function hasPivotPrefix(key) {","  return _lodash2.default.startsWith(key, _constants.PIVOT_PREFIX);","};","","exports.default = _relation2.default.extend({","","  // Assembles the new model or collection we're creating an instance of,","  // gathering any relevant primitives from the parent object,","  // without keeping any hard references.","  init: function init(parent) {","    this.parentId = parent.id;","    this.parentTableName = _lodash2.default.result(parent, 'tableName');","    this.parentIdAttribute = this.attribute('parentIdAttribute', parent);","","    // Use formatted attributes so that morphKey and foreignKey will match","    // attribute keys.","    this.parentAttributes = parent.format(_lodash2.default.clone(parent.attributes));","","    if (this.type === 'morphTo' && !parent._isEager) {","      // If the parent object is eager loading, and it's a polymorphic `morphTo` relation,","      // we can't know what the target will be until the models are sorted and matched.","      this.target = _helpers2.default.morphCandidate(this.candidates, this.parentAttributes[this.key('morphKey')]);","      this.targetTableName = _lodash2.default.result(this.target.prototype, 'tableName');","    }","","    this.targetIdAttribute = this.attribute('targetIdAttribute', parent);","    this.parentFk = this.attribute('parentFk');","","    var target = this.target ? this.relatedInstance() : {};","    target.relatedData = this;","","    if (this.type === 'belongsToMany') {","      _lodash2.default.extend(target, pivotHelpers);","    }","","    return target;","  },","","  // Initializes a `through` relation, setting the `Target` model and `options`,","  // which includes any additional keys for the relation.","  through: function through(source, Target, options) {","    var type = this.type;","    if (type !== 'hasOne' && type !== 'hasMany' && type !== 'belongsToMany' && type !== 'belongsTo') {","      throw new Error('`through` is only chainable from `hasOne`, `belongsTo`, `hasMany`, or `belongsToMany`');","    }","","    this.throughTarget = Target;","    this.throughTableName = _lodash2.default.result(Target.prototype, 'tableName');","","    _lodash2.default.extend(this, options);","    _lodash2.default.extend(source, pivotHelpers);","","    this.parentIdAttribute = this.attribute('parentIdAttribute');","    this.targetIdAttribute = this.attribute('targetIdAttribute');","    this.throughIdAttribute = this.attribute('throughIdAttribute', Target);","    this.parentFk = this.attribute('parentFk');","","    // Set the appropriate foreign key if we're doing a belongsToMany, for convenience.","    if (this.type === 'belongsToMany') {","      this.foreignKey = this.throughForeignKey;","    } else if (this.otherKey) {","      this.foreignKey = this.otherKey;","    }","","    return source;","  },","","  // Generates and returns a specified key, for convenience... one of","  // `foreignKey`, `otherKey`, `throughForeignKey`.","  key: function key(keyName) {","    if (this[keyName]) return this[keyName];","    switch (keyName) {","      case 'otherKey':","        this[keyName] = singularMemo(this.targetTableName) + '_' + this.targetIdAttribute;","        break;","      case 'throughForeignKey':","        this[keyName] = singularMemo(this.joinTable()) + '_' + this.throughIdAttribute;","        break;","      case 'foreignKey':","        switch (this.type) {","          case 'morphTo':","            {","              var idKeyName = this.columnNames && this.columnNames[1] ? this.columnNames[1] : this.morphName + '_id';","              this[keyName] = idKeyName;","              break;","            }","          case 'belongsTo':","            this[keyName] = singularMemo(this.targetTableName) + '_' + this.targetIdAttribute;","            break;","          default:","            if (this.isMorph()) {","              this[keyName] = this.columnNames && this.columnNames[1] ? this.columnNames[1] : this.morphName + '_id';","              break;","            }","            this[keyName] = singularMemo(this.parentTableName) + '_' + this.parentIdAttribute;","            break;","        }","        break;","      case 'morphKey':","        this[keyName] = this.columnNames && this.columnNames[0] ? this.columnNames[0] : this.morphName + '_type';","        break;","      case 'morphValue':","        this[keyName] = this.parentTableName || this.targetTableName;","        break;","    }","    return this[keyName];","  },","","  // Get the correct value for the following attributes:","  // parentIdAttribute, targetIdAttribute, throughIdAttribute and parentFk.","  attribute: function attribute(_attribute, parent) {","    switch (_attribute) {","      case 'parentIdAttribute':","        if (this.isThrough()) {","          if (this.type === 'belongsTo' && this.throughForeignKey) {","            return this.throughForeignKey;","          }","","          if (this.type === 'belongsToMany' && this.isThroughForeignKeyTargeted()) {","            return this.throughForeignKeyTarget;","          }","","          if (this.isOtherKeyTargeted()) {","            return this.otherKeyTarget;","          }","","          // Return attribute calculated on `init` by default.","          return this.parentIdAttribute;","        }","","        if (this.isForeignKeyTargeted()) {","          return this.foreignKeyTarget;","        }","","        return _lodash2.default.result(parent, 'idAttribute');","","      case 'targetIdAttribute':","        if (this.isThrough()) {","          if ((this.type === 'belongsToMany' || this.type === 'belongsTo') && this.isOtherKeyTargeted()) {","            return this.otherKeyTarget;","          }","","          // Return attribute calculated on `init` by default.","          return this.targetIdAttribute;","        }","","        if (this.type === 'morphTo' && !parent._isEager) {","          return _lodash2.default.result(this.target.prototype, 'idAttribute');","        }","","        if (this.type === 'belongsTo' && this.isForeignKeyTargeted()) {","          return this.foreignKeyTarget;","        }","","        if (this.type === 'belongsToMany' && this.isOtherKeyTargeted()) {","          return this.otherKeyTarget;","        }","","        return this.targetIdAttribute;","","      case 'throughIdAttribute':","        if (this.type !== 'belongsToMany' && this.isThroughForeignKeyTargeted()) {","          return this.throughForeignKeyTarget;","        }","","        if (this.type === 'belongsToMany' && this.throughForeignKey) {","          return this.throughForeignKey;","        }","","        return _lodash2.default.result(parent.prototype, 'idAttribute');","","      case 'parentFk':","        if (!this.hasParentAttributes()) {","          return;","        }","","        if (this.isThrough()) {","          if (this.type === 'belongsToMany' && this.isThroughForeignKeyTargeted()) {","            return this.parentAttributes[this.throughForeignKeyTarget];","          }","","          if (this.type === 'belongsTo') {","            return this.throughForeignKey ? this.parentAttributes[this.parentIdAttribute] : this.parentId;","          }","","          if (this.isOtherKeyTargeted()) {","            return this.parentAttributes[this.otherKeyTarget];","          }","","          // Return attribute calculated on `init` by default.","          return this.parentFk;","        }","","        return this.parentAttributes[this.isInverse() ? this.key('foreignKey') : this.parentIdAttribute];","    }","  },","","","  // Injects the necessary `select` constraints into a `knex` query builder.","  selectConstraints: function selectConstraints(knex, options) {","    var resp = options.parentResponse;","","    // The `belongsToMany` and `through` relations have joins & pivot columns.","    if (this.isJoined()) this.joinClauses(knex);","","    // Call the function, if one exists, to constrain the eager loaded query.","    if (options._beforeFn) options._beforeFn.call(knex, knex);","","    // The base select column","    if (_lodash2.default.isArray(options.columns)) {","      knex.columns(options.columns);","    }","","    var currentColumns = _lodash2.default.find(knex._statements, { grouping: 'columns' });","","    if (!currentColumns || currentColumns.length === 0) {","      knex.column(this.targetTableName + '.*');","    }","","    if (this.isJoined()) this.joinColumns(knex);","","    // If this is a single relation and we're not eager loading,","    // limit the query to a single item.","    if (this.isSingle() && !resp) knex.limit(1);","","    // Finally, add (and validate) the where conditions, necessary for constraining the relation.","    this.whereClauses(knex, resp);","  },","","  // Inject & validates necessary `through` constraints for the current model.","  joinColumns: function joinColumns(knex) {","    var columns = [];","    var joinTable = this.joinTable();","    if (this.isThrough()) columns.push(this.throughIdAttribute);","    columns.push(this.key('foreignKey'));","    if (this.type === 'belongsToMany') columns.push(this.key('otherKey'));","    push.apply(columns, this.pivotColumns);","    knex.columns(_lodash2.default.map(columns, function (col) {","      return joinTable + '.' + col + ' as _pivot_' + col;","    }));","  },","","  // Generates the join clauses necessary for the current relation.","  joinClauses: function joinClauses(knex) {","    var joinTable = this.joinTable();","","    if (this.type === 'belongsTo' || this.type === 'belongsToMany') {","","      var targetKey = this.type === 'belongsTo' ? this.key('foreignKey') : this.key('otherKey');","","      knex.join(joinTable, joinTable + '.' + targetKey, '=', this.targetTableName + '.' + this.targetIdAttribute);","","      // A `belongsTo` -> `through` is currently the only relation with two joins.","      if (this.type === 'belongsTo') {","        knex.join(this.parentTableName, joinTable + '.' + this.throughIdAttribute, '=', this.parentTableName + '.' + this.key('throughForeignKey'));","      }","    } else {","      knex.join(joinTable, joinTable + '.' + this.throughIdAttribute, '=', this.targetTableName + '.' + this.key('throughForeignKey'));","    }","  },","","  // Check that there isn't an incorrect foreign key set, vs. the one","  // passed in when the relation was formed.","  whereClauses: function whereClauses(knex, response) {","    var key = void 0;","","    if (this.isJoined()) {","      var isBelongsTo = this.type === 'belongsTo';","      var targetTable = isBelongsTo ? this.parentTableName : this.joinTable();","","      var column = isBelongsTo ? this.parentIdAttribute : this.key('foreignKey');","","      key = targetTable + '.' + column;","    } else {","      var _column = this.isInverse() ? this.targetIdAttribute : this.key('foreignKey');","","      key = this.targetTableName + '.' + _column;","    }","","    var method = response ? 'whereIn' : 'where';","    var ids = response ? this.eagerKeys(response) : this.parentFk;","    knex[method](key, ids);","","    if (this.isMorph()) {","      var table = this.targetTableName;","      var _key = this.key('morphKey');","      var value = this.key('morphValue');","      knex.where(table + '.' + _key, value);","    }","  },","","  // Fetches all `eagerKeys` from the current relation.","  eagerKeys: function eagerKeys(response) {","    var key = this.isInverse() && !this.isThrough() ? this.key('foreignKey') : this.parentIdAttribute;","    return (0, _lodash2.default)(response).map(key).uniq().value();","  },","","  // Generates the appropriate standard join table.","  joinTable: function joinTable() {","    if (this.isThrough()) return this.throughTableName;","    return this.joinTableName || [this.parentTableName, this.targetTableName].sort().join('_');","  },","","  // Creates a new model or collection instance, depending on","  // the `relatedData` settings and the models passed in.","  relatedInstance: function relatedInstance(models) {","    models = models || [];","","    var Target = this.target;","","    // If it's a single model, check whether there's already a model","    // we can pick from... otherwise create a new instance.","    if (this.isSingle()) {","      if (!(Target.prototype instanceof _model2.default)) {","        throw new Error('The ' + this.type + ' related object must be a Bookshelf.Model');","      }","      return models[0] || new Target();","    }","","    // Allows us to just use a model, but create a temporary","    // collection for a \"*-many\" relation.","    if (Target.prototype instanceof _model2.default) {","      return Target.collection(models, { parse: true });","    }","    return new Target(models, { parse: true });","  },","","  // Groups the related response according to the type of relationship","  // we're handling, for easy attachment to the parent models.","  eagerPair: function eagerPair(relationName, related, parentModels) {","    var _this = this;","","    // If this is a morphTo, we only want to pair on the morphValue for the current relation.","    if (this.type === 'morphTo') {","      parentModels = _lodash2.default.filter(parentModels, function (m) {","        return m.get(_this.key('morphKey')) === _this.key('morphValue');","      });","    }","","    // If this is a `through` or `belongsToMany` relation, we need to cleanup & setup the `interim` model.","    if (this.isJoined()) related = this.parsePivot(related);","","    // Group all of the related models for easier association with their parent models.","    var grouped = _lodash2.default.groupBy(related, function (m) {","      if (m.pivot) {","        if (_this.isInverse() && _this.isThrough()) {","          return _this.isThroughForeignKeyTargeted() ? m.pivot.get(_this.throughForeignKeyTarget) : m.pivot.id;","        }","","        return m.pivot.get(_this.key('foreignKey'));","      }","","      if (_this.isInverse()) {","        return _this.isForeignKeyTargeted() ? m.get(_this.foreignKeyTarget) : m.id;","      }","","      return m.get(_this.key('foreignKey'));","    });","","    // Loop over the `parentModels` and attach the grouped sub-models,","    // keeping the `relatedData` on the new related instance.","    _lodash2.default.each(parentModels, function (model) {","      var groupedKey = void 0;","      if (!_this.isInverse()) {","        groupedKey = model.get(_this.parentIdAttribute);","      } else {","        var keyColumn = _this.key(_this.isThrough() ? 'throughForeignKey' : 'foreignKey');","        var formatted = model.format(_lodash2.default.clone(model.attributes));","        groupedKey = formatted[keyColumn];","      }","      var relation = model.relations[relationName] = _this.relatedInstance(grouped[groupedKey]);","      relation.relatedData = _this;","      if (_this.isJoined()) _lodash2.default.extend(relation, pivotHelpers);","    });","","    // Now that related models have been successfully paired, update each with","    // its parsed attributes","    related.map(function (model) {","      model.attributes = model.parse(model.attributes);","    });","","    return related;","  },","","","  parsePivot: function parsePivot(models) {","    var _this2 = this;","","    return _lodash2.default.map(models, function (model) {","","      // Separate pivot attributes.","      var grouped = _lodash2.default.reduce(model.attributes, function (acc, value, key) {","        if (hasPivotPrefix(key)) {","          acc.pivot[removePivotPrefix(key)] = value;","        } else {","          acc.model[key] = value;","        }","        return acc;","      }, { model: {}, pivot: {} });","","      // Assign non-pivot attributes to model.","      model.attributes = grouped.model;","","      // If there are any pivot attributes, create a new pivot model with these","      // attributes.","      if (!_lodash2.default.isEmpty(grouped.pivot)) {","        var Through = _this2.throughTarget;","        var tableName = _this2.joinTable();","        model.pivot = Through != null ? new Through(grouped.pivot) : new _this2.Model(grouped.pivot, { tableName: tableName });","      }","","      return model;","    });","  },","","  // A few predicates to help clarify some of the logic above.","  isThrough: function isThrough() {","    return this.throughTarget != null;","  },","  isJoined: function isJoined() {","    return this.type === 'belongsToMany' || this.isThrough();","  },","  isMorph: function isMorph() {","    return this.type === 'morphOne' || this.type === 'morphMany';","  },","  isSingle: function isSingle() {","    var type = this.type;","    return type === 'hasOne' || type === 'belongsTo' || type === 'morphOne' || type === 'morphTo';","  },","  isInverse: function isInverse() {","    return this.type === 'belongsTo' || this.type === 'morphTo';","  },","  isForeignKeyTargeted: function isForeignKeyTargeted() {","    return this.foreignKeyTarget != null;","  },","  isThroughForeignKeyTargeted: function isThroughForeignKeyTargeted() {","    return this.throughForeignKeyTarget != null;","  },","  isOtherKeyTargeted: function isOtherKeyTargeted() {","    return this.otherKeyTarget != null;","  },","  hasParentAttributes: function hasParentAttributes() {","    return this.parentAttributes != null;","  },","","","  // Sets the `pivotColumns` to be retrieved along with the current model.","  withPivot: function withPivot(columns) {","    if (!_lodash2.default.isArray(columns)) columns = [columns];","    this.pivotColumns = this.pivotColumns || [];","    push.apply(this.pivotColumns, columns);","  }","","});","","// Simple memoization of the singularize call.","","var singularMemo = function () {","  var cache = Object.create(null);","  return function (arg) {","    if (!(arg in cache)) {","      cache[arg] = _inflection2.default.singularize(arg);","    }","    return cache[arg];","  };","}();","","// Specific to many-to-many relationships, these methods are mixed","// into the `belongsToMany` relationships when they are created,","// providing helpers for attaching and detaching related models.","var pivotHelpers = {","","  /**","   * Attaches one or more `ids` or models from a foreign table to the current","   * table, on a {@linkplain many-to-many} relation. Creates and saves a new","   * model and attaches the model with the related model.","   *","   *     var admin1 = new Admin({username: 'user1', password: 'test'});","   *     var admin2 = new Admin({username: 'user2', password: 'test'});","   *","   *     Promise.all([admin1.save(), admin2.save()])","   *       .then(function() {","   *         return Promise.all([","   *         new Site({id: 1}).admins().attach([admin1, admin2]),","   *         new Site({id: 2}).admins().attach(admin2)","   *       ]);","   *     })","   *","   * This method (along with {@link Collection#detach} and {@link","   * Collection#updatePivot}) are mixed in to a {@link Collection} when","   * returned by a {@link Model#belongsToMany belongsToMany} relation.","   *","   * @method Collection#attach","   * @param {mixed|mixed[]} ids","   *   One or more ID values or models to be attached to the relation.","   * @param {Object} options","   *   A hash of options.","   * @param {Transaction} options.transacting","   *   Optionally run the query in a transaction.","   * @returns {Promise<Collection>}","   *   A promise resolving to the updated Collection.","   */","  attach: function attach(ids, options) {","    var _this3 = this;","","    return _promise2.default.try(function () {","      return _this3.triggerThen('attaching', _this3, ids, options);","    }).then(function () {","      return _this3._handler('insert', ids, options);","    }).then(function (response) {","      return _this3.triggerThen('attached', _this3, response, options);","    }).return(this);","  },","","","  /**","   * Detach one or more related objects from their pivot tables. If a model or","   * id is passed, it attempts to remove the pivot table based on that foreign","   * key. If no parameters are specified, we assume we will detach all related","   * associations.","   *","   * This method (along with {@link Collection#attach} and {@link","   * Collection#updatePivot}) are mixed in to a {@link Collection} when returned","   * by a {@link Model#belongsToMany belongsToMany} relation.","   *","   * @method Collection#detach","   * @param {mixed|mixed[]} [ids]","   *   One or more ID values or models to be detached from the relation.","   * @param {Object} options","   *   A hash of options.","   * @param {Transaction} options.transacting","   *   Optionally run the query in a transaction.","   * @returns {Promise<undefined>}","   *   A promise resolving to `undefined`.","   */","  detach: function detach(ids, options) {","    var _this4 = this;","","    return _promise2.default.try(function () {","      return _this4.triggerThen('detaching', _this4, ids, options);","    }).then(function () {","      return _this4._handler('delete', ids, options);","    }).then(function (response) {","      return _this4.triggerThen('detached', _this4, response, options);","    }).return(this);","  },","","","  /**","   * The `updatePivot` method is used exclusively on {@link Model#belongsToMany","   * belongsToMany} relations, and allows for updating pivot rows on the joining","   * table.","   *","   * This method (along with {@link Collection#attach} and {@link","   * Collection#detach}) are mixed in to a {@link Collection} when returned","   * by a {@link Model#belongsToMany belongsToMany} relation.","   *","   * @method Collection#updatePivot","   * @param {Object} attributes","   *   Values to be set in the `update` query.","   * @param {Object} [options]","   *   A hash of options.","   * @param {function|Object} [options.query]","   *   Constrain the update query. Similar to the `method` argument to {@link","   *   Model#query}.","   * @param {bool} [options.require=false]","   *   Causes promise to be rejected with an Error if no rows were updated.","   * @param {Transaction} [options.transacting]","   *   Optionally run the query in a transaction.","   * @returns {Promise<Number>}","   *   A promise resolving to number of rows updated.","   */","  updatePivot: function updatePivot(attributes, options) {","    return this._handler('update', attributes, options);","  },","","  /**","   * The `withPivot` method is used exclusively on {@link Model#belongsToMany","   * belongsToMany} relations, and allows for additional fields to be pulled","   * from the joining table.","   *","   *     var Tag = bookshelf.Model.extend({","   *       comments: function() {","   *         return this.belongsToMany(Comment).withPivot(['created_at', 'order']);","   *       }","   *     });","   *","   * @method Collection#withPivot","   * @param {string[]} columns","   *   Names of columns to be included when retrieving pivot table rows.","   * @returns {Collection}","   *   Self, this method is chainable.","   */","  withPivot: function withPivot(columns) {","    this.relatedData.withPivot(columns);","    return this;","  },","","  // Helper for handling either the `attach` or `detach` call on","  // the `belongsToMany` or `hasOne` / `hasMany` :through relationship.","  _handler: _promise2.default.method(function (method, ids, options) {","    var _this5 = this;","","    var pending = [];","    if (ids == null) {","      if (method === 'insert') return _promise2.default.resolve(this);","      if (method === 'delete') pending.push(this._processPivot(method, null, options));","    }","    if (!_lodash2.default.isArray(ids)) ids = ids ? [ids] : [];","    _lodash2.default.each(ids, function (id) {","      return pending.push(_this5._processPivot(method, id, options));","    });","    return _promise2.default.all(pending).return(this);","  }),","","  // Handles preparing the appropriate constraints and then delegates","  // the database interaction to _processPlainPivot for non-.through()","  // pivot definitions, or _processModelPivot for .through() models.","  // Returns a promise.","  _processPivot: _promise2.default.method(function (method, item) {","    var relatedData = this.relatedData,","        args = Array.prototype.slice.call(arguments),","        fks = {},","        data = {};","","    fks[relatedData.key('foreignKey')] = relatedData.parentFk;","","    // If the item is an object, it's either a model","    // that we're looking to attach to this model, or","    // a hash of attributes to set in the relation.","    if (_lodash2.default.isObject(item)) {","      if (item instanceof _model2.default) {","        fks[relatedData.key('otherKey')] = item.id;","      } else if (method !== 'update') {","        _lodash2.default.extend(data, item);","      }","    } else if (item) {","      fks[relatedData.key('otherKey')] = item;","    }","","    args.push(_lodash2.default.extend(data, fks), fks);","","    if (this.relatedData.throughTarget) {","      return this._processModelPivot.apply(this, args);","    }","","    return this._processPlainPivot.apply(this, args);","  }),","","  // Applies constraints to the knex builder and handles shelling out","  // to either the `insert` or `delete` call for the current model,","  // returning a promise.","  _processPlainPivot: _promise2.default.method(function (method, item, options, data) {","    var relatedData = this.relatedData;","","    // Grab the `knex` query builder for the current model, and","    // check if we have any additional constraints for the query.","    var builder = this._builder(relatedData.joinTable());","    if (options && options.query) {","      _helpers2.default.query.call(null, { _knex: builder }, [options.query]);","    }","","    if (options) {","      if (options.transacting) builder.transacting(options.transacting);","      if (options.debug) builder.debug();","    }","","    var collection = this;","    if (method === 'delete') {","      return builder.where(data).del().then(function () {","        if (!item) return collection.reset();","        var model = collection.get(data[relatedData.key('otherKey')]);","        if (model) {","          collection.remove(model);","        }","      });","    }","    if (method === 'update') {","      return builder.where(data).update(item).then(function (numUpdated) {","        if (options && options.require === true && numUpdated === 0) {","          throw new Error('No rows were updated');","        }","        return numUpdated;","      });","    }","","    return this.triggerThen('creating', this, data, options).then(function () {","      return builder.insert(data).then(function () {","        collection.add(item);","      });","    });","  }),","","  // Loads or prepares a pivot model based on the constraints and deals with","  // pivot model changes by calling the appropriate Bookshelf Model API","  // methods. Returns a promise.","  _processModelPivot: _promise2.default.method(function (method, item, options, data, fks) {","    var relatedData = this.relatedData,","        JoinModel = relatedData.throughTarget,","        joinModel = new JoinModel();","","    fks = joinModel.parse(fks);","    data = joinModel.parse(data);","","    if (method === 'insert') {","      return joinModel.set(data).save(null, options);","    }","","    return joinModel.set(fks).fetch({","      require: true","    }).then(function (instance) {","      if (method === 'delete') {","        return instance.destroy(options);","      }","      return instance.save(item, options);","    });","  })","","};"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":1,"21":1,"23":1,"25":1,"27":1,"29":1,"31":1,"33":6,"35":1,"38":1,"39":0,"41":1,"42":0,"45":1,"51":0,"52":0,"53":0,"57":0,"59":0,"62":0,"63":0,"66":0,"67":0,"69":0,"70":0,"72":0,"73":0,"76":0,"82":0,"83":0,"84":0,"87":0,"88":0,"90":0,"91":0,"93":0,"94":0,"95":0,"96":0,"99":0,"100":0,"101":0,"102":0,"105":0,"111":0,"112":0,"114":0,"115":0,"117":0,"118":0,"120":0,"123":0,"124":0,"125":0,"128":0,"129":0,"131":0,"132":0,"133":0,"135":0,"136":0,"138":0,"140":0,"141":0,"143":0,"144":0,"146":0,"152":0,"154":0,"155":0,"156":0,"159":0,"160":0,"163":0,"164":0,"168":0,"171":0,"172":0,"175":0,"178":0,"179":0,"180":0,"184":0,"187":0,"188":0,"191":0,"192":0,"195":0,"196":0,"199":0,"202":0,"203":0,"206":0,"207":0,"210":0,"213":0,"214":0,"217":0,"218":0,"219":0,"222":0,"223":0,"226":0,"227":0,"231":0,"234":0,"241":0,"244":0,"247":0,"250":0,"251":0,"254":0,"256":0,"257":0,"260":0,"264":0,"267":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"285":0,"287":0,"289":0,"291":0,"294":0,"295":0,"298":0,"305":0,"307":0,"308":0,"309":0,"311":0,"313":0,"315":0,"317":0,"320":0,"321":0,"322":0,"324":0,"325":0,"326":0,"327":0,"328":0,"334":0,"335":0,"340":0,"341":0,"347":0,"349":0,"353":0,"354":0,"355":0,"357":0,"362":0,"363":0,"365":0,"371":0,"374":0,"375":0,"376":0,"381":0,"384":0,"385":0,"386":0,"387":0,"390":0,"393":0,"394":0,"397":0,"402":0,"403":0,"404":0,"405":0,"407":0,"408":0,"409":0,"411":0,"412":0,"413":0,"418":0,"419":0,"422":0,"427":0,"429":0,"432":0,"433":0,"434":0,"436":0,"438":0,"442":0,"446":0,"447":0,"448":0,"449":0,"452":0,"458":0,"461":0,"464":0,"467":0,"468":0,"471":0,"474":0,"477":0,"480":0,"483":0,"489":0,"490":0,"491":0,"498":1,"499":1,"500":1,"501":0,"502":0,"504":0,"511":1,"544":0,"546":0,"547":0,"549":0,"551":0,"577":0,"579":0,"580":0,"582":0,"584":0,"614":0,"635":0,"636":0,"642":0,"644":0,"645":0,"646":0,"647":0,"649":0,"650":0,"651":0,"653":0,"661":0,"666":0,"671":0,"672":0,"673":0,"674":0,"675":0,"677":0,"678":0,"681":0,"683":0,"684":0,"687":0,"694":0,"698":0,"699":0,"700":0,"703":0,"704":0,"705":0,"708":0,"709":0,"710":0,"711":0,"712":0,"713":0,"714":0,"718":0,"719":0,"720":0,"721":0,"723":0,"727":0,"728":0,"729":0,"738":0,"742":0,"743":0,"745":0,"746":0,"749":0,"752":0,"753":0,"755":0}},"/home/travis/build/npmtest/node-npmtest-bookshelf/node_modules/bookshelf/lib/base/relation.js":{"path":"/home/travis/build/npmtest/node-npmtest-bookshelf/node_modules/bookshelf/lib/base/relation.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":4,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":1,"26":1,"27":1},"b":{"1":[2,2],"2":[4,4],"3":[0,0],"4":[0,0]},"f":{"1":4,"2":1,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":25,"loc":{"start":{"line":25,"column":0},"end":{"line":25,"column":37}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":19},"end":{"line":29,"column":31}}},"3":{"name":"RelationBase","line":30,"loc":{"start":{"line":30,"column":2},"end":{"line":30,"column":47}}},"4":{"name":"instance","line":46,"loc":{"start":{"line":46,"column":11},"end":{"line":46,"column":52}}},"5":{"name":"createModel","line":55,"loc":{"start":{"line":55,"column":11},"end":{"line":55,"column":38}}},"6":{"name":"eagerPair","line":66,"loc":{"start":{"line":66,"column":11},"end":{"line":66,"column":32}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":71}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":64}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":65}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":58}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":32}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":42}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":55}},"9":{"start":{"line":21,"column":0},"end":{"line":21,"column":35}},"10":{"start":{"line":23,"column":0},"end":{"line":23,"column":47}},"11":{"start":{"line":25,"column":0},"end":{"line":25,"column":95}},"12":{"start":{"line":25,"column":39},"end":{"line":25,"column":93}},"13":{"start":{"line":29,"column":0},"end":{"line":69,"column":4}},"14":{"start":{"line":30,"column":2},"end":{"line":38,"column":3}},"15":{"start":{"line":31,"column":4},"end":{"line":31,"column":54}},"16":{"start":{"line":33,"column":4},"end":{"line":36,"column":5}},"17":{"start":{"line":34,"column":6},"end":{"line":34,"column":80}},"18":{"start":{"line":35,"column":6},"end":{"line":35,"column":84}},"19":{"start":{"line":37,"column":4},"end":{"line":37,"column":71}},"20":{"start":{"line":44,"column":2},"end":{"line":67,"column":6}},"21":{"start":{"line":47,"column":6},"end":{"line":47,"column":57}},"22":{"start":{"line":56,"column":6},"end":{"line":58,"column":7}},"23":{"start":{"line":57,"column":8},"end":{"line":57,"column":62}},"24":{"start":{"line":59,"column":6},"end":{"line":59,"column":44}},"25":{"start":{"line":68,"column":2},"end":{"line":68,"column":22}},"26":{"start":{"line":72,"column":0},"end":{"line":72,"column":31}},"27":{"start":{"line":75,"column":0},"end":{"line":75,"column":64}}},"branchMap":{"1":{"line":25,"type":"cond-expr","locations":[{"start":{"line":25,"column":70},"end":{"line":25,"column":73}},{"start":{"line":25,"column":76},"end":{"line":25,"column":92}}]},"2":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":46},"end":{"line":25,"column":49}},{"start":{"line":25,"column":53},"end":{"line":25,"column":67}}]},"3":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":33,"column":4}},{"start":{"line":33,"column":4},"end":{"line":33,"column":4}}]},"4":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":6},"end":{"line":56,"column":6}},{"start":{"line":56,"column":6},"end":{"line":56,"column":6}}]}},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');","","var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);","","var _createClass2 = require('babel-runtime/helpers/createClass');","","var _createClass3 = _interopRequireDefault(_createClass2);","","var _lodash = require('lodash');","","var _collection = require('./collection');","","var _collection2 = _interopRequireDefault(_collection);","","var _extend = require('../extend');","","var _extend2 = _interopRequireDefault(_extend);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","// Used internally, the `Relation` helps in simplifying the relationship building,","// centralizing all logic dealing with type & option handling.","var RelationBase = function () {","  function RelationBase(type, Target, options) {","    (0, _classCallCheck3.default)(this, RelationBase);","","    if (Target != null) {","      this.targetTableName = (0, _lodash.result)(Target.prototype, 'tableName');","      this.targetIdAttribute = (0, _lodash.result)(Target.prototype, 'idAttribute');","    }","    (0, _lodash.assign)(this, { type: type, target: Target }, options);","  }","","  // Creates a new relation instance, used by the `Eager` relation in","  // dealing with `morphTo` cases, where the same relation is targeting multiple models.","","","  (0, _createClass3.default)(RelationBase, [{","    key: 'instance',","    value: function instance(type, Target, options) {","      return new this.constructor(type, Target, options);","    }","","    // Creates a new, unparsed model, used internally in the eager fetch helper","    // methods. (Parsing may mutate information necessary for eager pairing.)","","  }, {","    key: 'createModel',","    value: function createModel(data) {","      if (this.target.prototype instanceof _collection2.default) {","        return new this.target.prototype.model(data)._reset();","      }","      return new this.target(data)._reset();","    }","","    // Eager pair the models.","","  }, {","    key: 'eagerPair',","    value: function eagerPair() {}","  }]);","  return RelationBase;","}(); // Base Relation","// ---------------","","exports.default = RelationBase;","","","(0, _lodash.assign)(RelationBase, { extend: _extend2.default });"],"l":{"3":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":1,"21":1,"23":1,"25":4,"29":1,"30":1,"31":0,"33":0,"34":0,"35":0,"37":0,"44":1,"47":0,"56":0,"57":0,"59":0,"68":1,"72":1,"75":1}},"/home/travis/build/npmtest/node-npmtest-bookshelf/node_modules/bookshelf/lib/constants.js":{"path":"/home/travis/build/npmtest/node-npmtest-bookshelf/node_modules/bookshelf/lib/constants.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":52}}},"branchMap":{},"code":["'use strict';","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","var PIVOT_PREFIX = exports.PIVOT_PREFIX = '_pivot_';"],"l":{"3":1,"6":1}},"/home/travis/build/npmtest/node-npmtest-bookshelf/node_modules/bookshelf/scripts/promise.js":{"path":"/home/travis/build/npmtest/node-npmtest-bookshelf/node_modules/bookshelf/scripts/promise.js","s":{"1":2,"2":2,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":26},"end":{"line":4,"column":37}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":27},"end":{"line":8,"column":38}}},"3":{"name":"(anonymous_3)","line":12,"loc":{"start":{"line":12,"column":30},"end":{"line":12,"column":41}}},"4":{"name":"(anonymous_4)","line":16,"loc":{"start":{"line":16,"column":25},"end":{"line":16,"column":36}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":33}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":35}},"3":{"start":{"line":4,"column":0},"end":{"line":7,"column":1}},"4":{"start":{"line":5,"column":2},"end":{"line":5,"column":40}},"5":{"start":{"line":6,"column":2},"end":{"line":6,"column":44}},"6":{"start":{"line":8,"column":0},"end":{"line":11,"column":1}},"7":{"start":{"line":9,"column":2},"end":{"line":9,"column":42}},"8":{"start":{"line":10,"column":2},"end":{"line":10,"column":45}},"9":{"start":{"line":12,"column":0},"end":{"line":15,"column":1}},"10":{"start":{"line":13,"column":2},"end":{"line":13,"column":43}},"11":{"start":{"line":14,"column":2},"end":{"line":14,"column":43}},"12":{"start":{"line":16,"column":0},"end":{"line":19,"column":2}},"13":{"start":{"line":17,"column":2},"end":{"line":17,"column":61}},"14":{"start":{"line":18,"column":2},"end":{"line":18,"column":45}},"15":{"start":{"line":21,"column":0},"end":{"line":21,"column":24}}},"branchMap":{},"code":["var Promise = require('bluebird')","var helpers = require('../helpers')","","Promise.prototype.yield = function() {","  helpers.deprecate('.yield', '.return')","  return this.return.apply(this, arguments);","}","Promise.prototype.ensure = function() {","  helpers.deprecate('.ensure', '.finally')","  return this.finally.apply(this, arguments);","}","Promise.prototype.otherwise = function() {","  helpers.deprecate('.otherwise', '.catch')","  return this.catch.apply(this, arguments);","}","Promise.prototype.exec = function() {","  helpers.deprecate('bookshelf.exec', 'bookshelf.asCallback')","  return this.nodeify.apply(this, arguments);","};","","module.exports = Promise"],"l":{"1":2,"2":2,"4":0,"5":0,"6":0,"8":0,"9":0,"10":0,"12":0,"13":0,"14":0,"16":0,"17":0,"18":0,"21":0}},"/home/travis/build/npmtest/node-npmtest-bookshelf/node_modules/bookshelf/lib/plugins/pagination.js":{"path":"/home/travis/build/npmtest/node-npmtest-bookshelf/node_modules/bookshelf/lib/plugins/pagination.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":3,"10":1,"11":1,"12":1,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0},"b":{"1":[2,1],"2":[3,3],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"f":{"1":3,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":37}}},"2":{"name":"paginationPlugin","line":47,"loc":{"start":{"line":47,"column":17},"end":{"line":47,"column":54}}},"3":{"name":"fetchPage","line":115,"loc":{"start":{"line":115,"column":2},"end":{"line":115,"column":23}}},"4":{"name":"ensureIntWithDefault","line":132,"loc":{"start":{"line":132,"column":4},"end":{"line":132,"column":44}}},"5":{"name":"paginate","line":162,"loc":{"start":{"line":162,"column":19},"end":{"line":162,"column":39}}},"6":{"name":"(anonymous_6)","line":166,"loc":{"start":{"line":166,"column":25},"end":{"line":166,"column":39}}},"7":{"name":"count","line":174,"loc":{"start":{"line":174,"column":16},"end":{"line":174,"column":33}}},"8":{"name":"(anonymous_8)","line":178,"loc":{"start":{"line":178,"column":27},"end":{"line":178,"column":41}}},"9":{"name":"(anonymous_9)","line":184,"loc":{"start":{"line":184,"column":44},"end":{"line":184,"column":65}}},"10":{"name":"(anonymous_10)","line":188,"loc":{"start":{"line":188,"column":25},"end":{"line":188,"column":43}}},"11":{"name":"(anonymous_11)","line":208,"loc":{"start":{"line":208,"column":61},"end":{"line":208,"column":77}}},"12":{"name":"(anonymous_12)","line":221,"loc":{"start":{"line":221,"column":30},"end":{"line":221,"column":42}}},"13":{"name":"(anonymous_13)","line":227,"loc":{"start":{"line":227,"column":45},"end":{"line":227,"column":57}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":69}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":89}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":82}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":36}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":51}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":32}},"8":{"start":{"line":17,"column":0},"end":{"line":17,"column":95}},"9":{"start":{"line":17,"column":39},"end":{"line":17,"column":93}},"10":{"start":{"line":19,"column":0},"end":{"line":19,"column":23}},"11":{"start":{"line":20,"column":0},"end":{"line":20,"column":23}},"12":{"start":{"line":21,"column":0},"end":{"line":21,"column":21}},"13":{"start":{"line":47,"column":0},"end":{"line":234,"column":2}},"14":{"start":{"line":115,"column":2},"end":{"line":217,"column":3}},"15":{"start":{"line":116,"column":4},"end":{"line":116,"column":21}},"16":{"start":{"line":118,"column":4},"end":{"line":118,"column":89}},"17":{"start":{"line":119,"column":4},"end":{"line":123,"column":112}},"18":{"start":{"line":126,"column":4},"end":{"line":126,"column":30}},"19":{"start":{"line":127,"column":4},"end":{"line":127,"column":23}},"20":{"start":{"line":128,"column":4},"end":{"line":128,"column":27}},"21":{"start":{"line":129,"column":4},"end":{"line":129,"column":24}},"22":{"start":{"line":130,"column":4},"end":{"line":130,"column":25}},"23":{"start":{"line":132,"column":4},"end":{"line":143,"column":5}},"24":{"start":{"line":133,"column":6},"end":{"line":135,"column":7}},"25":{"start":{"line":134,"column":8},"end":{"line":134,"column":19}},"26":{"start":{"line":137,"column":6},"end":{"line":137,"column":31}},"27":{"start":{"line":138,"column":6},"end":{"line":140,"column":7}},"28":{"start":{"line":139,"column":8},"end":{"line":139,"column":19}},"29":{"start":{"line":142,"column":6},"end":{"line":142,"column":18}},"30":{"start":{"line":145,"column":4},"end":{"line":157,"column":5}},"31":{"start":{"line":146,"column":6},"end":{"line":146,"column":27}},"32":{"start":{"line":148,"column":6},"end":{"line":148,"column":64}},"33":{"start":{"line":149,"column":6},"end":{"line":149,"column":55}},"34":{"start":{"line":151,"column":6},"end":{"line":151,"column":25}},"35":{"start":{"line":152,"column":6},"end":{"line":152,"column":37}},"36":{"start":{"line":154,"column":6},"end":{"line":154,"column":25}},"37":{"start":{"line":155,"column":6},"end":{"line":155,"column":58}},"38":{"start":{"line":156,"column":6},"end":{"line":156,"column":61}},"39":{"start":{"line":159,"column":4},"end":{"line":159,"column":57}},"40":{"start":{"line":160,"column":4},"end":{"line":160,"column":109}},"41":{"start":{"line":162,"column":4},"end":{"line":172,"column":6}},"42":{"start":{"line":164,"column":6},"end":{"line":164,"column":44}},"43":{"start":{"line":166,"column":6},"end":{"line":171,"column":32}},"44":{"start":{"line":167,"column":8},"end":{"line":167,"column":55}},"45":{"start":{"line":168,"column":8},"end":{"line":168,"column":37}},"46":{"start":{"line":169,"column":8},"end":{"line":169,"column":39}},"47":{"start":{"line":170,"column":8},"end":{"line":170,"column":20}},"48":{"start":{"line":174,"column":4},"end":{"line":206,"column":6}},"49":{"start":{"line":175,"column":6},"end":{"line":175,"column":90}},"50":{"start":{"line":176,"column":6},"end":{"line":176,"column":46}},"51":{"start":{"line":178,"column":6},"end":{"line":205,"column":9}},"52":{"start":{"line":179,"column":8},"end":{"line":179,"column":55}},"53":{"start":{"line":184,"column":8},"end":{"line":186,"column":11}},"54":{"start":{"line":185,"column":10},"end":{"line":185,"column":99}},"55":{"start":{"line":187,"column":8},"end":{"line":187,"column":68}},"56":{"start":{"line":190,"column":8},"end":{"line":190,"column":110}},"57":{"start":{"line":192,"column":8},"end":{"line":202,"column":9}},"58":{"start":{"line":196,"column":10},"end":{"line":196,"column":40}},"59":{"start":{"line":197,"column":10},"end":{"line":197,"column":52}},"60":{"start":{"line":198,"column":10},"end":{"line":201,"column":11}},"61":{"start":{"line":199,"column":12},"end":{"line":199,"column":56}},"62":{"start":{"line":200,"column":12},"end":{"line":200,"column":65}},"63":{"start":{"line":204,"column":8},"end":{"line":204,"column":24}},"64":{"start":{"line":208,"column":4},"end":{"line":216,"column":7}},"65":{"start":{"line":209,"column":6},"end":{"line":211,"column":30}},"66":{"start":{"line":213,"column":6},"end":{"line":213,"column":60}},"67":{"start":{"line":214,"column":6},"end":{"line":214,"column":77}},"68":{"start":{"line":215,"column":6},"end":{"line":215,"column":65}},"69":{"start":{"line":219,"column":2},"end":{"line":219,"column":50}},"70":{"start":{"line":221,"column":2},"end":{"line":225,"column":4}},"71":{"start":{"line":222,"column":4},"end":{"line":222,"column":15}},"72":{"start":{"line":224,"column":4},"end":{"line":224,"column":70}},"73":{"start":{"line":227,"column":2},"end":{"line":233,"column":4}},"74":{"start":{"line":228,"column":4},"end":{"line":230,"column":5}},"75":{"start":{"line":229,"column":6},"end":{"line":229,"column":35}},"76":{"start":{"line":232,"column":4},"end":{"line":232,"column":79}}},"branchMap":{"1":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":70},"end":{"line":17,"column":73}},{"start":{"line":17,"column":76},"end":{"line":17,"column":92}}]},"2":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":46},"end":{"line":17,"column":49}},{"start":{"line":17,"column":53},"end":{"line":17,"column":67}}]},"3":{"line":118,"type":"cond-expr","locations":[{"start":{"line":118,"column":71},"end":{"line":118,"column":83}},{"start":{"line":118,"column":86},"end":{"line":118,"column":88}}]},"4":{"line":118,"type":"binary-expr","locations":[{"start":{"line":118,"column":18},"end":{"line":118,"column":38}},{"start":{"line":118,"column":42},"end":{"line":118,"column":68}}]},"5":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":6},"end":{"line":133,"column":6}},{"start":{"line":133,"column":6},"end":{"line":133,"column":6}}]},"6":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":6},"end":{"line":138,"column":6}},{"start":{"line":138,"column":6},"end":{"line":138,"column":6}}]},"7":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":4},"end":{"line":145,"column":4}},{"start":{"line":145,"column":4},"end":{"line":145,"column":4}}]},"8":{"line":145,"type":"binary-expr","locations":[{"start":{"line":145,"column":8},"end":{"line":145,"column":14}},{"start":{"line":145,"column":18},"end":{"line":145,"column":25}}]},"9":{"line":160,"type":"cond-expr","locations":[{"start":{"line":160,"column":63},"end":{"line":160,"column":101}},{"start":{"line":160,"column":104},"end":{"line":160,"column":108}}]},"10":{"line":185,"type":"binary-expr","locations":[{"start":{"line":185,"column":17},"end":{"line":185,"column":62}},{"start":{"line":185,"column":66},"end":{"line":185,"column":98}}]},"11":{"line":190,"type":"cond-expr","locations":[{"start":{"line":190,"column":39},"end":{"line":190,"column":72}},{"start":{"line":190,"column":75},"end":{"line":190,"column":109}}]},"12":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":8},"end":{"line":192,"column":8}},{"start":{"line":192,"column":8},"end":{"line":192,"column":8}}]},"13":{"line":192,"type":"binary-expr","locations":[{"start":{"line":192,"column":12},"end":{"line":192,"column":18}},{"start":{"line":192,"column":22},"end":{"line":192,"column":40}}]},"14":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":10},"end":{"line":198,"column":10}},{"start":{"line":198,"column":10},"end":{"line":198,"column":10}}]}},"code":["'use strict';","","var _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');","","var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);","","var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');","","var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);","","var _bluebird = require('bluebird');","","var _bluebird2 = _interopRequireDefault(_bluebird);","","var _lodash = require('lodash');","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","var DEFAULT_LIMIT = 10;","var DEFAULT_OFFSET = 0;","var DEFAULT_PAGE = 1;","","/**"," * Exports a plugin to pass into the bookshelf instance, i.e.:"," *"," *      import config from './knexfile';"," *      import knex from 'knex';"," *      import bookshelf from 'bookshelf';"," *"," *      const ORM = bookshelf(knex(config));"," *"," *      ORM.plugin('bookshelf-pagination-plugin');"," *"," *      export default ORM;"," *"," * The plugin attaches two instance methods to the bookshelf"," * Model object: orderBy and fetchPage."," *"," * Model#orderBy calls the underlying query builder's orderBy method, and"," * is useful for ordering the paginated results."," *"," * Model#fetchPage works like Model#fetchAll, but returns a single page of"," * results instead of all results, as well as the pagination information"," *"," * See methods below for details."," */","module.exports = function paginationPlugin(bookshelf) {","","  /**","   * @method Model#fetchPage","   * @belongsTo Model","   *","   * Similar to {@link Model#fetchAll}, but fetches a single page of results","   * as specified by the limit (page size) and offset or page number.","   *","   * Any options that may be passed to {@link Model#fetchAll} may also be passed","   * in the options to this method.","   *","   * To perform pagination, you may include *either* an `offset` and `limit`, **or**","   * a `page` and `pageSize`.","   *","   * By default, with no parameters or missing parameters, `fetchPage` will use an","   * options object of `{page: 1, pageSize: 10}`","   *","   *","   * Below is an example showing the user of a JOIN query with sort/ordering,","   * pagination, and related models.","   *","   * @example","   *","   * Car","   * .query(function (qb) {","   *    qb.innerJoin('manufacturers', 'cars.manufacturer_id', 'manufacturers.id');","   *    qb.groupBy('cars.id');","   *    qb.where('manufacturers.country', '=', 'Sweden');","   * })","   * .orderBy('-productionYear') // Same as .orderBy('cars.productionYear', 'DESC')","   * .fetchPage({","   *    pageSize: 15, // Defaults to 10 if not specified","   *    page: 3, // Defaults to 1 if not specified","   *","   *    // OR","   *    // limit: 15,","   *    // offset: 30,","   *","   *    withRelated: ['engine'] // Passed to Model#fetchAll","   * })","   * .then(function (results) {","   *    console.log(results); // Paginated results object with metadata example below","   * })","   *","   * // Pagination results:","   *","   * {","   *    models: [<Car>], // Regular bookshelf Collection","   *    // other standard Collection attributes","   *    ...","   *    pagination: {","   *        rowCount: 53, // Total number of rows found for the query before pagination","   *        pageCount: 4, // Total number of pages of results","   *        page: 3, // The requested page number","   *        pageSze: 15, // The requested number of rows per page","   *","   *  // OR, if limit/offset pagination is used instead of page/pageSize:","   *        // offset: 30, // The requested offset","   *        // limit: 15 // The requested limit","   *    }","   * }","   *","   * @param options {object}","   *    The pagination options, plus any additional options that will be passed to","   *    {@link Model#fetchAll}","   * @returns {Promise<Model|null>}","   */","  function fetchPage() {","    var _this = this;","","    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};","    var page = options.page,","        pageSize = options.pageSize,","        limit = options.limit,","        offset = options.offset,","        fetchOptions = (0, _objectWithoutProperties3.default)(options, ['page', 'pageSize', 'limit', 'offset']);","","","    var usingPageSize = false; // usingPageSize = false means offset/limit, true means page/pageSize","    var _page = void 0;","    var _pageSize = void 0;","    var _limit = void 0;","    var _offset = void 0;","","    function ensureIntWithDefault(val, def) {","      if (!val) {","        return def;","      }","","      var _val = parseInt(val);","      if (Number.isNaN(_val)) {","        return def;","      }","","      return _val;","    }","","    if (!limit && !offset) {","      usingPageSize = true;","","      _pageSize = ensureIntWithDefault(pageSize, DEFAULT_LIMIT);","      _page = ensureIntWithDefault(page, DEFAULT_PAGE);","","      _limit = _pageSize;","      _offset = _limit * (_page - 1);","    } else {","      _pageSize = _limit; // not used, just for eslint `const` error","      _limit = ensureIntWithDefault(limit, DEFAULT_LIMIT);","      _offset = ensureIntWithDefault(offset, DEFAULT_OFFSET);","    }","","    var tableName = this.constructor.prototype.tableName;","    var idAttribute = this.constructor.prototype.idAttribute ? this.constructor.prototype.idAttribute : 'id';","","    var paginate = function paginate() {","      // const pageQuery = clone(this.query());","      var pager = _this.constructor.forge();","","      return pager.query(function (qb) {","        (0, _lodash.assign)(qb, _this.query().clone());","        qb.limit.apply(qb, [_limit]);","        qb.offset.apply(qb, [_offset]);","        return null;","      }).fetchAll(fetchOptions);","    };","","    var count = function count() {","      var notNeededQueries = ['orderByBasic', 'orderByRaw', 'groupByBasic', 'groupByRaw'];","      var counter = _this.constructor.forge();","","      return counter.query(function (qb) {","        (0, _lodash.assign)(qb, _this.query().clone());","","        // Remove grouping and ordering. Ordering is unnecessary","        // for a count, and grouping returns the entire result set","        // What we want instead is to use `DISTINCT`","        (0, _lodash.remove)(qb._statements, function (statement) {","          return notNeededQueries.indexOf(statement.type) > -1 || statement.grouping === 'columns';","        });","        qb.countDistinct.apply(qb, [tableName + '.' + idAttribute]);","      }).fetchAll().then(function (result) {","","        var metadata = usingPageSize ? { page: _page, pageSize: _limit } : { offset: _offset, limit: _limit };","","        if (result && result.length == 1) {","          // We shouldn't have to do this, instead it should be","          // result.models[0].get('count')","          // but SQLite uses a really strange key name.","          var _count = result.models[0];","          var keys = Object.keys(_count.attributes);","          if (keys.length === 1) {","            var key = Object.keys(_count.attributes)[0];","            metadata.rowCount = parseInt(_count.attributes[key]);","          }","        }","","        return metadata;","      });","    };","","    return _bluebird2.default.join(paginate(), count()).then(function (_ref) {","      var _ref2 = (0, _slicedToArray3.default)(_ref, 2),","          rows = _ref2[0],","          metadata = _ref2[1];","","      var pageCount = Math.ceil(metadata.rowCount / _limit);","      var pageData = (0, _lodash.assign)(metadata, { pageCount: pageCount });","      return (0, _lodash.assign)(rows, { pagination: pageData });","    });","  }","","  bookshelf.Model.prototype.fetchPage = fetchPage;","","  bookshelf.Model.fetchPage = function () {","    var _forge;","","    return (_forge = this.forge()).fetchPage.apply(_forge, arguments);","  };","","  bookshelf.Collection.prototype.fetchPage = function () {","    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {","      args[_key] = arguments[_key];","    }","","    return fetchPage.apply.apply(fetchPage, [this.model.forge()].concat(args));","  };","};"],"l":{"3":1,"5":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":3,"19":1,"20":1,"21":1,"47":1,"115":1,"116":0,"118":0,"119":0,"126":0,"127":0,"128":0,"129":0,"130":0,"132":1,"133":0,"134":0,"137":0,"138":0,"139":0,"142":0,"145":0,"146":0,"148":0,"149":0,"151":0,"152":0,"154":0,"155":0,"156":0,"159":0,"160":0,"162":0,"164":0,"166":0,"167":0,"168":0,"169":0,"170":0,"174":0,"175":0,"176":0,"178":0,"179":0,"184":0,"185":0,"187":0,"190":0,"192":0,"196":0,"197":0,"198":0,"199":0,"200":0,"204":0,"208":0,"209":0,"213":0,"214":0,"215":0,"219":0,"221":0,"222":0,"224":0,"227":0,"228":0,"229":0,"232":0}},"/home/travis/build/npmtest/node-npmtest-bookshelf/node_modules/bookshelf/lib/plugins/registry.js":{"path":"/home/travis/build/npmtest/node-npmtest-bookshelf/node_modules/bookshelf/lib/plugins/registry.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":17},"end":{"line":9,"column":38}}},"2":{"name":"preventOverwrite","line":11,"loc":{"start":{"line":11,"column":2},"end":{"line":11,"column":41}}},"3":{"name":"(anonymous_3)","line":19,"loc":{"start":{"line":19,"column":20},"end":{"line":19,"column":60}}},"4":{"name":"(anonymous_4)","line":30,"loc":{"start":{"line":30,"column":25},"end":{"line":30,"column":70}}},"5":{"name":"(anonymous_5)","line":43,"loc":{"start":{"line":43,"column":22},"end":{"line":43,"column":38}}},"6":{"name":"resolveModel","line":51,"loc":{"start":{"line":51,"column":2},"end":{"line":51,"column":31}}},"7":{"name":"(anonymous_7)","line":53,"loc":{"start":{"line":53,"column":70},"end":{"line":53,"column":82}}},"8":{"name":"(anonymous_8)","line":67,"loc":{"start":{"line":67,"column":30},"end":{"line":67,"column":56}}},"9":{"name":"(anonymous_9)","line":75,"loc":{"start":{"line":75,"column":28},"end":{"line":75,"column":46}}},"10":{"name":"(anonymous_10)","line":82,"loc":{"start":{"line":82,"column":28},"end":{"line":82,"column":52}}},"11":{"name":"(anonymous_11)","line":83,"loc":{"start":{"line":83,"column":100},"end":{"line":83,"column":117}}},"12":{"name":"(anonymous_12)","line":90,"loc":{"start":{"line":90,"column":33},"end":{"line":90,"column":51}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":9,"column":0},"end":{"line":93,"column":2}},"3":{"start":{"line":11,"column":2},"end":{"line":13,"column":3}},"4":{"start":{"line":12,"column":4},"end":{"line":12,"column":83}},"5":{"start":{"line":12,"column":21},"end":{"line":12,"column":83}},"6":{"start":{"line":15,"column":2},"end":{"line":15,"column":48}},"7":{"start":{"line":19,"column":2},"end":{"line":29,"column":4}},"8":{"start":{"line":20,"column":4},"end":{"line":20,"column":55}},"9":{"start":{"line":21,"column":4},"end":{"line":27,"column":5}},"10":{"start":{"line":22,"column":6},"end":{"line":22,"column":43}},"11":{"start":{"line":23,"column":6},"end":{"line":25,"column":7}},"12":{"start":{"line":24,"column":8},"end":{"line":24,"column":62}},"13":{"start":{"line":26,"column":6},"end":{"line":26,"column":37}},"14":{"start":{"line":28,"column":4},"end":{"line":28,"column":78}},"15":{"start":{"line":30,"column":2},"end":{"line":40,"column":4}},"16":{"start":{"line":31,"column":4},"end":{"line":31,"column":65}},"17":{"start":{"line":32,"column":4},"end":{"line":38,"column":5}},"18":{"start":{"line":33,"column":6},"end":{"line":33,"column":48}},"19":{"start":{"line":34,"column":6},"end":{"line":36,"column":7}},"20":{"start":{"line":35,"column":8},"end":{"line":35,"column":77}},"21":{"start":{"line":37,"column":6},"end":{"line":37,"column":47}},"22":{"start":{"line":39,"column":4},"end":{"line":39,"column":88}},"23":{"start":{"line":43,"column":2},"end":{"line":45,"column":4}},"24":{"start":{"line":44,"column":4},"end":{"line":44,"column":18}},"25":{"start":{"line":51,"column":2},"end":{"line":58,"column":3}},"26":{"start":{"line":52,"column":4},"end":{"line":56,"column":5}},"27":{"start":{"line":53,"column":6},"end":{"line":55,"column":10}},"28":{"start":{"line":54,"column":8},"end":{"line":54,"column":99}},"29":{"start":{"line":57,"column":4},"end":{"line":57,"column":17}},"30":{"start":{"line":60,"column":2},"end":{"line":61,"column":30}},"31":{"start":{"line":66,"column":2},"end":{"line":66,"column":44}},"32":{"start":{"line":67,"column":2},"end":{"line":70,"column":4}},"33":{"start":{"line":69,"column":4},"end":{"line":69,"column":105}},"34":{"start":{"line":74,"column":2},"end":{"line":74,"column":40}},"35":{"start":{"line":75,"column":2},"end":{"line":77,"column":4}},"36":{"start":{"line":76,"column":4},"end":{"line":76,"column":92}},"37":{"start":{"line":81,"column":2},"end":{"line":81,"column":40}},"38":{"start":{"line":82,"column":2},"end":{"line":86,"column":4}},"39":{"start":{"line":83,"column":4},"end":{"line":85,"column":9}},"40":{"start":{"line":84,"column":6},"end":{"line":84,"column":33}},"41":{"start":{"line":89,"column":2},"end":{"line":89,"column":55}},"42":{"start":{"line":90,"column":2},"end":{"line":92,"column":4}},"43":{"start":{"line":91,"column":4},"end":{"line":91,"column":102}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":4},"end":{"line":12,"column":4}},{"start":{"line":12,"column":4},"end":{"line":12,"column":4}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":23},"end":{"line":15,"column":41}},{"start":{"line":15,"column":45},"end":{"line":15,"column":47}}]},"3":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":19},"end":{"line":20,"column":31}},{"start":{"line":20,"column":35},"end":{"line":20,"column":54}}]},"4":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":4}},{"start":{"line":21,"column":4},"end":{"line":21,"column":4}}]},"5":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":6},"end":{"line":23,"column":6}},{"start":{"line":23,"column":6},"end":{"line":23,"column":6}}]},"6":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":32},"end":{"line":28,"column":50}},{"start":{"line":28,"column":54},"end":{"line":28,"column":77}}]},"7":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":24},"end":{"line":31,"column":41}},{"start":{"line":31,"column":45},"end":{"line":31,"column":64}}]},"8":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":32,"column":4}},{"start":{"line":32,"column":4},"end":{"line":32,"column":4}}]},"9":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":6},"end":{"line":34,"column":6}},{"start":{"line":34,"column":6},"end":{"line":34,"column":6}}]},"10":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":37},"end":{"line":39,"column":60}},{"start":{"line":39,"column":64},"end":{"line":39,"column":87}}]},"11":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":52,"column":4}},{"start":{"line":52,"column":4},"end":{"line":52,"column":4}}]},"12":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":13},"end":{"line":53,"column":40}},{"start":{"line":53,"column":44},"end":{"line":53,"column":66}},{"start":{"line":53,"column":70},"end":{"line":55,"column":9}}]}},"code":["'use strict';","","var _lodash = require('lodash');","","// Registry Plugin -","// Create a central registry of model/collection constructors to","// help with the circular reference problem, and for convenience in relations.","// -----","module.exports = function (bookshelf) {","","  function preventOverwrite(store, name) {","    if (store[name]) throw new Error(name + ' is already defined in the registry');","  }","","  bookshelf.registry = bookshelf.registry || {};","","  // Set up the methods for storing and retrieving models","  // on the bookshelf instance.","  bookshelf.model = function (name, ModelCtor, staticProps) {","    this._models = this._models || Object.create(null);","    if (ModelCtor) {","      preventOverwrite(this._models, name);","      if ((0, _lodash.isPlainObject)(ModelCtor)) {","        ModelCtor = this.Model.extend(ModelCtor, staticProps);","      }","      this._models[name] = ModelCtor;","    }","    return this._models[name] = this._models[name] || bookshelf.resolve(name);","  };","  bookshelf.collection = function (name, CollectionCtor, staticProps) {","    this._collections = this._collections || Object.create(null);","    if (CollectionCtor) {","      preventOverwrite(this._collections, name);","      if ((0, _lodash.isPlainObject)(CollectionCtor)) {","        CollectionCtor = this.Collection.extend(CollectionCtor, staticProps);","      }","      this._collections[name] = CollectionCtor;","    }","    return this._collections[name] = this._collections[name] || bookshelf.resolve(name);","  };","","  // Provide a custom function to resolve the location of a model or collection.","  bookshelf.resolve = function (name) {","    return void 0;","  };","","  // Check the collection or module caches for a Model or Collection constructor,","  // returning if the input is not an object. Check for a collection first,","  // since these are potentially used with *-to-many relation. Otherwise, check for a","  // registered model, throwing an error if none are found.","  function resolveModel(input) {","    if (typeof input === 'string') {","      return bookshelf.collection(input) || bookshelf.model(input) || function () {","        throw new Error('The model ' + input + ' could not be resolved from the registry plugin.');","      }();","    }","    return input;","  }","","  var Collection = bookshelf.Collection,","      Model = bookshelf.Model;","","  // Re-implement the `bookshelf.Model` _relation method to include a check for","  // the registered model.","","  var _relation = Model.prototype._relation;","  Model.prototype._relation = function (method, Target) {","    // The second argument is always a model, so resolve it and call the original method.","    return _relation.apply(this, [method, resolveModel(Target)].concat((0, _lodash.drop)(arguments, 2)));","  };","","  // The `through` method doesn't use `_relation` beneath, so we have to","  // re-implement it specifically","  var through = Model.prototype.through;","  Model.prototype.through = function (Target) {","    return through.apply(this, [resolveModel(Target)].concat((0, _lodash.drop)(arguments)));","  };","","  // `morphTo` takes the relation name first, and then a variadic set of models so we","  // can't include it with the rest of the relational methods.","  var morphTo = Model.prototype.morphTo;","  Model.prototype.morphTo = function (relationName) {","    return morphTo.apply(this, [relationName].concat((0, _lodash.map)((0, _lodash.drop)(arguments), function (model) {","      return resolveModel(model);","    })));","  };","","  // The `through` method exists on the Collection as well, for `hasMany` / `belongsToMany` through relations.","  var collectionThrough = Collection.prototype.through;","  Collection.prototype.through = function (Target) {","    return collectionThrough.apply(this, [resolveModel(Target)].concat((0, _lodash.drop)(arguments)));","  };","};"],"l":{"3":1,"9":1,"11":1,"12":0,"15":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"26":0,"28":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"37":0,"39":0,"43":0,"44":0,"51":1,"52":0,"53":0,"54":0,"57":0,"60":0,"66":0,"67":0,"69":0,"74":0,"75":0,"76":0,"81":0,"82":0,"83":0,"84":0,"89":0,"90":0,"91":0}},"/home/travis/build/npmtest/node-npmtest-bookshelf/node_modules/bookshelf/lib/plugins/virtuals.js":{"path":"/home/travis/build/npmtest/node-npmtest-bookshelf/node_modules/bookshelf/lib/plugins/virtuals.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":3,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":1,"66":0,"67":0,"68":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0},"b":{"1":[1,2],"2":[3,3],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0]},"f":{"1":3,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":17},"end":{"line":20,"column":38}}},"3":{"name":"constructor","line":28,"loc":{"start":{"line":28,"column":17},"end":{"line":28,"column":59}}},"4":{"name":"toJSON","line":54,"loc":{"start":{"line":54,"column":12},"end":{"line":54,"column":37}}},"5":{"name":"get","line":65,"loc":{"start":{"line":65,"column":9},"end":{"line":65,"column":28}}},"6":{"name":"set","line":75,"loc":{"start":{"line":75,"column":9},"end":{"line":75,"column":43}}},"7":{"name":"save","line":110,"loc":{"start":{"line":110,"column":10},"end":{"line":110,"column":45}}},"8":{"name":"(anonymous_8)","line":139,"loc":{"start":{"line":139,"column":39},"end":{"line":139,"column":61}}},"9":{"name":"(anonymous_9)","line":166,"loc":{"start":{"line":166,"column":38},"end":{"line":166,"column":56}}},"10":{"name":"(anonymous_10)","line":167,"loc":{"start":{"line":167,"column":30},"end":{"line":167,"column":42}}},"11":{"name":"getVirtual","line":172,"loc":{"start":{"line":172,"column":2},"end":{"line":172,"column":42}}},"12":{"name":"getVirtuals","line":180,"loc":{"start":{"line":180,"column":2},"end":{"line":180,"column":30}}},"13":{"name":"setVirtual","line":192,"loc":{"start":{"line":192,"column":2},"end":{"line":192,"column":34}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":55}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":48}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":32}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":47}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":36}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":51}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":95}},"8":{"start":{"line":15,"column":39},"end":{"line":15,"column":93}},"9":{"start":{"line":20,"column":0},"end":{"line":203,"column":2}},"10":{"start":{"line":22,"column":2},"end":{"line":22,"column":40}},"11":{"start":{"line":23,"column":2},"end":{"line":160,"column":5}},"12":{"start":{"line":29,"column":6},"end":{"line":29,"column":47}},"13":{"start":{"line":30,"column":6},"end":{"line":30,"column":35}},"14":{"start":{"line":32,"column":6},"end":{"line":48,"column":7}},"15":{"start":{"line":33,"column":8},"end":{"line":47,"column":9}},"16":{"start":{"line":34,"column":10},"end":{"line":35,"column":30}},"17":{"start":{"line":36,"column":10},"end":{"line":41,"column":11}},"18":{"start":{"line":37,"column":12},"end":{"line":37,"column":47}},"19":{"start":{"line":38,"column":12},"end":{"line":38,"column":87}},"20":{"start":{"line":40,"column":12},"end":{"line":40,"column":43}},"21":{"start":{"line":42,"column":10},"end":{"line":46,"column":13}},"22":{"start":{"line":55,"column":6},"end":{"line":55,"column":51}},"23":{"start":{"line":56,"column":6},"end":{"line":60,"column":7}},"24":{"start":{"line":57,"column":8},"end":{"line":59,"column":9}},"25":{"start":{"line":58,"column":10},"end":{"line":58,"column":68}},"26":{"start":{"line":61,"column":6},"end":{"line":61,"column":19}},"27":{"start":{"line":66,"column":6},"end":{"line":66,"column":35}},"28":{"start":{"line":68,"column":6},"end":{"line":70,"column":7}},"29":{"start":{"line":69,"column":8},"end":{"line":69,"column":38}},"30":{"start":{"line":71,"column":6},"end":{"line":71,"column":46}},"31":{"start":{"line":77,"column":6},"end":{"line":79,"column":7}},"32":{"start":{"line":78,"column":8},"end":{"line":78,"column":20}},"33":{"start":{"line":83,"column":6},"end":{"line":83,"column":52}},"34":{"start":{"line":86,"column":6},"end":{"line":93,"column":7}},"35":{"start":{"line":87,"column":8},"end":{"line":87,"column":96}},"36":{"start":{"line":88,"column":8},"end":{"line":90,"column":9}},"37":{"start":{"line":89,"column":10},"end":{"line":89,"column":69}},"38":{"start":{"line":92,"column":8},"end":{"line":92,"column":58}},"39":{"start":{"line":96,"column":6},"end":{"line":98,"column":7}},"40":{"start":{"line":97,"column":8},"end":{"line":97,"column":20}},"41":{"start":{"line":102,"column":6},"end":{"line":104,"column":7}},"42":{"start":{"line":103,"column":8},"end":{"line":103,"column":42}},"43":{"start":{"line":106,"column":6},"end":{"line":106,"column":46}},"44":{"start":{"line":111,"column":6},"end":{"line":111,"column":25}},"45":{"start":{"line":114,"column":6},"end":{"line":120,"column":7}},"46":{"start":{"line":115,"column":8},"end":{"line":115,"column":57}},"47":{"start":{"line":116,"column":8},"end":{"line":116,"column":54}},"48":{"start":{"line":118,"column":8},"end":{"line":118,"column":34}},"49":{"start":{"line":119,"column":8},"end":{"line":119,"column":65}},"50":{"start":{"line":123,"column":6},"end":{"line":123,"column":48}},"51":{"start":{"line":126,"column":6},"end":{"line":156,"column":7}},"52":{"start":{"line":131,"column":8},"end":{"line":131,"column":34}},"53":{"start":{"line":134,"column":8},"end":{"line":155,"column":9}},"54":{"start":{"line":139,"column":10},"end":{"line":146,"column":24}},"55":{"start":{"line":141,"column":12},"end":{"line":145,"column":13}},"56":{"start":{"line":144,"column":14},"end":{"line":144,"column":32}},"57":{"start":{"line":149,"column":10},"end":{"line":149,"column":63}},"58":{"start":{"line":151,"column":10},"end":{"line":151,"column":46}},"59":{"start":{"line":154,"column":10},"end":{"line":154,"column":38}},"60":{"start":{"line":158,"column":6},"end":{"line":158,"column":51}},"61":{"start":{"line":163,"column":2},"end":{"line":163,"column":77}},"62":{"start":{"line":166,"column":2},"end":{"line":170,"column":5}},"63":{"start":{"line":167,"column":4},"end":{"line":169,"column":6}},"64":{"start":{"line":168,"column":6},"end":{"line":168,"column":175}},"65":{"start":{"line":172,"column":2},"end":{"line":178,"column":3}},"66":{"start":{"line":173,"column":4},"end":{"line":173,"column":34}},"67":{"start":{"line":175,"column":4},"end":{"line":177,"column":5}},"68":{"start":{"line":176,"column":6},"end":{"line":176,"column":115}},"69":{"start":{"line":180,"column":2},"end":{"line":190,"column":3}},"70":{"start":{"line":181,"column":4},"end":{"line":181,"column":34}},"71":{"start":{"line":183,"column":4},"end":{"line":183,"column":19}},"72":{"start":{"line":184,"column":4},"end":{"line":188,"column":5}},"73":{"start":{"line":185,"column":6},"end":{"line":187,"column":7}},"74":{"start":{"line":186,"column":8},"end":{"line":186,"column":60}},"75":{"start":{"line":189,"column":4},"end":{"line":189,"column":17}},"76":{"start":{"line":192,"column":2},"end":{"line":200,"column":3}},"77":{"start":{"line":193,"column":4},"end":{"line":193,"column":54}},"78":{"start":{"line":194,"column":4},"end":{"line":199,"column":5}},"79":{"start":{"line":195,"column":6},"end":{"line":197,"column":7}},"80":{"start":{"line":196,"column":8},"end":{"line":196,"column":38}},"81":{"start":{"line":198,"column":6},"end":{"line":198,"column":18}},"82":{"start":{"line":202,"column":2},"end":{"line":202,"column":26}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":73}},{"start":{"line":15,"column":76},"end":{"line":15,"column":92}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":46},"end":{"line":15,"column":49}},{"start":{"line":15,"column":53},"end":{"line":15,"column":67}}]},"3":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":6},"end":{"line":32,"column":6}},{"start":{"line":32,"column":6},"end":{"line":32,"column":6}}]},"4":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":10},"end":{"line":36,"column":10}},{"start":{"line":36,"column":10},"end":{"line":36,"column":10}}]},"5":{"line":38,"type":"cond-expr","locations":[{"start":{"line":38,"column":49},"end":{"line":38,"column":74}},{"start":{"line":38,"column":77},"end":{"line":38,"column":86}}]},"6":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":6},"end":{"line":56,"column":6}},{"start":{"line":56,"column":6},"end":{"line":56,"column":6}}]},"7":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":10},"end":{"line":56,"column":18}},{"start":{"line":56,"column":22},"end":{"line":56,"column":48}}]},"8":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":8},"end":{"line":57,"column":8}},{"start":{"line":57,"column":8},"end":{"line":57,"column":8}}]},"9":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":12},"end":{"line":57,"column":19}},{"start":{"line":57,"column":23},"end":{"line":57,"column":48}},{"start":{"line":57,"column":52},"end":{"line":57,"column":71}}]},"10":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":6},"end":{"line":68,"column":6}},{"start":{"line":68,"column":6},"end":{"line":68,"column":6}}]},"11":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":10},"end":{"line":68,"column":45}},{"start":{"line":68,"column":49},"end":{"line":68,"column":63}}]},"12":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":6},"end":{"line":77,"column":6}},{"start":{"line":77,"column":6},"end":{"line":77,"column":6}}]},"13":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":6},"end":{"line":86,"column":6}},{"start":{"line":86,"column":6},"end":{"line":86,"column":6}}]},"14":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":8},"end":{"line":88,"column":8}},{"start":{"line":88,"column":8},"end":{"line":88,"column":8}}]},"15":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":6},"end":{"line":96,"column":6}},{"start":{"line":96,"column":6},"end":{"line":96,"column":6}}]},"16":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":6},"end":{"line":102,"column":6}},{"start":{"line":102,"column":6},"end":{"line":102,"column":6}}]},"17":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":6},"end":{"line":114,"column":6}},{"start":{"line":114,"column":6},"end":{"line":114,"column":6}}]},"18":{"line":114,"type":"binary-expr","locations":[{"start":{"line":114,"column":10},"end":{"line":114,"column":21}},{"start":{"line":114,"column":25},"end":{"line":114,"column":109}}]},"19":{"line":114,"type":"cond-expr","locations":[{"start":{"line":114,"column":55},"end":{"line":114,"column":66}},{"start":{"line":114,"column":69},"end":{"line":114,"column":95}}]},"20":{"line":115,"type":"binary-expr","locations":[{"start":{"line":115,"column":16},"end":{"line":115,"column":19}},{"start":{"line":115,"column":23},"end":{"line":115,"column":50}},{"start":{"line":115,"column":54},"end":{"line":115,"column":56}}]},"21":{"line":116,"type":"binary-expr","locations":[{"start":{"line":116,"column":18},"end":{"line":116,"column":47}},{"start":{"line":116,"column":51},"end":{"line":116,"column":53}}]},"22":{"line":119,"type":"cond-expr","locations":[{"start":{"line":119,"column":28},"end":{"line":119,"column":59}},{"start":{"line":119,"column":62},"end":{"line":119,"column":64}}]},"23":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":6},"end":{"line":126,"column":6}},{"start":{"line":126,"column":6},"end":{"line":126,"column":6}}]},"24":{"line":126,"type":"binary-expr","locations":[{"start":{"line":126,"column":10},"end":{"line":126,"column":37}},{"start":{"line":126,"column":41},"end":{"line":126,"column":54}}]},"25":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":12},"end":{"line":141,"column":12}},{"start":{"line":141,"column":12},"end":{"line":141,"column":12}}]},"26":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":4},"end":{"line":175,"column":4}},{"start":{"line":175,"column":4},"end":{"line":175,"column":4}}]},"27":{"line":175,"type":"binary-expr","locations":[{"start":{"line":175,"column":8},"end":{"line":175,"column":43}},{"start":{"line":175,"column":47},"end":{"line":175,"column":68}}]},"28":{"line":176,"type":"cond-expr","locations":[{"start":{"line":176,"column":41},"end":{"line":176,"column":78}},{"start":{"line":176,"column":81},"end":{"line":176,"column":114}}]},"29":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":4},"end":{"line":184,"column":4}},{"start":{"line":184,"column":4},"end":{"line":184,"column":4}}]},"30":{"line":193,"type":"binary-expr","locations":[{"start":{"line":193,"column":18},"end":{"line":193,"column":31}},{"start":{"line":193,"column":35},"end":{"line":193,"column":53}}]},"31":{"line":194,"type":"if","locations":[{"start":{"line":194,"column":4},"end":{"line":194,"column":4}},{"start":{"line":194,"column":4},"end":{"line":194,"column":4}}]},"32":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":6},"end":{"line":195,"column":6}},{"start":{"line":195,"column":6},"end":{"line":195,"column":6}}]}},"code":["'use strict';","","var _typeof2 = require('babel-runtime/helpers/typeof');","","var _typeof3 = _interopRequireDefault(_typeof2);","","var _lodash = require('lodash');","","var _lodash2 = _interopRequireDefault(_lodash);","","var _bluebird = require('bluebird');","","var _bluebird2 = _interopRequireDefault(_bluebird);","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","// Virtuals Plugin","// Allows getting/setting virtual (computed) properties on model instances.","// -----","module.exports = function (Bookshelf) {","","  var proto = Bookshelf.Model.prototype;","  var Model = Bookshelf.Model.extend({","    outputVirtuals: true,","","    // If virtual properties have been defined they will be created","    // as simple getters on the model.","    constructor: function constructor(attributes, options) {","      proto.constructor.apply(this, arguments);","      var virtuals = this.virtuals;","","      if (_lodash2.default.isObject(virtuals)) {","        for (var virtualName in virtuals) {","          var getter = void 0,","              setter = void 0;","          if (virtuals[virtualName].get) {","            getter = virtuals[virtualName].get;","            setter = virtuals[virtualName].set ? virtuals[virtualName].set : undefined;","          } else {","            getter = virtuals[virtualName];","          }","          Object.defineProperty(this, virtualName, {","            enumerable: true,","            get: getter,","            set: setter","          });","        }","      }","    },","","    // Passing `{virtuals: true}` or `{virtuals: false}` in the `options`","    // controls including virtuals on function-level and overrides the","    // model-level setting","    toJSON: function toJSON(options) {","      var attrs = proto.toJSON.call(this, options);","      if (!options || options.virtuals !== false) {","        if (options && options.virtuals === true || this.outputVirtuals) {","          attrs = _lodash2.default.extend(attrs, getVirtuals(this));","        }","      }","      return attrs;","    },","","    // Allow virtuals to be fetched like normal properties","    get: function get(attr) {","      var virtuals = this.virtuals;","","      if (_lodash2.default.isObject(virtuals) && virtuals[attr]) {","        return getVirtual(this, attr);","      }","      return proto.get.apply(this, arguments);","    },","","    // Allow virtuals to be set like normal properties","    set: function set(key, value, options) {","","      if (key == null) {","        return this;","      }","","      // Determine whether we're in the middle of a patch operation based on the","      // existance of the `patchAttributes` object.","      var isPatching = this.patchAttributes != null;","","      // Handle `{key: value}` style arguments.","      if (_lodash2.default.isObject(key)) {","        var nonVirtuals = _lodash2.default.omitBy(key, _lodash2.default.bind(setVirtual, this));","        if (isPatching) {","          _lodash2.default.extend(this.patchAttributes, nonVirtuals);","        }","        // Set the non-virtual attributes as normal.","        return proto.set.call(this, nonVirtuals, options);","      }","","      // Handle `\"key\", value` style arguments for virtual setter.","      if (setVirtual.call(this, value, key)) {","        return this;","      }","","      // Handle `\"key\", value` style assignment call to be added to patching","      // attributes if set(\"key\", value, ...) called from inside a virtual setter.","      if (isPatching) {","        this.patchAttributes[key] = value;","      }","","      return proto.set.apply(this, arguments);","    },","","    // Override `save` to keep track of state while doing a `patch` operation.","    save: function save(key, value, options) {","      var attrs = void 0;","","      // Handle both `\"key\", value` and `{key: value}` -style arguments.","      if (key == null || (typeof key === 'undefined' ? 'undefined' : (0, _typeof3.default)(key)) === \"object\") {","        attrs = key && _lodash2.default.clone(key) || {};","        options = _lodash2.default.clone(value) || {};","      } else {","        (attrs = {})[key] = value;","        options = options ? _lodash2.default.clone(options) : {};","      }","","      // Determine whether which kind of save we will do, update or insert.","      options.method = this.saveMethod(options);","","      // Check if we're going to do a patch, in which case deal with virtuals now.","      if (options.method === 'update' && options.patch) {","","        // Extend the model state to collect side effects from the virtual setter","        // callback. If `set` is called, this object will be updated in addition","        // to the normal `attributes` object.","        this.patchAttributes = {};","","        // Any setter could throw. We need to reject `save` if they do.","        try {","","          // Check if any of the patch attribues are virtuals. If so call their","          // setter. Any setter that calls `this.set` will be modifying","          // `this.patchAttributes` instead of `this.attributes`.","          _lodash2.default.each(attrs, function (value, key) {","","            if (setVirtual.call(this, value, key)) {","              // This was a virtual, so remove it from the attributes to be","              // passed to `Model.save`.","              delete attrs[key];","            }","          }.bind(this));","","          // Now add any changes that occurred during the update.","          _lodash2.default.extend(attrs, this.patchAttributes);","        } catch (e) {","          return _bluebird2.default.reject(e);","        } finally {","          // Delete the temporary object.","          delete this.patchAttributes;","        }","      }","","      return proto.save.call(this, attrs, options);","    }","  });","","  // Underscore methods that we want to implement on the Model.","  var modelMethods = ['keys', 'values', 'toPairs', 'invert', 'pick', 'omit'];","","  // Mix in each Lodash method as a proxy to `Model#attributes`.","  _lodash2.default.each(modelMethods, function (method) {","    Model.prototype[method] = function () {","      return _lodash2.default[method].apply(_lodash2.default, [_lodash2.default.extend({}, this.attributes, getVirtuals(this))].concat(Array.prototype.slice.call(arguments)));","    };","  });","","  function getVirtual(model, virtualName) {","    var virtuals = model.virtuals;","","    if (_lodash2.default.isObject(virtuals) && virtuals[virtualName]) {","      return virtuals[virtualName].get ? virtuals[virtualName].get.call(model) : virtuals[virtualName].call(model);","    }","  }","","  function getVirtuals(model) {","    var virtuals = model.virtuals;","","    var attrs = {};","    if (virtuals != null) {","      for (var virtualName in virtuals) {","        attrs[virtualName] = getVirtual(model, virtualName);","      }","    }","    return attrs;","  }","","  function setVirtual(value, key) {","    var virtual = this.virtuals && this.virtuals[key];","    if (virtual) {","      if (virtual.set) {","        virtual.set.call(this, value);","      }","      return true;","    }","  }","","  Bookshelf.Model = Model;","};"],"l":{"3":1,"5":1,"7":1,"9":1,"11":1,"13":1,"15":3,"20":1,"22":0,"23":0,"29":0,"30":0,"32":0,"33":0,"34":0,"36":0,"37":0,"38":0,"40":0,"42":0,"55":0,"56":0,"57":0,"58":0,"61":0,"66":0,"68":0,"69":0,"71":0,"77":0,"78":0,"83":0,"86":0,"87":0,"88":0,"89":0,"92":0,"96":0,"97":0,"102":0,"103":0,"106":0,"111":0,"114":0,"115":0,"116":0,"118":0,"119":0,"123":0,"126":0,"131":0,"134":0,"139":0,"141":0,"144":0,"149":0,"151":0,"154":0,"158":0,"163":0,"166":0,"167":0,"168":0,"172":1,"173":0,"175":0,"176":0,"180":1,"181":0,"183":0,"184":0,"185":0,"186":0,"189":0,"192":1,"193":0,"194":0,"195":0,"196":0,"198":0,"202":0}},"/home/travis/build/npmtest/node-npmtest-bookshelf/node_modules/bookshelf/lib/plugins/visibility.js":{"path":"/home/travis/build/npmtest/node-npmtest-bookshelf/node_modules/bookshelf/lib/plugins/visibility.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"b":{"1":[1,0],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"_interopRequireDefault","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":37}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":17},"end":{"line":14,"column":38}}},"3":{"name":"constructor","line":28,"loc":{"start":{"line":28,"column":17},"end":{"line":28,"column":40}}},"4":{"name":"toJSON","line":41,"loc":{"start":{"line":41,"column":12},"end":{"line":41,"column":30}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":77}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":70}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":32}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":95}},"5":{"start":{"line":9,"column":39},"end":{"line":9,"column":93}},"6":{"start":{"line":14,"column":0},"end":{"line":55,"column":2}},"7":{"start":{"line":15,"column":2},"end":{"line":15,"column":40}},"8":{"start":{"line":16,"column":2},"end":{"line":16,"column":29}},"9":{"start":{"line":18,"column":2},"end":{"line":52,"column":5}},"10":{"start":{"line":29,"column":6},"end":{"line":29,"column":47}},"11":{"start":{"line":30,"column":6},"end":{"line":30,"column":39}},"12":{"start":{"line":31,"column":6},"end":{"line":33,"column":7}},"13":{"start":{"line":32,"column":8},"end":{"line":32,"column":59}},"14":{"start":{"line":34,"column":6},"end":{"line":36,"column":7}},"15":{"start":{"line":35,"column":8},"end":{"line":35,"column":57}},"16":{"start":{"line":42,"column":6},"end":{"line":42,"column":48}},"17":{"start":{"line":43,"column":6},"end":{"line":45,"column":7}},"18":{"start":{"line":44,"column":8},"end":{"line":44,"column":108}},"19":{"start":{"line":46,"column":6},"end":{"line":48,"column":7}},"20":{"start":{"line":47,"column":8},"end":{"line":47,"column":107}},"21":{"start":{"line":49,"column":6},"end":{"line":49,"column":18}},"22":{"start":{"line":54,"column":2},"end":{"line":54,"column":26}}},"branchMap":{"1":{"line":9,"type":"cond-expr","locations":[{"start":{"line":9,"column":70},"end":{"line":9,"column":73}},{"start":{"line":9,"column":76},"end":{"line":9,"column":92}}]},"2":{"line":9,"type":"binary-expr","locations":[{"start":{"line":9,"column":46},"end":{"line":9,"column":49}},{"start":{"line":9,"column":53},"end":{"line":9,"column":67}}]},"3":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":20},"end":{"line":30,"column":32}},{"start":{"line":30,"column":36},"end":{"line":30,"column":38}}]},"4":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":6},"end":{"line":31,"column":6}},{"start":{"line":31,"column":6},"end":{"line":31,"column":6}}]},"5":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":6},"end":{"line":34,"column":6}},{"start":{"line":34,"column":6},"end":{"line":34,"column":6}}]},"6":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":6},"end":{"line":43,"column":6}},{"start":{"line":43,"column":6},"end":{"line":43,"column":6}}]},"7":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":6},"end":{"line":46,"column":6}},{"start":{"line":46,"column":6},"end":{"line":46,"column":6}}]}},"code":["'use strict';","","var _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');","","var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);","","var _lodash = require('lodash');","","function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","","// Visibility plugin -","// Useful for hiding/showing particular attributes on `toJSON`.","// -----","module.exports = function (Bookshelf) {","  var proto = Bookshelf.Model.prototype;","  var _toJSON = proto.toJSON;","","  var Model = Bookshelf.Model.extend({","","    // Replace with an array of properties to blacklist on `toJSON`.","    hidden: null,","","    // Replace with an array of properties to whitelist on `toJSON`.","    visible: null,","","    // If `visible` or `hidden` are specified in the `options` hash,","    // they're assumed to override whatever is on the model's prototype.","    constructor: function constructor() {","      proto.constructor.apply(this, arguments);","      var options = arguments[1] || {};","      if (options.visible) {","        this.visible = (0, _lodash.clone)(options.visible);","      }","      if (options.hidden) {","        this.hidden = (0, _lodash.clone)(options.hidden);","      }","    },","","    // Checks the `visible` and then `hidden` properties to see if there are","    // any keys we don't want to show when the object is json-ified.","    toJSON: function toJSON() {","      var json = _toJSON.apply(this, arguments);","      if (this.visible) {","        json = _lodash.pick.apply(undefined, (0, _toConsumableArray3.default)([json].concat(this.visible)));","      }","      if (this.hidden) {","        json = _lodash.omit.apply(undefined, (0, _toConsumableArray3.default)([json].concat(this.hidden)));","      }","      return json;","    }","","  });","","  Bookshelf.Model = Model;","};"],"l":{"3":1,"5":1,"7":1,"9":1,"14":1,"15":0,"16":0,"18":0,"29":0,"30":0,"31":0,"32":0,"34":0,"35":0,"42":0,"43":0,"44":0,"46":0,"47":0,"49":0,"54":0}}}